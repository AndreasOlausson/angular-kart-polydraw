{"version":3,"file":"my-lib.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://my-lib/lib/map-state.service.ts","ng://my-lib/lib/enums.ts","ng://my-lib/lib/utils.ts","ng://my-lib/lib/turf-helper.service.ts","ng://my-lib/lib/polygon.util.ts","ng://my-lib/lib/polygon-helpers.ts","ng://my-lib/lib/polygon-information.service.ts","ng://my-lib/lib/popups/alter-polygon/alter-polygon.component.ts","ng://my-lib/lib/component-generater.service.ts","ng://my-lib/lib/leaflet-helper.service.ts","ng://my-lib/lib/polydraw.service.ts","ng://my-lib/lib/my-lib.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport * as L from \"leaflet\"\nimport { ILatLng } from './polygon-helpers';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PolyStateService {\n    constructor() { }\n    \n\n    private mapSubject = new BehaviorSubject<L.Map>(null); \n    \n    map$: Observable<L.Map> = this.mapSubject.asObservable();\n    private polygonSubject = new BehaviorSubject<ILatLng[][][]>(null); \n\n    polygons$: Observable<ILatLng[][][]> = this.polygonSubject.asObservable();\n    private mapStateSubject = new BehaviorSubject<MapStateModel>(new MapStateModel());\n    mapState$: Observable<MapStateModel> = this.mapStateSubject.asObservable();\n    mapZoomLevel$: Observable<number>  = this.mapState$.pipe(map((state: MapStateModel) => state.mapBoundState.zoom));\n\n    private updateMapStates(newState: any): void {\n        let state = this.mapStateSubject.value;\n        state = { ...state, ...newState };\n\n        this.mapStateSubject.next(state);\n    }\n\n\n    updateMapState(map: L.Map){\n        this.mapSubject.next(map)\n    }\n\n    updatePolygons(polygons: ILatLng[][][]):void{\n        \n        this.polygonSubject.next(polygons)\n    }\n    updateMapBounds(mapBounds: MapBoundsState) {\n        this.updateMapStates({ mapBoundState: mapBounds });\n    }\n}\n\nclass MapStateModel {\n    constructor(\n      \n        public mapBoundState: MapBoundsState = new MapBoundsState(null, 11)) { }\n}\nclass MapBoundsState {\n    constructor(\n        public bounds: L.LatLngBounds,\n        public zoom: number) { }\n}","export enum DrawMode {\n    Off = 0,\n    Add = 1,\n    Edit = 2,\n    Subtract = 4,\n    AppendMarker = 8,\n    LoadPredefined = 16\n}\nexport enum MarkerPosition {\n    // CenterOfMass = 0,\n    North = 1,\n    East = 2,\n    South = 3,\n    West = 4,\n    NorthEast = 5,\n    NorthWest = 6,\n    SouthEast = 7,\n    SouthWest = 8,\n    // BoundingBoxCenter = 9\n}\n\n\n","import { ICompass } from \"./interface\";\nimport * as L from \"leaflet\";\nimport { ILatLng } from \"./polygon-helpers\";\nimport { MarkerPosition } from \"./enums\";\n\nexport class PolyDrawUtil {\n    static getBounds(polygon: ILatLng[], padding: number = 0): L.LatLngBounds {\n        const tmpLatLng: L.LatLng[] = [];\n        polygon.forEach(ll => {\n            if (isNaN(ll.lat) || isNaN(ll.lng)) {\n            }\n            tmpLatLng.push(ll as L.LatLng);\n        });\n        const polyLine: L.Polyline = new L.Polyline(tmpLatLng);\n        const bounds = polyLine.getBounds();\n        if (padding !== 0) {\n            return bounds.pad(padding);\n        }\n        return bounds;\n    }\n}\n//TODO make compass ILatLng\nexport class Compass {\n\n    public direction: ICompass = {\n        // BoundingBoxCenter: { lat: 0, lng: 0 },\n        // CenterOfMass: { lat: 0, lng: 0 },\n        East: { lat: 0, lng: 0 },\n        North: { lat: 0, lng: 0 },\n        NorthEast: { lat: 0, lng: 0 },\n        NorthWest: { lat: 0, lng: 0 },\n        South: { lat: 0, lng: 0 },\n        SouthEast: { lat: 0, lng: 0 },\n        SouthWest: { lat: 0, lng: 0 },\n        West: { lat: 0, lng: 0 }\n    };\n\n    constructor(minLat: number = 0, minLng: number = 0, maxLat: number = 0, maxLng: number = 0) {\n\n        this.direction.North = { lat: maxLat, lng: (minLng + maxLng) / 2 };\n        this.direction.NorthEast = { lat: maxLat, lng: maxLng };\n        this.direction.East = { lat: (minLat + maxLat) / 2, lng: maxLng };\n        this.direction.SouthEast = { lat: minLat, lng: maxLng };\n        this.direction.South = { lat: minLat, lng: (minLng + maxLng) / 2 };\n        this.direction.SouthWest = { lat: minLat, lng: minLng };\n        this.direction.West = { lat: (minLat + maxLat) / 2, lng: minLng };\n        this.direction.NorthWest = { lat: maxLat, lng: minLng };\n        // this.direction.CenterOfMass = { lat: 0, lng: 0 };\n        // this.direction.BoundingBoxCenter = {lat: (minLat + maxLat) / 2, lng: (minLng + maxLng) / 2};\n    }\n    //TODO default return.\n    getDirection(direction: MarkerPosition) {\n        switch (direction) {\n            // case MarkerPosition.CenterOfMass:\n            //     return this.direction.CenterOfMass;\n            case MarkerPosition.North:\n                return this.direction.North;\n            case MarkerPosition.NorthEast:\n                return this.direction.NorthEast;\n            case MarkerPosition.East:\n                return this.direction.East;\n            case MarkerPosition.SouthEast:\n                return this.direction.SouthEast;\n            case MarkerPosition.South:\n                return this.direction.South;\n            case MarkerPosition.SouthWest:\n                return this.direction.SouthWest;\n            case MarkerPosition.West:\n                return this.direction.West;\n            case MarkerPosition.NorthWest:\n                return this.direction.NorthWest;\n            // case MarkerPosition.BoundingBoxCenter:\n            //     return this.direction.BoundingBoxCenter;\n            default:\n                return this.direction.North;\n        }\n    }\n    //TODO startNode, go clockwise or not\n    getPositions(startNode: MarkerPosition = MarkerPosition.SouthWest, clockwise: boolean = false, addClosingNode: boolean = true): number[][] {\n\n        let positions: number[][] = [];\n\n        positions.push([this.direction.SouthWest.lng, this.direction.SouthWest.lat]);\n        positions.push([this.direction.SouthWest.lng, this.direction.SouthWest.lat]);\n        positions.push([this.direction.South.lng, this.direction.South.lat]);\n        positions.push([this.direction.SouthEast.lng, this.direction.SouthEast.lat]);\n        positions.push([this.direction.East.lng, this.direction.East.lat]);\n        positions.push([this.direction.NorthEast.lng, this.direction.NorthEast.lat]);\n        positions.push([this.direction.North.lng, this.direction.North.lat]);\n        positions.push([this.direction.NorthWest.lng, this.direction.NorthWest.lat]);\n        positions.push([this.direction.West.lng, this.direction.West.lat]);\n        if (addClosingNode) {\n            positions.push([this.direction.SouthWest.lng, this.direction.SouthWest.lat]);\n        }\n\n\n\n        return positions;\n    }\n}","import { Injectable } from '@angular/core';\n\nimport * as turf from '@turf/turf';\nimport concaveman from 'concaveman';\nimport { Feature, Polygon, MultiPolygon, Position } from '@turf/turf';\nimport { MarkerPosition } from './enums';\nimport { ICompass } from './interface';\nimport { Compass } from './utils';\nimport { ILatLng } from './polygon-helpers';\n\n@Injectable({ providedIn: 'root' })\nexport class TurfHelperService {\n  private simplifyTolerance = { tolerance: 0.0001, highQuality: false };\n  constructor() {}\n\n  union(poly1, poly2): Feature<Polygon | MultiPolygon> {\n    \n    \n\n    const union = turf.union(poly1, poly2);\n\n    return this.getTurfPolygon(union);\n  }\n\n  turfConcaveman(\n    feature: Feature<Polygon | MultiPolygon>\n  ): Feature<Polygon | MultiPolygon> {\n    \n    const points = turf.explode(feature);\n\n    const coordinates = points.features.map(f => f.geometry.coordinates);\n    return turf.multiPolygon([[concaveman(coordinates)]]);\n  }\n\n  //TODO add some sort of dynamic tolerance\n  getSimplified(\n    polygon: Feature<Polygon | MultiPolygon>\n  ): Feature<Polygon | MultiPolygon> {\n    const tolerance = this.simplifyTolerance;\n    const simplified = turf.simplify(polygon, tolerance);\n    return simplified;\n  }\n\n  getTurfPolygon(\n    polygon: Feature<Polygon | MultiPolygon>\n  ): Feature<Polygon | MultiPolygon> {\n    let turfPolygon;\n    \n    // if (polygon.geometry)\n    if (polygon.geometry.type === 'Polygon') {\n      turfPolygon = turf.multiPolygon([polygon.geometry.coordinates]);\n    } else {\n      turfPolygon = turf.multiPolygon(polygon.geometry.coordinates);\n    }\n    return turfPolygon;\n  }\n\n  getMultiPolygon(\n    polygonArray: Position[][][]\n  ): Feature<Polygon | MultiPolygon> {\n    return turf.multiPolygon(polygonArray);\n  }\n\n  getKinks(feature: Feature<Polygon | MultiPolygon>) {\n    const unkink = turf.unkinkPolygon(feature);\n    const coordinates = [];\n    turf.featureEach(unkink, current => {\n      coordinates.push(current);\n    });\n\n    return coordinates;\n  }\n\n  getCoords(feature: Feature<Polygon | MultiPolygon>) {\n    return turf.getCoords(feature);\n  }\n\n  hasKinks(feature: Feature<Polygon | MultiPolygon>) {\n    const kinks = turf.kinks(feature);\n    return kinks.features.length > 0;\n  }\n\n  polygonIntersect(\n    polygon: Feature<Polygon | MultiPolygon>,\n    latlngs: Feature<Polygon | MultiPolygon>\n  ): boolean {\n    // const oldPolygon = polygon.toGeoJSON();\n    const poly = [];\n    const poly2 = [];\n\n    \n\n    const latlngsCoords = turf.getCoords(latlngs);\n    latlngsCoords.forEach(element => {\n      const feat = { type: 'Polygon', coordinates: [element[0]] };\n\n      poly.push(feat);\n    });\n    const polygonCoords = turf.getCoords(polygon);\n    polygonCoords.forEach(element => {\n      const feat = { type: 'Polygon', coordinates: [element[0]] };\n\n      poly2.push(feat);\n    });\n    let intersect = false;\n    loop1: for (let i = 0; i < poly.length; i++) {\n      if (this.getKinks(poly[i]).length < 2) {\n        for (let j = 0; j < poly2.length; j++) {\n          if (this.getKinks(poly2[j]).length < 2) {\n            const test = turf.intersect(poly[i], poly2[j]);\n            if (test?.geometry.type === 'Point') {\n              intersect = !(\n                turf.booleanPointInPolygon(test, poly[i]) &&\n                turf.booleanPointInPolygon(test, poly2[j])\n              );\n              \n            } else if (test?.geometry.type === 'Polygon') {\n              intersect = !!turf.intersect(poly[i], poly2[j]);\n            }\n\n            if (intersect) {\n              break loop1;\n            }\n          }\n        }\n      }\n    }\n\n    return intersect;\n  }\n\n  getIntersection(poly1, poly2): Feature {\n    return turf.intersect(poly1, poly2);\n  }\n  getDistance(point1, point2): number {\n    return turf.distance(point1, point2);\n  }\n\n  isWithin(polygon1: Position[], polygon2: Position[]): boolean {\n    \n    \n    return turf.booleanWithin(\n      turf.polygon([polygon1]),\n      turf.polygon([polygon2])\n    );\n  }\n\n  equalPolygons(\n    polygon1: Feature<Polygon | MultiPolygon>,\n    polygon2: Feature<Polygon | MultiPolygon>\n  ) {\n    \n    \n    \n  }\n  //TODO optional add extra markers for N E S W (We have the corners NW, NE, SE, SW)\n  convertToBoundingBoxPolygon(\n    polygon: Feature<Polygon | MultiPolygon>,\n    addMidpointMarkers: boolean = false\n  ): Feature<Polygon> {\n    const bbox = turf.bbox(polygon.geometry);\n    const bboxPolygon = turf.bboxPolygon(bbox);\n\n    const compass = new Compass(bbox[1], bbox[0], bbox[3], bbox[2]);\n\n    const compassPositions = compass.getPositions();\n\n    bboxPolygon.geometry.coordinates = [];\n    bboxPolygon.geometry.coordinates = [compassPositions];\n\n    return bboxPolygon;\n  }\n  polygonToMultiPolygon(poly: Feature<Polygon>): Feature<MultiPolygon> {\n    const multi = turf.multiPolygon([poly.geometry.coordinates]);\n    return multi;\n  }\n  //TODO -cleanup\n  injectPointToPolygon(polygon, point) {\n    const coords = turf.getCoords(polygon);\n    let newPolygon;\n    \n    if (coords.length < 2) {\n      const polygonPoints = turf.explode(polygon);\n      \n      const index = turf.nearestPoint(point, polygonPoints).properties\n        .featureIndex;\n      const test = turf.coordReduce(\n        polygonPoints,\n        function(accumulator, oldPoint, i) {\n          if (index === i) {\n            return [...accumulator, oldPoint, point];\n          }\n          return [...accumulator, oldPoint];\n        },\n        []\n      );\n      \n      newPolygon = turf.multiPolygon([[test]]);\n    } else {\n      const pos = [];\n      let coordinates = [];\n      coords.forEach(element => {\n        const polygon = turf.polygon(element);\n        // turf.booleanPointInPolygon(point, polygon)\n        if (turf.booleanPointInPolygon(point, polygon)) {\n          const polygonPoints = turf.explode(polygon);\n          const index = turf.nearestPoint(point, polygonPoints).properties\n            .featureIndex;\n          coordinates = turf.coordReduce(\n            polygonPoints,\n            function(accumulator, oldPoint, i) {\n              if (index === i) {\n                return [...accumulator, oldPoint, point];\n              }\n              return [...accumulator, oldPoint];\n            },\n            []\n          );\n          \n        } else {\n          pos.push(element);\n        }\n      });\n      pos.push([coordinates]);\n      newPolygon = turf.multiPolygon(pos);\n    }\n    return newPolygon;\n  }\n\n  polygonDifference(\n    polygon1: Feature<Polygon | MultiPolygon>,\n    polygon2: Feature<Polygon | MultiPolygon>\n  ): Feature<Polygon | MultiPolygon> {\n    const diff = turf.difference(polygon1, polygon2);\n    \n    return this.getTurfPolygon(diff);\n  }\n  getBoundingBoxCompassPosition(\n    polygon,\n    MarkerPosition: ICompass,\n    useOffset,\n    offsetDirection\n  ) {\n    const p = this.getMultiPolygon(polygon);\n    const compass = this.getBoundingBoxCompass(polygon);\n    const polygonPoints = turf.explode(polygon);\n    const coord = this.getCoord(compass.direction.North);\n    const nearestPoint = turf.nearestPoint(coord, polygonPoints);\n\n    return null;\n  }\n  private getBoundingBoxCompass(polygon): Compass {\n    const p = this.getMultiPolygon(polygon);\n    const centerOfMass = turf.centerOfMass(p);\n    const b = turf.bbox(p);\n    const minX = b[0];\n    const minY = b[1];\n    const maxX = b[2];\n    const maxY = b[3];\n    const compass = new Compass(minX, minY, maxX, maxY);\n    // compass.direction.CenterOfMass = centerOfMass.geometry.coordinates[0][0];\n\n    return compass;\n  }\n\n  getNearestPointIndex(\n    targetPoint: turf.Coord,\n    points: turf.FeatureCollection<turf.Point>\n  ): number {\n    const index = turf.nearestPoint(targetPoint, points).properties.featureIndex;\n    return index;\n  }\n  getCoord(point: ILatLng): turf.Coord {\n    const coord = turf.getCoord([point.lng, point.lat]);\n    return coord;\n  }\n  getFeaturePointCollection(points: ILatLng[]): turf.FeatureCollection {\n    const pts = [];\n    points.forEach(v => {\n      const p = turf.point([v.lng, v.lat], {});\n      pts.push(p);\n    });\n\n    const fc = turf.featureCollection(pts);\n\n    return fc;\n  }\n}\n","\nimport * as L from \"leaflet\";\nimport * as turf from \"@turf/turf\"\nimport { ILatLng } from \"./polygon-helpers\";\n\nexport class PolygonUtil {\n    static getCenter(polygon: ILatLng[]) {\n        const pi = Math.PI;\n        let x = 0;\n        let y = 0;\n        let z = 0;\n\n        polygon.forEach(v => {\n            let lat1 = v.lat;\n            let lon1 = v.lng;\n            lat1 = lat1 * pi / 180;\n            lon1 = lon1 * pi / 180;\n            x += Math.cos(lat1) * Math.cos(lon1);\n            y += Math.cos(lat1) * Math.sin(lon1);\n            z += Math.sin(lat1);\n        });\n\n        let lng = Math.atan2(y, x);\n        const hyp = Math.sqrt(x * x + y * y);\n        let lat = Math.atan2(z, hyp);\n        lat = lat * 180 / pi;\n        lng = lng * 180 / pi;\n        const center: ILatLng = { lat: lat, lng: lng };\n\n        return center;\n    }\n    static getSouthWest(polygon: ILatLng[]): ILatLng {\n        const bounds = this.getBounds(polygon);\n        return bounds.getNorthWest();\n    }\n    static getNorthEast(polygon: ILatLng[]): ILatLng {\n        const bounds = this.getBounds(polygon);\n        return bounds.getNorthEast();\n    }\n    static getNorthWest(polygon: ILatLng[]): ILatLng {\n        const bounds = this.getBounds(polygon);\n        return bounds.getNorthWest();\n    }\n    static getSouthEast(polygon: ILatLng[]): ILatLng {\n        const bounds = this.getBounds(polygon);\n        return bounds.getSouthEast();\n    }\n    static getNorth(polygon: ILatLng[]): number {\n        const bounds = this.getBounds(polygon);\n        return bounds.getNorth();\n    }\n    static getSouth(polygon: ILatLng[]): number {\n        const bounds = this.getBounds(polygon);\n        return bounds.getSouth();\n    }\n    static getWest(polygon: ILatLng[]): number {\n        const bounds = this.getBounds(polygon);\n        return bounds.getWest();\n    }\n    static getEast(polygon: ILatLng[]): number {\n        const bounds = this.getBounds(polygon);\n        return bounds.getEast();\n    }\n    static getSqmArea(polygon: ILatLng[]): number {\n        const poly: L.Polygon = new L.Polygon(polygon);\n        const geoJsonPoly = poly.toGeoJSON();\n\n        const area = turf.area((geoJsonPoly) as any);\n\n        return area;\n    }\n    static getPerimeter(polygon: ILatLng[]): number {\n        const poly: L.Polygon = new L.Polygon(polygon);\n        const geoJsonPoly = poly.toGeoJSON();\n\n        const perimeter = turf.length((geoJsonPoly) as any, {units: \"meters\"});\n\n        return perimeter;\n    }\n    static getPolygonChecksum(polygon: ILatLng[]): number {\n        const uniqueLatLngs = polygon.filter((v, i, a) => {\n            return a.indexOf(a.find(x => x.lat === v.lat && x.lng === v.lng)) === i;\n        });\n\n        return uniqueLatLngs.reduce((a, b) => +a + +b.lat, 0) * uniqueLatLngs.reduce((a, b) => +a + +b.lng, 0);\n    }\n    static getMidPoint(point1: ILatLng, point2: ILatLng): ILatLng {\n\n        const p1 = turf.point([point1.lng, point1.lat]);\n        const p2 = turf.point([point2.lng, point2.lat]);\n\n        const midpoint = turf.midpoint(p1, p2);\n\n        const returnPoint: ILatLng = {\n            lat: midpoint.geometry.coordinates[1],\n            lng: midpoint.geometry.coordinates[0]\n        };\n\n        return returnPoint;\n    }\n    static getBounds(polygon: ILatLng[]): L.LatLngBounds {\n        const tmpLatLng: L.LatLng[] = [];\n\n        polygon.forEach(ll => {\n            if (isNaN(ll.lat) || isNaN(ll.lng)) {\n            }\n            tmpLatLng.push(ll as L.LatLng);\n        });\n\n        const polyLine: L.Polyline = new L.Polyline(tmpLatLng);\n        const bounds = polyLine.getBounds();\n\n        return bounds;\n\n    }\n}\n\n//export class FreedrawSubtract extends L.FreeDraw {\n\n\n//    constructor() {\n\n//        //this will become L.FreeDraw\n//        super(null);\n//        //call methods in freedraw by this\n//        const foo = this.size();\n\n//        this.consoleLogNumberOfPolygons(foo);\n\n//    }\n\n//    consoleLogNumberOfPolygons(size: number): void {\n//        console.log(\"Number of polygons: \", size);\n//    }\n\n//}","import { PolygonUtil } from './polygon.util';\n\nexport class PolygonInfo {\n  polygon: ILatLng[][][] = [];\n  trashcanPoint: ILatLng[] = [];\n  sqmArea: number[] = [];\n  perimeter: number[] = [];\n  constructor(polygon) {\n    \n    polygon.forEach((polygons, i) => {\n      this.trashcanPoint[i] = this.getTrashcanPoint(polygons[0]);\n      this.sqmArea[i] = this.calculatePolygonArea(polygons[0]);\n      this.perimeter[i] = this.calculatePolygonPerimeter(polygons[0]);\n    \n      this.polygon[i] = polygons;\n    });\n  }\n  setSqmArea(area: number): void {\n    this.sqmArea[0] = area;\n  }\n  private getTrashcanPoint(polygon: ILatLng[]): ILatLng {\n    const res = Math.max.apply(\n      Math,\n      polygon.map(o => o.lat)\n    );\n    const idx = polygon.findIndex(o => o.lat === res);\n\n    let previousPoint: ILatLng;\n    let nextPoint: ILatLng;\n\n    if (idx > 0) {\n      previousPoint = polygon[idx - 1];\n      if (idx < polygon.length - 1) {\n        nextPoint = polygon[idx + 1];\n      } else {\n        nextPoint = polygon[0];\n      }\n    } else {\n      previousPoint = polygon[polygon.length - 1];\n      nextPoint = polygon[idx + 1];\n    }\n\n    const secondPoint =\n      previousPoint.lng < nextPoint.lng ? previousPoint : nextPoint;\n\n    const midpoint = PolygonUtil.getMidPoint(polygon[idx], secondPoint);\n\n    return midpoint;\n  }\n  private calculatePolygonArea(polygon: ILatLng[]): number {\n    const area = PolygonUtil.getSqmArea(polygon as any);\n    return area;\n  }\n  private calculatePolygonPerimeter(polygon: ILatLng[]): number {\n    const perimeter = PolygonUtil.getPerimeter(polygon as any);\n    return perimeter;\n  }\n}\nconst addClass: (selector: string, className: string) => void = (\n  selector: string,\n  className: string\n): void => {\n  const elements: NodeListOf<HTMLElement> = document.querySelectorAll(selector);\n  for (let i = 0; i < elements.length; i++) {\n    elements.item(i).classList.add(className);\n  }\n};\n\nconst removeClass: (selector: string, className: string) => void = (\n  selector: string,\n  className: string\n): void => {\n  const elements: NodeListOf<HTMLElement> = document.querySelectorAll(selector);\n  for (let i = 0; i < elements.length; i++) {\n    elements.item(i).classList.remove(className);\n  }\n};\n\nexport class PolygonDrawStates {\n  isActivated: boolean;\n  isFreeDrawMode: boolean;\n  isMoveMode: boolean;\n  canRevert: boolean;\n  isAuto: boolean;\n  hasPolygons: boolean;\n  canUsePolyDraw: boolean;\n\n  constructor() {\n    this.canUsePolyDraw = false;\n    this.reset();\n  }\n\n  activate(): void {\n    this.reset();\n    this.isActivated = true;\n  }\n\n  reset(): void {\n    this.isActivated = false;\n    this.hasPolygons = false;\n    this.canRevert = false;\n    this.isAuto = false;\n\n    this.resetDrawModes();\n  }\n\n  resetDrawModes(): void {\n    this.isFreeDrawMode = false;\n    removeClass('img.leaflet-tile', 'disable-events');\n    this.isMoveMode = false;\n  }\n\n  setFreeDrawMode(isAuto: boolean = false): void {\n    if (isAuto) {\n      this.isActivated = true;\n    }\n    if (this.isActivated) {\n      this.resetDrawModes();\n      this.isFreeDrawMode = true;\n      addClass('img.leaflet-tile', 'disable-events');\n      if (isAuto) {\n        this.isAuto = true;\n      }\n    }\n  }\n\n  setMoveMode(): void {\n    if (this.isActivated) {\n      this.resetDrawModes();\n      this.isMoveMode = true;\n    }\n  }\n\n  forceCanUseFreeDraw(): void {\n    this.canUsePolyDraw = true;\n  }\n}\n\nexport interface ILatLng {\n  lat: number;\n  lng: number;\n}\n","import { Injectable } from \"@angular/core\";\nimport { Subject, Observable } from \"rxjs\";\nimport { PolygonInfo, PolygonDrawStates, ILatLng } from \"./polygon-helpers\";\nimport { PolyStateService } from \"./map-state.service\";\n\n@Injectable({ providedIn: \"root\" })\nexport class PolygonInformationService {\n  polygonInformationSubject: Subject<PolygonInfo[]> = new Subject<\n    PolygonInfo[]\n  >();\n  polygonInformation$: Observable<\n    PolygonInfo[]\n  > = this.polygonInformationSubject.asObservable();\n  polygonDrawStatesSubject: Subject<PolygonDrawStates> = new Subject<\n    PolygonDrawStates\n  >();\n  polygonDrawStates$: Observable<\n    PolygonDrawStates\n  > = this.polygonDrawStatesSubject.asObservable();\n\n  polygonDrawStates: PolygonDrawStates = null;\n  polygonInformationStorage = [];\n  constructor(private mapStateService: PolyStateService) {\n    this.polygonDrawStates = new PolygonDrawStates();\n  }\n\n  updatePolygons() {\n    \n\n    let newPolygons: ILatLng[][][] = null;\n    if (this.polygonInformationStorage.length > 0) {\n      newPolygons = [];\n\n      this.polygonInformationStorage.forEach(v => {\n        let test = [];\n        v.polygon.forEach(poly => {\n          let test2 = [];\n\n          poly.forEach(polygon => {\n            test2 = [...polygon];\n            if (\n              polygon[0].toString() !== polygon[polygon.length - 1].toString()\n            ) {\n              test2.push(polygon[0]);\n            }\n            test.push(test2);\n          });\n        });\n\n        newPolygons.push(test);\n      });\n\n      this.polygonDrawStates.hasPolygons = true;\n    } else {\n      this.polygonDrawStates.reset();\n      this.polygonDrawStates.hasPolygons = false;\n    }\n    this.mapStateService.updatePolygons(newPolygons);\n    this.saveCurrentState();\n  }\n\n  saveCurrentState(): void {\n    this.polygonInformationSubject.next(this.polygonInformationStorage);\n    this.polygonDrawStatesSubject.next(this.polygonDrawStates);\n    \n  }\n\n  deleteTrashcan(polygon) {\n    const idx = this.polygonInformationStorage.findIndex(\n      v => v.polygon[0] === polygon\n    );\n    this.polygonInformationStorage.splice(idx, 1);\n    this.updatePolygons();\n  }\n\n  deleteTrashCanOnMulti(polygon: ILatLng[][][]) {\n    let index = 0;\n    \n    \n    // const idx = this.polygonInformationStorage.findIndex(v => v.polygon.forEach(poly =>{ poly === polygon}) );\n    this.polygonInformationStorage.forEach((v, i) => {\n      \n      const id = v.polygon.findIndex(\n        poly => poly.toString() === polygon.toString()\n      );\n      if (id >= 0) {\n        index = i;\n        v.trashcanPoint.splice(id, 1);\n        v.sqmArea.splice(id, 1);\n        v.perimeter.splice(id, 1);\n        v.polygon.splice(id, 1);\n\n        \n      }\n      \n    });\n    this.updatePolygons();\n    \n    if (this.polygonInformationStorage.length > 1) {\n      this.polygonInformationStorage.splice(index, 1);\n    }\n    \n  }\n\n  deletePolygonInformationStorage() {\n    this.polygonInformationStorage = [];\n  }\n\n  createPolygonInformationStorage(arrayOfFeatureGroups) {\n    \n    if (arrayOfFeatureGroups.length > 0) {\n      arrayOfFeatureGroups.forEach(featureGroup => {\n        \n        let polyInfo = new PolygonInfo(\n          featureGroup.getLayers()[0].getLatLngs()\n        );\n        this.polygonInformationStorage.push(polyInfo);\n      });\n      this.updatePolygons();\n    }\n  }\n\n  activate() {\n    this.polygonDrawStates.activate();\n  }\n  reset() {\n    this.polygonDrawStates.reset();\n  }\n\n  setMoveMode() {\n    this.polygonDrawStates.setMoveMode();\n  }\n\n  setFreeDrawMode() {\n    this.polygonDrawStates.setFreeDrawMode();\n  }\n}\n","import { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-alter-polygon',\n  templateUrl: './alter-polygon.component.html',\n  styleUrls: ['./alter-polygon.component.css']\n})\nexport class AlterPolygonComponent {\n\n  @Output() simplyfiClicked: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  @Output() bboxClicked: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  onSimplify($event: MouseEvent): void {\n    this.simplyfiClicked.emit($event);\n  }\n\n  onBbox($event: MouseEvent): void {\n    this.bboxClicked.emit($event);\n  }\n\n}\n","import { Injectable, ComponentFactoryResolver, Injector, ComponentRef, ComponentFactory, OnDestroy, Component } from '@angular/core';\nimport { AlterPolygonComponent } from './popups/alter-polygon/alter-polygon.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentGeneraterService implements OnDestroy {\n\n  private clusterPopuprefs: ComponentRef<AlterPolygonComponent>[] = [];\n\n  constructor(\n    private readonly cfr: ComponentFactoryResolver,\n    private readonly injector: Injector\n  ) { }\n\n  ngOnDestroy(): void {\n    this.destroyAngularPopupComponents();\n  }\n\n  generateAlterPopup(): ComponentRef<AlterPolygonComponent> {\n    const cmpFactory: ComponentFactory<AlterPolygonComponent> = this.cfr.resolveComponentFactory(AlterPolygonComponent);\n    const popupComponentRef: ComponentRef<AlterPolygonComponent> = cmpFactory.create(this.injector);\n    this.clusterPopuprefs.push(popupComponentRef);\n    return popupComponentRef;\n  }\n\n  destroyAngularPopupComponents(): void {\n    this.clusterPopuprefs.forEach(cref => {\n      if (cref) {\n        cref.destroy();\n      }\n    });\n    this.clusterPopuprefs = [];\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport * as L from \"leaflet\";\nimport { ILatLng } from \"./polygon-helpers\";\n\n@Injectable({ providedIn: \"root\" })\nexport class LeafletHelperService {\n  constructor() {}\n\n  createPolygon(latLngs: ILatLng[]): L.Polygon {\n    const p = L.polygon(latLngs);\n    return p;\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport * as L from 'leaflet';\n// import * as turf from \"@turf/turf\";\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\nimport { filter, debounceTime, takeUntil } from 'rxjs/operators';\nimport { Feature, Polygon, MultiPolygon } from '@turf/turf';\nimport { PolyStateService } from './map-state.service';\nimport { TurfHelperService } from './turf-helper.service';\nimport { PolygonInformationService } from './polygon-information.service';\nimport defaultConfig from './polyinfo.json';\nimport { ILatLng, PolygonDrawStates } from './polygon-helpers';\nimport { ComponentGeneraterService } from './component-generater.service';\nimport { Compass, PolyDrawUtil } from './utils';\nimport { MarkerPosition, DrawMode } from './enums';\nimport { LeafletHelperService } from './leaflet-helper.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n// Rename - PolyDrawService\nexport class PolyDrawService {\n  // DrawModes, determine UI buttons etc...\n  drawModeSubject: BehaviorSubject<DrawMode> = new BehaviorSubject<DrawMode>(\n    DrawMode.Off\n  );\n  drawMode$: Observable<DrawMode> = this.drawModeSubject.asObservable();\n\n  private readonly minimumFreeDrawZoomLevel: number = 12;\n  private map: L.Map;\n\n  private mergePolygons: boolean;\n  private kinks: boolean;\n  // add to config\n  private arrayOfFeatureGroups: L.FeatureGroup<L.Layer>[] = [];\n  private tracer: L.Polyline = {} as any;\n  // end add to config\n\n  private ngUnsubscribe = new Subject();\n  private config: typeof defaultConfig = null;\n\n  constructor(\n    private mapState: PolyStateService,\n    private popupGenerator: ComponentGeneraterService,\n    private turfHelper: TurfHelperService,\n    private polygonInformation: PolygonInformationService,\n    private leafletHelper: LeafletHelperService\n  ) {\n    this.mapState.map$.pipe(filter(m => m !== null)).subscribe((map: L.Map) => {\n      this.map = map;\n      this.config = defaultConfig;\n      this.configurate({});\n      this.tracer = L.polyline([[0, 0]], this.config.polyLineOptions);\n      this.initPolyDraw();\n    });\n\n    this.mapState.mapZoomLevel$\n      .pipe(debounceTime(100), takeUntil(this.ngUnsubscribe))\n      .subscribe((zoom: number) => {\n        this.onZoomChange(zoom);\n      });\n  }\n  // new\n  configurate(config: Object): void {\n    // TODO if config is path...\n    this.config = { ...defaultConfig, ...config };\n\n    this.mergePolygons = this.config.mergePolygons;\n    this.kinks = this.config.kinks;\n  }\n\n  // fine\n  closeAndReset(): void {\n    this.setDrawMode(DrawMode.Off);\n    this.removeAllFeatureGroups();\n  }\n\n  // make readable\n  deletePolygon(polygon: ILatLng[][]) {\n    if (polygon.length > 1) {\n      polygon.length = 1;\n    }\n    if (this.arrayOfFeatureGroups.length > 0) {\n      this.arrayOfFeatureGroups.forEach(featureGroup => {\n        const layer = featureGroup.getLayers()[0] as any;\n        const latlngs = layer.getLatLngs();\n        const length = latlngs.length;\n        //  = []\n\n        latlngs.forEach((latlng, index) => {\n          let polygon3;\n          const test = [...latlng];\n\n          if (latlng.length > 1) {\n            if (latlng[0][0] !== latlng[0][latlng[0].length - 1]) {\n              test[0].push(latlng[0][0]);\n            }\n\n            polygon3 = [test[0]];\n          } else {\n            if (latlng[0] !== latlng[latlng.length - 1]) {\n              test.push(latlng[0]);\n            }\n            polygon3 = test;\n          }\n\n          const equals = this.polygonArrayEquals(polygon3, polygon);\n\n          if (equals && length === 1) {\n            this.polygonInformation.deleteTrashcan(polygon);\n\n            this.removeFeatureGroup(featureGroup);\n          } else if (equals && length > 1) {\n            this.polygonInformation.deleteTrashCanOnMulti([polygon]);\n            latlngs.splice(index, 1);\n            layer.setLatLngs(latlngs);\n            this.removeFeatureGroup(featureGroup);\n            this.addPolygonLayer(layer.toGeoJSON(), false);\n          }\n        });\n      });\n    }\n  }\n  // fine\n  removeAllFeatureGroups() {\n    this.arrayOfFeatureGroups.forEach(featureGroups => {\n      this.map.removeLayer(featureGroups);\n    });\n\n    this.arrayOfFeatureGroups = [];\n    this.polygonInformation.deletePolygonInformationStorage();\n    this.polygonInformation.reset();\n    this.polygonInformation.updatePolygons();\n  }\n  // fine\n  getDrawMode(): DrawMode {\n    return this.drawModeSubject.value;\n  }\n\n  addViken(polygon) {\n    this.addPolygonLayer(polygon, true);\n  }\n\n  // check this\n  addAutoPolygon(geographicBorders: L.LatLng[][][]): void {\n    geographicBorders.forEach(group => {\n      const featureGroup: L.FeatureGroup = new L.FeatureGroup();\n\n      const polygon2 = this.turfHelper.getMultiPolygon(\n        this.convertToCoords(group)\n      );\n\n      const polygon = this.getPolygon(polygon2);\n\n      featureGroup.addLayer(polygon);\n      const markerLatlngs = polygon.getLatLngs();\n\n      markerLatlngs.forEach(polygon => {\n        polygon.forEach((polyElement, i) => {\n          if (i === 0) {\n            this.addMarker(polyElement, featureGroup);\n          } else {\n            this.addHoleMarker(polyElement, featureGroup);\n          }\n        });\n        // this.addMarker(polygon[0], featureGroup);\n        // TODO - Hvis polygon.length >1, så har den hull: egen addMarker funksjon\n      });\n\n      this.arrayOfFeatureGroups.push(featureGroup);\n    });\n    this.polygonInformation.createPolygonInformationStorage(\n      this.arrayOfFeatureGroups\n    );\n    this.polygonInformation.activate();\n    this.polygonInformation.setMoveMode();\n  }\n\n  // innehåll i if'ar flytta till egna metoder\n  private convertToCoords(latlngs: ILatLng[][]) {\n    const coords = [];\n\n    if (latlngs.length > 1 && latlngs.length < 3) {\n      const coordinates = [];\n\n      // tslint:disable-next-line: max-line-length\n      const within = this.turfHelper.isWithin(\n        L.GeoJSON.latLngsToCoords(latlngs[latlngs.length - 1]),\n        L.GeoJSON.latLngsToCoords(latlngs[0])\n      );\n      if (within) {\n        latlngs.forEach(polygon => {\n          coordinates.push(L.GeoJSON.latLngsToCoords(polygon));\n        });\n      } else {\n        latlngs.forEach(polygon => {\n          coords.push([L.GeoJSON.latLngsToCoords(polygon)]);\n        });\n      }\n      if (coordinates.length >= 1) {\n        coords.push(coordinates);\n      }\n    } else if (latlngs.length > 2) {\n      const coordinates = [];\n      for (let index = 1; index < latlngs.length - 1; index++) {\n        const within = this.turfHelper.isWithin(\n          L.GeoJSON.latLngsToCoords(latlngs[index]),\n          L.GeoJSON.latLngsToCoords(latlngs[0])\n        );\n        if (within) {\n          latlngs.forEach(polygon => {\n            coordinates.push(L.GeoJSON.latLngsToCoords(polygon));\n          });\n          coords.push(coordinates);\n        } else {\n          latlngs.forEach(polygon => {\n            coords.push([L.GeoJSON.latLngsToCoords(polygon)]);\n          });\n        }\n      }\n    } else {\n      coords.push([L.GeoJSON.latLngsToCoords(latlngs[0])]);\n    }\n\n    return coords;\n  }\n\n  // fine\n  private initPolyDraw() {\n    const container: HTMLElement = this.map.getContainer();\n    const drawMode = this.getDrawMode();\n    if (this.config.touchSupport) {\n      container.addEventListener('touchstart mousedown', e => {\n        if (drawMode !== DrawMode.Off) {\n          this.mouseDown(e);\n        }\n      });\n\n      container.addEventListener('touchend mouseup', e => {\n        if (drawMode !== DrawMode.Off) {\n          this.mouseUpLeave();\n        }\n      });\n\n      container.addEventListener('touchmove mousemove', e => {\n        if (drawMode !== DrawMode.Off) {\n          this.mouseMove(e);\n        }\n      });\n    }\n\n    this.map.addLayer(this.tracer);\n    this.setDrawMode(DrawMode.Off);\n  }\n  // Test L.MouseEvent\n  private mouseDown(event) {\n    if (event.originalEvent != null) {\n      this.tracer.setLatLngs([event.latlng]);\n    } else {\n      const latlng = this.map.containerPointToLatLng([\n        event.touches[0].clientX,\n        event.touches[0].clientY\n      ]);\n      this.tracer.setLatLngs([latlng]);\n    }\n    this.startDraw();\n  }\n\n  // TODO event type, create containerPointToLatLng-method\n  private mouseMove(event) {\n    if (event.originalEvent != null) {\n      this.tracer.addLatLng(event.latlng);\n    } else {\n      const latlng = this.map.containerPointToLatLng([\n        event.touches[0].clientX,\n        event.touches[0].clientY\n      ]);\n      this.tracer.addLatLng(latlng);\n    }\n  }\n\n  // fine\n  private mouseUpLeave() {\n    this.polygonInformation.deletePolygonInformationStorage();\n\n    const geoPos: Feature<\n      Polygon | MultiPolygon\n    > = this.turfHelper.turfConcaveman(this.tracer.toGeoJSON() as any);\n    this.stopDraw();\n    switch (this.getDrawMode()) {\n      case DrawMode.Add:\n        this.addPolygon(geoPos, true);\n        break;\n      case DrawMode.Subtract:\n        this.subtractPolygon(geoPos);\n        break;\n\n      default:\n        break;\n    }\n    this.polygonInformation.createPolygonInformationStorage(\n      this.arrayOfFeatureGroups\n    );\n  }\n  // fine\n  private startDraw() {\n    this.drawStartedEvents(true);\n  }\n  // fine\n  private stopDraw() {\n    this.resetTracker();\n    this.drawStartedEvents(false);\n  }\n\n  private onZoomChange(zoomLevel: number): void {\n    if (zoomLevel >= this.minimumFreeDrawZoomLevel) {\n      this.polygonInformation.polygonDrawStates.canUsePolyDraw = true;\n    } else {\n      this.polygonInformation.polygonDrawStates.canUsePolyDraw = false;\n      this.polygonInformation.setMoveMode();\n    }\n    this.polygonInformation.saveCurrentState();\n  }\n  // fine\n  private drawStartedEvents(onoff: boolean) {\n    const onoroff = onoff ? 'on' : 'off';\n\n    this.map[onoroff]('mousemove', this.mouseMove, this);\n    this.map[onoroff]('mouseup', this.mouseUpLeave, this);\n  }\n  // On hold\n  private subtractPolygon(latlngs: Feature<Polygon | MultiPolygon>) {\n    this.subtract(latlngs);\n  }\n  // fine\n  private addPolygon(\n    latlngs: Feature<Polygon | MultiPolygon>,\n    simplify: boolean,\n    noMerge: boolean = false\n  ) {\n    if (\n      this.mergePolygons &&\n      !noMerge &&\n      this.arrayOfFeatureGroups.length > 0 &&\n      !this.kinks\n    ) {\n      this.merge(latlngs);\n    } else {\n      this.addPolygonLayer(latlngs, simplify);\n    }\n  }\n  // fine\n  private addPolygonLayer(\n    latlngs: Feature<Polygon | MultiPolygon>,\n    simplify: boolean\n  ) {\n    const featureGroup: L.FeatureGroup = new L.FeatureGroup();\n\n    const latLngs = simplify ? this.turfHelper.getSimplified(latlngs) : latlngs;\n\n    const polygon = this.getPolygon(latLngs);\n    featureGroup.addLayer(polygon);\n\n    const markerLatlngs = polygon.getLatLngs();\n    markerLatlngs.forEach(polygon => {\n      polygon.forEach((polyElement: ILatLng[], i: number) => {\n        if (i === 0) {\n          this.addMarker(polyElement, featureGroup);\n        } else {\n          this.addHoleMarker(polyElement, featureGroup);\n        }\n      });\n      // this.addMarker(polygon[0], featureGroup);\n      // TODO - Hvis polygon.length >1, så har den hull: egen addMarker funksjon\n    });\n\n    this.arrayOfFeatureGroups.push(featureGroup);\n\n    this.polygonInformation.activate();\n    this.setDrawMode(DrawMode.Off);\n\n    featureGroup.on('click', e => {\n      this.polygonClicked(e, latLngs);\n    });\n  }\n  // fine\n  private polygonClicked(e: any, poly: Feature<Polygon | MultiPolygon>) {\n    const newPoint = e.latlng;\n    if (poly.geometry.type === 'MultiPolygon') {\n      const newPolygon = this.turfHelper.injectPointToPolygon(poly, [\n        newPoint.lng,\n        newPoint.lat\n      ]);\n      this.deletePolygon(this.getLatLngsFromJson(poly));\n      this.addPolygonLayer(newPolygon, false);\n    }\n  }\n  // fine\n  private getPolygon(latlngs: Feature<Polygon | MultiPolygon>) {\n    const polygon = L.GeoJSON.geometryToLayer(latlngs) as any;\n\n    polygon.setStyle(this.config.polygonOptions);\n    return polygon;\n  }\n  // fine\n  private merge(latlngs: Feature<Polygon | MultiPolygon>) {\n    const polygonFeature = [];\n    const newArray: L.FeatureGroup[] = [];\n    let polyIntersection = false;\n    this.arrayOfFeatureGroups.forEach(featureGroup => {\n      const featureCollection = featureGroup.toGeoJSON() as any;\n\n      if (featureCollection.features[0].geometry.coordinates.length > 1) {\n        featureCollection.features[0].geometry.coordinates.forEach(element => {\n          const feature = this.turfHelper.getMultiPolygon([element]);\n          polyIntersection = this.turfHelper.polygonIntersect(feature, latlngs);\n          if (polyIntersection) {\n            newArray.push(featureGroup);\n            polygonFeature.push(feature);\n          }\n        });\n      } else {\n        const feature = this.turfHelper.getTurfPolygon(\n          featureCollection.features[0]\n        );\n        polyIntersection = this.turfHelper.polygonIntersect(feature, latlngs);\n        if (polyIntersection) {\n          newArray.push(featureGroup);\n          polygonFeature.push(feature);\n        }\n      }\n    });\n\n    if (newArray.length > 0) {\n      this.unionPolygons(newArray, latlngs, polygonFeature);\n    } else {\n      this.addPolygonLayer(latlngs, true);\n    }\n  }\n  // next\n  private subtract(latlngs: Feature<Polygon | MultiPolygon>) {\n    let addHole = latlngs;\n    this.arrayOfFeatureGroups.forEach(featureGroup => {\n      const featureCollection = featureGroup.toGeoJSON() as any;\n      const layer = featureCollection.features[0];\n      const poly = this.getLatLngsFromJson(layer);\n      const feature = this.turfHelper.getTurfPolygon(\n        featureCollection.features[0]\n      );\n      const newPolygon = this.turfHelper.polygonDifference(feature, addHole);\n      this.deletePolygon(poly);\n      this.removeFeatureGroupOnMerge(featureGroup);\n      addHole = newPolygon;\n    });\n\n    const newLatlngs: Feature<Polygon | MultiPolygon> = addHole;\n    const coords = this.turfHelper.getCoords(newLatlngs);\n    coords.forEach(value => {\n      this.addPolygonLayer(this.turfHelper.getMultiPolygon([value]), true);\n    });\n  }\n  // fine\n  private events(onoff: boolean) {\n    const onoroff = onoff ? 'on' : 'off';\n    this.map[onoroff]('mousedown', this.mouseDown, this);\n  }\n  // fine, TODO: if special markers\n  private addMarker(latlngs: ILatLng[], FeatureGroup: L.FeatureGroup) {\n    const menuMarkerIdx = this.getMarkerIndex(\n      latlngs,\n      this.config.markers.markerMenuIcon.position\n    );\n    const deleteMarkerIdx = this.getMarkerIndex(\n      latlngs,\n      this.config.markers.markerDeleteIcon.position\n    );\n\n    latlngs.forEach((latlng, i) => {\n      const iconClasses = this.config.markers.markerIcon.styleClasses;\n      /*   if (i === menuMarkerIdx && this.config.markers.menu) {\n        iconClasses = this.config.markers.markerMenuIcon.styleClasses;\n      }\n      if (i === deleteMarkerIdx && this.config.markers.delete) {\n        iconClasses = this.config.markers.markerDeleteIcon.styleClasses;\n      } */\n      const marker = new L.Marker(latlng, {\n        icon: this.createDivIcon(iconClasses),\n        draggable: true,\n        title: i.toString()\n      });\n      FeatureGroup.addLayer(marker).addTo(this.map);\n\n      marker.on('drag', e => {\n        this.markerDrag(FeatureGroup);\n      });\n      marker.on('dragend', e => {\n        this.markerDragEnd(FeatureGroup);\n      });\n      if (i === menuMarkerIdx && this.config.markers.menu) {\n        // marker.bindPopup(\n        //   this.getHtmlContent(e => {\n\n        //   })\n        // );\n        marker.on('click', e => {\n          this.convertToBoundsPolygon(latlngs, true);\n          // this.convertToSimplifiedPolygon(latlngs);\n        });\n      }\n      if (i === deleteMarkerIdx && this.config.markers.delete) {\n        marker.on('click', e => {\n          this.deletePolygon([latlngs]);\n        });\n      }\n    });\n  }\n\n  private addHoleMarker(latlngs: ILatLng[], FeatureGroup: L.FeatureGroup) {\n    latlngs.forEach((latlng, i) => {\n      const iconClasses = this.config.markers.markerIcon.styleClasses;\n      /*  if (i === 0 && this.config.markers.menu) {\n        iconClasses = this.config.markers.markerMenuIcon.styleClasses;\n      }\n\n      //TODO- legg til fill icon\n      if (i === latlngs.length - 1 && this.config.markers.delete) {\n        iconClasses = this.config.markers.markerDeleteIcon.styleClasses;\n      } */\n      const marker = new L.Marker(latlng, {\n        icon: this.createDivIcon(iconClasses),\n        draggable: true,\n        title: i.toString()\n      });\n      FeatureGroup.addLayer(marker).addTo(this.map);\n\n      marker.on('drag', e => {\n        this.markerDrag(FeatureGroup);\n      });\n      marker.on('dragend', e => {\n        this.markerDragEnd(FeatureGroup);\n      });\n      /*   if (i === 0 && this.config.markers.menu) {\n        marker.bindPopup(this.getHtmlContent((e) => {\n        }));\n        // marker.on(\"click\", e => {\n        //   this.toggleMarkerMenu();\n        // })\n      }\n      if (i === latlngs.length - 1 && this.config.markers.delete) {\n        marker.on(\"click\", e => {\n          this.deletePolygon([latlngs]);\n        });\n      } */\n    });\n  }\n  private createDivIcon(classNames: string[]): L.DivIcon {\n    const classes = classNames.join(' ');\n    const icon = L.divIcon({ className: classes });\n    return icon;\n  }\n  // TODO: Cleanup\n  private markerDrag(FeatureGroup: L.FeatureGroup) {\n    const newPos = [];\n    let testarray = [];\n    let hole = [];\n    const layerLength = FeatureGroup.getLayers() as any;\n    const posarrays = layerLength[0].getLatLngs();\n\n    let length = 0;\n    if (posarrays.length > 1) {\n      for (let index = 0; index < posarrays.length; index++) {\n        testarray = [];\n        hole = [];\n\n        if (index === 0) {\n          if (posarrays[0].length > 1) {\n            for (let i = 0; index < posarrays[0].length; i++) {\n              for (let j = 0; j < posarrays[0][i].length; j++) {\n                testarray.push(layerLength[j + 1].getLatLng());\n              }\n              hole.push(testarray);\n            }\n          } else {\n            for (let j = 0; j < posarrays[0][0].length; j++) {\n              testarray.push(layerLength[j + 1].getLatLng());\n            }\n            hole.push(testarray);\n          }\n\n          newPos.push(hole);\n        } else {\n          length += posarrays[index - 1][0].length;\n\n          for (let j = length; j < posarrays[index][0].length + length; j++) {\n            testarray.push((layerLength[j + 1] as any).getLatLng());\n          }\n          hole.push(testarray);\n          newPos.push(hole);\n        }\n      }\n    } else {\n      // testarray = []\n      hole = [];\n      let length2 = 0;\n      for (let index = 0; index < posarrays[0].length; index++) {\n        testarray = [];\n\n        if (index === 0) {\n          if (posarrays[0][index].length > 1) {\n            for (let j = 0; j < posarrays[0][index].length; j++) {\n              testarray.push(layerLength[j + 1].getLatLng());\n            }\n          } else {\n            for (let j = 0; j < posarrays[0][0].length; j++) {\n              testarray.push(layerLength[j + 1].getLatLng());\n            }\n          }\n        } else {\n          length2 += posarrays[0][index - 1].length;\n\n          for (let j = length2; j < posarrays[0][index].length + length2; j++) {\n            testarray.push(layerLength[j + 1].getLatLng());\n          }\n        }\n        hole.push(testarray);\n      }\n      newPos.push(hole);\n    }\n\n    layerLength[0].setLatLngs(newPos);\n  }\n  // check this\n  private markerDragEnd(FeatureGroup: L.FeatureGroup) {\n    this.polygonInformation.deletePolygonInformationStorage();\n    const featureCollection = FeatureGroup.toGeoJSON() as any;\n\n    if (featureCollection.features[0].geometry.coordinates.length > 1) {\n      featureCollection.features[0].geometry.coordinates.forEach(element => {\n        const feature = this.turfHelper.getMultiPolygon([element]);\n\n        if (this.turfHelper.hasKinks(feature)) {\n          this.kinks = true;\n          const unkink = this.turfHelper.getKinks(feature);\n          // this.deletePolygon(this.getLatLngsFromJson(feature));\n          this.removeFeatureGroup(FeatureGroup);\n\n          unkink.forEach(polygon => {\n            this.addPolygon(\n              this.turfHelper.getTurfPolygon(polygon),\n              false,\n              true\n            );\n          });\n        } else {\n          this.kinks = false;\n          this.addPolygon(feature, false);\n        }\n      });\n    } else {\n      const feature = this.turfHelper.getMultiPolygon(\n        featureCollection.features[0].geometry.coordinates\n      );\n\n      if (this.turfHelper.hasKinks(feature)) {\n        this.kinks = true;\n        const unkink = this.turfHelper.getKinks(feature);\n        // this.deletePolygon(this.getLatLngsFromJson(feature));\n        this.removeFeatureGroup(FeatureGroup);\n\n        const testCoord = [];\n        unkink.forEach(polygon => {\n          this.addPolygon(this.turfHelper.getTurfPolygon(polygon), false, true);\n        });\n        // this.addPolygon(this.turfHelper.getMultiPolygon(testCoord), false, true);\n      } else {\n        // this.deletePolygon(this.getLatLngsFromJson(feature));\n        this.kinks = false;\n        this.addPolygon(feature, false);\n      }\n    }\n    this.polygonInformation.createPolygonInformationStorage(\n      this.arrayOfFeatureGroups\n    );\n  }\n  // fine, check the returned type\n  private getLatLngsFromJson(\n    feature: Feature<Polygon | MultiPolygon>\n  ): ILatLng[][] {\n    let coord;\n    if (feature) {\n      if (\n        feature.geometry.coordinates.length > 1 &&\n        feature.geometry.type === 'MultiPolygon'\n      ) {\n        coord = L.GeoJSON.coordsToLatLngs(feature.geometry.coordinates[0][0]);\n      } else if (\n        feature.geometry.coordinates[0].length > 1 &&\n        feature.geometry.type === 'Polygon'\n      ) {\n        coord = L.GeoJSON.coordsToLatLngs(feature.geometry.coordinates[0]);\n      } else {\n        coord = L.GeoJSON.coordsToLatLngs(feature.geometry.coordinates[0][0]);\n      }\n    }\n\n    return coord;\n  }\n\n  // fine\n  private unionPolygons(\n    layers,\n    latlngs: Feature<Polygon | MultiPolygon>,\n    polygonFeature\n  ) {\n    let addNew = latlngs;\n    layers.forEach((featureGroup, i) => {\n      const featureCollection = featureGroup.toGeoJSON();\n      const layer = featureCollection.features[0];\n      const poly = this.getLatLngsFromJson(layer);\n      const union = this.turfHelper.union(addNew, polygonFeature[i]); // Check for multipolygons\n      // Needs a cleanup for the new version\n      this.deletePolygonOnMerge(poly);\n      this.removeFeatureGroup(featureGroup);\n\n      addNew = union;\n    });\n\n    const newLatlngs: Feature<Polygon | MultiPolygon> = addNew; // Trenger kanskje this.turfHelper.getTurfPolygon( addNew);\n    this.addPolygonLayer(newLatlngs, true);\n  }\n  // fine\n  private removeFeatureGroup(featureGroup: L.FeatureGroup) {\n    featureGroup.clearLayers();\n    this.arrayOfFeatureGroups = this.arrayOfFeatureGroups.filter(\n      featureGroups => featureGroups !== featureGroup\n    );\n    // this.updatePolygons();\n    this.map.removeLayer(featureGroup);\n  }\n  // fine until refactoring\n  private removeFeatureGroupOnMerge(featureGroup: L.FeatureGroup) {\n    const newArray = [];\n    if (featureGroup.getLayers()[0]) {\n      const polygon = (featureGroup.getLayers()[0] as any).getLatLngs()[0];\n      this.polygonInformation.polygonInformationStorage.forEach(v => {\n        if (\n          v.polygon.toString() !== polygon[0].toString() &&\n          v.polygon[0].toString() === polygon[0][0].toString()\n        ) {\n          v.polygon = polygon;\n          newArray.push(v);\n        }\n\n        if (\n          v.polygon.toString() !== polygon[0].toString() &&\n          v.polygon[0].toString() !== polygon[0][0].toString()\n        ) {\n          newArray.push(v);\n        }\n      });\n      featureGroup.clearLayers();\n      this.arrayOfFeatureGroups = this.arrayOfFeatureGroups.filter(\n        featureGroups => featureGroups !== featureGroup\n      );\n\n      this.map.removeLayer(featureGroup);\n    }\n  }\n  // fine until refactoring\n  private deletePolygonOnMerge(polygon) {\n    let polygon2 = [];\n    if (this.arrayOfFeatureGroups.length > 0) {\n      this.arrayOfFeatureGroups.forEach(featureGroup => {\n        const layer = featureGroup.getLayers()[0] as any;\n        const latlngs = layer.getLatLngs()[0];\n        polygon2 = [...latlngs[0]];\n        if (latlngs[0][0] !== latlngs[0][latlngs[0].length - 1]) {\n          polygon2.push(latlngs[0][0]);\n        }\n        const equals = this.polygonArrayEqualsMerge(polygon2, polygon);\n\n        if (equals) {\n          this.removeFeatureGroupOnMerge(featureGroup);\n          this.deletePolygon(polygon);\n          this.polygonInformation.deleteTrashcan(polygon);\n          // this.updatePolygons();\n        }\n      });\n    }\n  }\n\n  // TODO - legge et annet sted\n  private polygonArrayEqualsMerge(poly1: any[], poly2: any[]): boolean {\n    return poly1.toString() === poly2.toString();\n  }\n  // TODO - legge et annet sted\n  private polygonArrayEquals(poly1: any[], poly2: any[]): boolean {\n    if (poly1[0][0]) {\n      if (!poly1[0][0].equals(poly2[0][0])) {\n        return false;\n      }\n    } else {\n      if (!poly1[0].equals(poly2[0])) {\n        return false;\n      }\n    }\n    if (poly1.length !== poly2.length) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  // fine\n  private setLeafletMapEvents(\n    enableDragging: boolean,\n    enableDoubleClickZoom: boolean,\n    enableScrollWheelZoom: boolean\n  ) {\n    enableDragging ? this.map.dragging.enable() : this.map.dragging.disable();\n    enableDoubleClickZoom\n      ? this.map.doubleClickZoom.enable()\n      : this.map.doubleClickZoom.disable();\n    enableScrollWheelZoom\n      ? this.map.scrollWheelZoom.enable()\n      : this.map.scrollWheelZoom.disable();\n  }\n  // fine\n  setDrawMode(mode: DrawMode) {\n    this.drawModeSubject.next(mode);\n    if (!!this.map) {\n      let isActiveDrawMode = true;\n      switch (mode) {\n        case DrawMode.Off:\n          L.DomUtil.removeClass(\n            this.map.getContainer(),\n            'crosshair-cursor-enabled'\n          );\n          this.events(false);\n          this.stopDraw();\n          this.tracer.setStyle({\n            color: ''\n          });\n          this.setLeafletMapEvents(true, true, true);\n          isActiveDrawMode = false;\n          break;\n        case DrawMode.Add:\n          L.DomUtil.addClass(\n            this.map.getContainer(),\n            'crosshair-cursor-enabled'\n          );\n          this.events(true);\n          this.tracer.setStyle({\n            color: defaultConfig.polyLineOptions.color\n          });\n          this.setLeafletMapEvents(false, false, false);\n          break;\n        case DrawMode.Subtract:\n          L.DomUtil.addClass(\n            this.map.getContainer(),\n            'crosshair-cursor-enabled'\n          );\n          this.events(true);\n          this.tracer.setStyle({\n            color: '#D9460F'\n          });\n          this.setLeafletMapEvents(false, false, false);\n          break;\n      }\n\n      if (isActiveDrawMode) {\n        this.polygonInformation.setFreeDrawMode();\n      } else {\n        this.polygonInformation.setMoveMode();\n      }\n    }\n  }\n\n  modeChange(mode: DrawMode): void {\n    this.setDrawMode(mode);\n    this.polygonInformation.saveCurrentState();\n  }\n  // remove, use modeChange\n  drawModeClick(): void {\n    if (this.polygonInformation.polygonDrawStates.isFreeDrawMode) {\n      this.polygonInformation.setMoveMode();\n      this.setDrawMode(DrawMode.Off);\n    } else {\n      this.polygonInformation.setFreeDrawMode();\n      this.setDrawMode(DrawMode.Add);\n    }\n    this.polygonInformation.saveCurrentState();\n  }\n  // remove, use modeChange\n  freedrawMenuClick(): void {\n    this.setDrawMode(DrawMode.Add);\n    this.polygonInformation.activate();\n    this.polygonInformation.saveCurrentState();\n  }\n\n  // remove, use modeChange\n  subtractClick(): void {\n    this.setDrawMode(DrawMode.Subtract);\n    this.polygonInformation.saveCurrentState();\n  }\n  // fine\n  private resetTracker() {\n    this.tracer.setLatLngs([[0, 0]]);\n  }\n\n  toggleMarkerMenu(): void {\n    alert('open menu');\n  }\n  private getHtmlContent(callBack: Function): HTMLElement {\n    const comp = this.popupGenerator.generateAlterPopup();\n    comp.instance.bboxClicked.subscribe(e => {\n      callBack(e);\n    });\n    comp.instance.simplyfiClicked.subscribe(e => {\n      callBack(e);\n    });\n    return comp.location.nativeElement;\n  }\n  private convertToBoundsPolygon(\n    latlngs: ILatLng[],\n    addMidpointMarkers: boolean = false\n  ) {\n    this.deletePolygon([latlngs]);\n    const polygon = this.turfHelper.getMultiPolygon(\n      this.convertToCoords([latlngs])\n    );\n    const newPolygon = this.turfHelper.convertToBoundingBoxPolygon(\n      polygon,\n      addMidpointMarkers\n    );\n\n    this.addPolygonLayer(this.turfHelper.getTurfPolygon(newPolygon), false);\n  }\n  private convertToSimplifiedPolygon(latlngs: ILatLng[]) {\n    this.deletePolygon([latlngs]);\n    const newPolygon = this.turfHelper.getMultiPolygon(\n      this.convertToCoords([latlngs])\n    );\n    this.addPolygonLayer(this.turfHelper.getTurfPolygon(newPolygon), true);\n  }\n  private getMarkerIndex(latlngs: ILatLng[], position: MarkerPosition): number {\n    const bounds: L.LatLngBounds = PolyDrawUtil.getBounds(\n      latlngs,\n      Math.sqrt(2) / 2\n    );\n    const compass = new Compass(\n      bounds.getSouth(),\n      bounds.getWest(),\n      bounds.getNorth(),\n      bounds.getEast()\n    );\n    const compassDirection = compass.getDirection(position);\n    const latLngPoint: ILatLng = {\n      lat: compassDirection.lat,\n      lng: compassDirection.lng\n    };\n    const targetPoint = this.turfHelper.getCoord(latLngPoint);\n    const fc = this.turfHelper.getFeaturePointCollection(latlngs);\n    const nearestPointIdx = this.turfHelper.getNearestPointIndex(\n      targetPoint,\n      fc as any\n    );\n\n    return nearestPointIdx;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { AlterPolygonComponent } from \"./popups/alter-polygon/alter-polygon.component\";\nimport { PolyDrawService } from './polydraw.service';\nimport { PolygonInformationService } from './polygon-information.service';\nimport { PolyStateService } from './map-state.service';\n\n@NgModule({\n  declarations: [ AlterPolygonComponent],\n  imports: [],\n  providers: [PolyDrawService, PolygonInformationService, PolyStateService],\n  exports: [AlterPolygonComponent ],\n  entryComponents: [AlterPolygonComponent]\n})\nexport class MyLibModule {}\n"],"names":["BehaviorSubject","map","Injectable","DrawMode","MarkerPosition","L.Polyline","union","turf.union","turf.explode","turf.multiPolygon","turf.simplify","turf.unkinkPolygon","turf.featureEach","turf.getCoords","turf.kinks","intersect","turf.intersect","turf.booleanPointInPolygon","turf.distance","turf.booleanWithin","turf.polygon","bbox","turf.bbox","bboxPolygon","turf.bboxPolygon","polygon","turf.nearestPoint","turf.coordReduce","turf.difference","nearestPoint","centerOfMass","turf.centerOfMass","turf.getCoord","turf.point","turf.featureCollection","L.Polygon","area","turf.area","turf.length","midpoint","turf.midpoint","Subject","EventEmitter","Output","Component","ComponentFactoryResolver","Injector","L.polygon","filter","L.polyline","debounceTime","takeUntil","L.FeatureGroup","L.GeoJSON","L.Marker","L.divIcon","L.DomUtil","NgModule"],"mappings":"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"}