{"version":3,"file":"my-lib.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/my-lib/src/lib/map-state.service.ts","../../../projects/my-lib/src/lib/enums.ts","../../../projects/my-lib/src/lib/utils.ts","../../../projects/my-lib/src/lib/turf-helper.service.ts","../../../projects/my-lib/src/lib/polygon.util.ts","../../../projects/my-lib/src/lib/polygon-helpers.ts","../../../projects/my-lib/src/lib/polygon-information.service.ts","../../../projects/my-lib/src/lib/popups/alter-polygon/alter-polygon.component.ts","../../../projects/my-lib/src/lib/component-generater.service.ts","../../../projects/my-lib/src/lib/leaflet-helper.service.ts","../../../projects/my-lib/src/lib/polydraw.service.ts","../../../projects/my-lib/src/lib/my-lib.module.ts","../../../projects/my-lib/src/public-api.ts","../../../projects/my-lib/src/my-lib.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport * as L from \"leaflet\"\r\nimport { ILatLng } from './polygon-helpers';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PolyStateService {\r\n    constructor() { }\r\n    \r\n\r\n    private mapSubject = new BehaviorSubject<L.Map>(null); \r\n    \r\n    map$: Observable<L.Map> = this.mapSubject.asObservable();\r\n    private polygonSubject = new BehaviorSubject<ILatLng[][][]>(null); \r\n\r\n    polygons$: Observable<ILatLng[][][]> = this.polygonSubject.asObservable();\r\n    private mapStateSubject = new BehaviorSubject<MapStateModel>(new MapStateModel());\r\n    mapState$: Observable<MapStateModel> = this.mapStateSubject.asObservable();\r\n    mapZoomLevel$: Observable<number>  = this.mapState$.pipe(map((state: MapStateModel) => state.mapBoundState.zoom));\r\n\r\n    private updateMapStates(newState: any): void {\r\n        let state = this.mapStateSubject.value;\r\n        state = { ...state, ...newState };\r\n\r\n        this.mapStateSubject.next(state);\r\n    }\r\n\r\n\r\n    updateMapState(map: L.Map){\r\n        this.mapSubject.next(map)\r\n    }\r\n\r\n    updatePolygons(polygons: ILatLng[][][]):void{\r\n        \r\n        this.polygonSubject.next(polygons)\r\n    }\r\n    updateMapBounds(mapBounds: MapBoundsState) {\r\n        this.updateMapStates({ mapBoundState: mapBounds });\r\n    }\r\n}\r\n\r\nclass MapStateModel {\r\n    constructor(\r\n      \r\n        public mapBoundState: MapBoundsState = new MapBoundsState(null, 11)) { }\r\n}\r\nclass MapBoundsState {\r\n    constructor(\r\n        public bounds: L.LatLngBounds,\r\n        public zoom: number) { }\r\n}","export enum DrawMode {\r\n    Off = 0,\r\n    Add = 1,\r\n    Edit = 2,\r\n    Subtract = 4,\r\n    AppendMarker = 8,\r\n    LoadPredefined = 16\r\n}\r\nexport enum MarkerPosition {\r\n    // CenterOfMass = 0,\r\n    North = 1,\r\n    East = 2,\r\n    South = 3,\r\n    West = 4,\r\n    NorthEast = 5,\r\n    NorthWest = 6,\r\n    SouthEast = 7,\r\n    SouthWest = 8,\r\n    // BoundingBoxCenter = 9\r\n}\r\n\r\n\r\n","import { ICompass } from \"./interface\";\r\nimport * as L from \"leaflet\";\r\nimport { ILatLng } from \"./polygon-helpers\";\r\nimport { MarkerPosition } from \"./enums\";\r\n\r\nexport class PolyDrawUtil {\r\n    static getBounds(polygon: ILatLng[], padding: number = 0): L.LatLngBounds {\r\n        const tmpLatLng: L.LatLng[] = [];\r\n        polygon.forEach(ll => {\r\n            if (isNaN(ll.lat) || isNaN(ll.lng)) {\r\n            }\r\n            tmpLatLng.push(ll as L.LatLng);\r\n        });\r\n        const polyLine: L.Polyline = new L.Polyline(tmpLatLng);\r\n        const bounds = polyLine.getBounds();\r\n        if (padding !== 0) {\r\n            return bounds.pad(padding);\r\n        }\r\n        return bounds;\r\n    }\r\n}\r\n//TODO make compass ILatLng\r\nexport class Compass {\r\n\r\n    public direction: ICompass = {\r\n        // BoundingBoxCenter: { lat: 0, lng: 0 },\r\n        // CenterOfMass: { lat: 0, lng: 0 },\r\n        East: { lat: 0, lng: 0 },\r\n        North: { lat: 0, lng: 0 },\r\n        NorthEast: { lat: 0, lng: 0 },\r\n        NorthWest: { lat: 0, lng: 0 },\r\n        South: { lat: 0, lng: 0 },\r\n        SouthEast: { lat: 0, lng: 0 },\r\n        SouthWest: { lat: 0, lng: 0 },\r\n        West: { lat: 0, lng: 0 }\r\n    };\r\n\r\n    constructor(minLat: number = 0, minLng: number = 0, maxLat: number = 0, maxLng: number = 0) {\r\n\r\n        this.direction.North = { lat: maxLat, lng: (minLng + maxLng) / 2 };\r\n        this.direction.NorthEast = { lat: maxLat, lng: maxLng };\r\n        this.direction.East = { lat: (minLat + maxLat) / 2, lng: maxLng };\r\n        this.direction.SouthEast = { lat: minLat, lng: maxLng };\r\n        this.direction.South = { lat: minLat, lng: (minLng + maxLng) / 2 };\r\n        this.direction.SouthWest = { lat: minLat, lng: minLng };\r\n        this.direction.West = { lat: (minLat + maxLat) / 2, lng: minLng };\r\n        this.direction.NorthWest = { lat: maxLat, lng: minLng };\r\n        // this.direction.CenterOfMass = { lat: 0, lng: 0 };\r\n        // this.direction.BoundingBoxCenter = {lat: (minLat + maxLat) / 2, lng: (minLng + maxLng) / 2};\r\n    }\r\n    //TODO default return.\r\n    getDirection(direction: MarkerPosition) {\r\n        switch (direction) {\r\n            // case MarkerPosition.CenterOfMass:\r\n            //     return this.direction.CenterOfMass;\r\n            case MarkerPosition.North:\r\n                return this.direction.North;\r\n            case MarkerPosition.NorthEast:\r\n                return this.direction.NorthEast;\r\n            case MarkerPosition.East:\r\n                return this.direction.East;\r\n            case MarkerPosition.SouthEast:\r\n                return this.direction.SouthEast;\r\n            case MarkerPosition.South:\r\n                return this.direction.South;\r\n            case MarkerPosition.SouthWest:\r\n                return this.direction.SouthWest;\r\n            case MarkerPosition.West:\r\n                return this.direction.West;\r\n            case MarkerPosition.NorthWest:\r\n                return this.direction.NorthWest;\r\n            // case MarkerPosition.BoundingBoxCenter:\r\n            //     return this.direction.BoundingBoxCenter;\r\n            default:\r\n                return this.direction.North;\r\n        }\r\n    }\r\n    //TODO startNode, go clockwise or not\r\n    getPositions(startNode: MarkerPosition = MarkerPosition.SouthWest, clockwise: boolean = false, addClosingNode: boolean = true): number[][] {\r\n\r\n        let positions: number[][] = [];\r\n\r\n        positions.push([this.direction.SouthWest.lng, this.direction.SouthWest.lat]);\r\n        positions.push([this.direction.SouthWest.lng, this.direction.SouthWest.lat]);\r\n        positions.push([this.direction.South.lng, this.direction.South.lat]);\r\n        positions.push([this.direction.SouthEast.lng, this.direction.SouthEast.lat]);\r\n        positions.push([this.direction.East.lng, this.direction.East.lat]);\r\n        positions.push([this.direction.NorthEast.lng, this.direction.NorthEast.lat]);\r\n        positions.push([this.direction.North.lng, this.direction.North.lat]);\r\n        positions.push([this.direction.NorthWest.lng, this.direction.NorthWest.lat]);\r\n        positions.push([this.direction.West.lng, this.direction.West.lat]);\r\n        if (addClosingNode) {\r\n            positions.push([this.direction.SouthWest.lng, this.direction.SouthWest.lat]);\r\n        }\r\n\r\n\r\n\r\n        return positions;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\nimport * as turf from '@turf/turf';\r\nimport concaveman from 'concaveman';\r\nimport {Feature, Polygon, MultiPolygon, Position, Point} from '@turf/turf';\r\nimport { MarkerPosition } from './enums';\r\nimport { ICompass } from './interface';\r\nimport { Compass } from './utils';\r\nimport { ILatLng } from './polygon-helpers';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TurfHelperService {\r\n  private simplifyTolerance = { tolerance: 0.0001, highQuality: false };\r\n  constructor() {}\r\n\r\n  union(poly1, poly2): Feature<Polygon | MultiPolygon> {\r\n\r\n\r\n\r\n    const union = turf.union(poly1, poly2);\r\n\r\n    return this.getTurfPolygon(union);\r\n  }\r\n\r\n  turfConcaveman(\r\n    feature: Feature<Polygon | MultiPolygon>\r\n  ): Feature<Polygon | MultiPolygon> {\r\n\r\n    const points = turf.explode(feature);\r\n\r\n    const coordinates = points.features.map(f => f.geometry.coordinates);\r\n    return turf.multiPolygon([[concaveman(coordinates)]]);\r\n  }\r\n\r\n  //TODO add some sort of dynamic tolerance\r\n  getSimplified(\r\n    polygon: Feature<Polygon | MultiPolygon>\r\n  ): Feature<Polygon | MultiPolygon> {\r\n    const tolerance = this.simplifyTolerance;\r\n    const simplified = turf.simplify(polygon, tolerance);\r\n    return simplified;\r\n  }\r\n\r\n  getTurfPolygon(\r\n    polygon: Feature<Polygon | MultiPolygon>\r\n  ): Feature<Polygon | MultiPolygon> {\r\n    let turfPolygon;\r\n\r\n    // if (polygon.geometry)\r\n    if (polygon.geometry.type === 'Polygon') {\r\n      turfPolygon = turf.multiPolygon([polygon.geometry.coordinates]);\r\n    } else {\r\n      turfPolygon = turf.multiPolygon(polygon.geometry.coordinates);\r\n    }\r\n    return turfPolygon;\r\n  }\r\n\r\n  getMultiPolygon(\r\n    polygonArray: Position[][][]\r\n  ): Feature<Polygon | MultiPolygon> {\r\n    return turf.multiPolygon(polygonArray);\r\n  }\r\n\r\n  getKinks(feature: Feature<Polygon | MultiPolygon>) {\r\n    const unkink = turf.unkinkPolygon(feature);\r\n    const coordinates = [];\r\n    turf.featureEach(unkink, current => {\r\n      coordinates.push(current);\r\n    });\r\n\r\n    return coordinates;\r\n  }\r\n\r\n  getCoords(feature: Feature<Polygon | MultiPolygon>) {\r\n    return turf.getCoords(feature);\r\n  }\r\n\r\n  hasKinks(feature: Feature<Polygon | MultiPolygon>) {\r\n    const kinks = turf.kinks(feature);\r\n    return kinks.features.length > 0;\r\n  }\r\n\r\n  polygonIntersect(\r\n    polygon: Feature<Polygon | MultiPolygon>,\r\n    latlngs: Feature<Polygon | MultiPolygon>\r\n  ): boolean {\r\n    // const oldPolygon = polygon.toGeoJSON();\r\n    const poly = [];\r\n    const poly2 = [];\r\n\r\n\r\n\r\n    const latlngsCoords = turf.getCoords(latlngs);\r\n    latlngsCoords.forEach(element => {\r\n      const feat = { type: 'Polygon', coordinates: [element[0]] };\r\n\r\n      poly.push(feat);\r\n    });\r\n    const polygonCoords = turf.getCoords(polygon);\r\n    polygonCoords.forEach(element => {\r\n      const feat = { type: 'Polygon', coordinates: [element[0]] };\r\n\r\n      poly2.push(feat);\r\n    });\r\n    let intersect = false;\r\n    loop1: for (let i = 0; i < poly.length; i++) {\r\n      if (this.getKinks(poly[i]).length < 2) {\r\n        for (let j = 0; j < poly2.length; j++) {\r\n          if (this.getKinks(poly2[j]).length < 2) {\r\n            const test = turf.intersect(poly[i], poly2[j]);\r\n            // @ts-ignore\r\n            if (test?.geometry.type === 'Point') {\r\n              // @ts-ignore\r\n              // @ts-ignore\r\n              intersect = !(\r\n                turf.booleanPointInPolygon(test as unknown as Point, poly[i]) &&\r\n                turf.booleanPointInPolygon(test as unknown as Point, poly2[j])\r\n              );\r\n\r\n            } else if (test?.geometry.type === 'Polygon') {\r\n              intersect = !!turf.intersect(poly[i], poly2[j]);\r\n            }\r\n\r\n            if (intersect) {\r\n              break loop1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return intersect;\r\n  }\r\n\r\n  getIntersection(poly1, poly2): Feature {\r\n    return turf.intersect(poly1, poly2);\r\n  }\r\n  getDistance(point1, point2): number {\r\n    return turf.distance(point1, point2);\r\n  }\r\n\r\n  isWithin(polygon1: Position[], polygon2: Position[]): boolean {\r\n\r\n\r\n    return turf.booleanWithin(\r\n      turf.polygon([polygon1]),\r\n      turf.polygon([polygon2])\r\n    );\r\n  }\r\n\r\n  equalPolygons(\r\n    polygon1: Feature<Polygon | MultiPolygon>,\r\n    polygon2: Feature<Polygon | MultiPolygon>\r\n  ) {\r\n\r\n\r\n\r\n  }\r\n  //TODO optional add extra markers for N E S W (We have the corners NW, NE, SE, SW)\r\n  convertToBoundingBoxPolygon(\r\n    polygon: Feature<Polygon | MultiPolygon>,\r\n    addMidpointMarkers: boolean = false\r\n  ): Feature<Polygon> {\r\n    const bbox = turf.bbox(polygon.geometry);\r\n    const bboxPolygon = turf.bboxPolygon(bbox);\r\n\r\n    const compass = new Compass(bbox[1], bbox[0], bbox[3], bbox[2]);\r\n\r\n    const compassPositions = compass.getPositions();\r\n\r\n    bboxPolygon.geometry.coordinates = [];\r\n    bboxPolygon.geometry.coordinates = [compassPositions];\r\n\r\n    return bboxPolygon;\r\n  }\r\n  polygonToMultiPolygon(poly: Feature<Polygon>): Feature<MultiPolygon> {\r\n    const multi = turf.multiPolygon([poly.geometry.coordinates]);\r\n    return multi;\r\n  }\r\n  //TODO -cleanup\r\n  injectPointToPolygon(polygon, point) {\r\n    const coords = turf.getCoords(polygon);\r\n    let newPolygon;\r\n\r\n    if (coords.length < 2) {\r\n      const polygonPoints = turf.explode(polygon);\r\n\r\n      const index = turf.nearestPoint(point, polygonPoints).properties\r\n        .featureIndex;\r\n      const test = turf.coordReduce(\r\n        polygonPoints,\r\n        function(accumulator, oldPoint, i) {\r\n          if (index === i) {\r\n            return [...accumulator, oldPoint, point];\r\n          }\r\n          return [...accumulator, oldPoint];\r\n        },\r\n        []\r\n      );\r\n\r\n      newPolygon = turf.multiPolygon([[test]]);\r\n    } else {\r\n      const pos = [];\r\n      let coordinates = [];\r\n      coords.forEach(element => {\r\n        const polygon = turf.polygon(element);\r\n        // turf.booleanPointInPolygon(point, polygon)\r\n        if (turf.booleanPointInPolygon(point, polygon)) {\r\n          const polygonPoints = turf.explode(polygon);\r\n          const index = turf.nearestPoint(point, polygonPoints).properties\r\n            .featureIndex;\r\n          coordinates = turf.coordReduce(\r\n            polygonPoints,\r\n            function(accumulator, oldPoint, i) {\r\n              if (index === i) {\r\n                return [...accumulator, oldPoint, point];\r\n              }\r\n              return [...accumulator, oldPoint];\r\n            },\r\n            []\r\n          );\r\n\r\n        } else {\r\n          pos.push(element);\r\n        }\r\n      });\r\n      pos.push([coordinates]);\r\n      newPolygon = turf.multiPolygon(pos);\r\n    }\r\n    return newPolygon;\r\n  }\r\n\r\n  polygonDifference(\r\n    polygon1: Feature<Polygon | MultiPolygon>,\r\n    polygon2: Feature<Polygon | MultiPolygon>\r\n  ): Feature<Polygon | MultiPolygon> {\r\n    const diff = turf.difference(polygon1, polygon2);\r\n\r\n    return this.getTurfPolygon(diff);\r\n  }\r\n  getBoundingBoxCompassPosition(\r\n    polygon,\r\n    MarkerPosition: ICompass,\r\n    useOffset,\r\n    offsetDirection\r\n  ) {\r\n    const p = this.getMultiPolygon(polygon);\r\n    const compass = this.getBoundingBoxCompass(polygon);\r\n    const polygonPoints = turf.explode(polygon);\r\n    const coord = this.getCoord(compass.direction.North);\r\n    const nearestPoint = turf.nearestPoint(coord, polygonPoints);\r\n\r\n    return null;\r\n  }\r\n  private getBoundingBoxCompass(polygon): Compass {\r\n    const p = this.getMultiPolygon(polygon);\r\n    const centerOfMass = turf.centerOfMass(p);\r\n    const b = turf.bbox(p);\r\n    const minX = b[0];\r\n    const minY = b[1];\r\n    const maxX = b[2];\r\n    const maxY = b[3];\r\n    const compass = new Compass(minX, minY, maxX, maxY);\r\n    // compass.direction.CenterOfMass = centerOfMass.geometry.coordinates[0][0];\r\n\r\n    return compass;\r\n  }\r\n\r\n  getNearestPointIndex(\r\n    targetPoint: turf.Coord,\r\n    points: turf.FeatureCollection<turf.Point>\r\n  ): number {\r\n    const index = turf.nearestPoint(targetPoint, points).properties.featureIndex;\r\n    return index;\r\n  }\r\n  getCoord(point: ILatLng): turf.Coord {\r\n    const coord = turf.getCoord([point.lng, point.lat]);\r\n    return coord;\r\n  }\r\n  getFeaturePointCollection(points: ILatLng[]): turf.FeatureCollection {\r\n    const pts = [];\r\n    points.forEach(v => {\r\n      const p = turf.point([v.lng, v.lat], {});\r\n      pts.push(p);\r\n    });\r\n\r\n    const fc = turf.featureCollection(pts);\r\n\r\n    return fc;\r\n  }\r\n}\r\n","\r\nimport * as L from \"leaflet\";\r\nimport * as turf from \"@turf/turf\"\r\nimport { ILatLng } from \"./polygon-helpers\";\r\n\r\nexport class PolygonUtil {\r\n    static getCenter(polygon: ILatLng[]) {\r\n        const pi = Math.PI;\r\n        let x = 0;\r\n        let y = 0;\r\n        let z = 0;\r\n\r\n        polygon.forEach(v => {\r\n            let lat1 = v.lat;\r\n            let lon1 = v.lng;\r\n            lat1 = lat1 * pi / 180;\r\n            lon1 = lon1 * pi / 180;\r\n            x += Math.cos(lat1) * Math.cos(lon1);\r\n            y += Math.cos(lat1) * Math.sin(lon1);\r\n            z += Math.sin(lat1);\r\n        });\r\n\r\n        let lng = Math.atan2(y, x);\r\n        const hyp = Math.sqrt(x * x + y * y);\r\n        let lat = Math.atan2(z, hyp);\r\n        lat = lat * 180 / pi;\r\n        lng = lng * 180 / pi;\r\n        const center: ILatLng = { lat: lat, lng: lng };\r\n\r\n        return center;\r\n    }\r\n    static getSouthWest(polygon: ILatLng[]): ILatLng {\r\n        const bounds = this.getBounds(polygon);\r\n        return bounds.getNorthWest();\r\n    }\r\n    static getNorthEast(polygon: ILatLng[]): ILatLng {\r\n        const bounds = this.getBounds(polygon);\r\n        return bounds.getNorthEast();\r\n    }\r\n    static getNorthWest(polygon: ILatLng[]): ILatLng {\r\n        const bounds = this.getBounds(polygon);\r\n        return bounds.getNorthWest();\r\n    }\r\n    static getSouthEast(polygon: ILatLng[]): ILatLng {\r\n        const bounds = this.getBounds(polygon);\r\n        return bounds.getSouthEast();\r\n    }\r\n    static getNorth(polygon: ILatLng[]): number {\r\n        const bounds = this.getBounds(polygon);\r\n        return bounds.getNorth();\r\n    }\r\n    static getSouth(polygon: ILatLng[]): number {\r\n        const bounds = this.getBounds(polygon);\r\n        return bounds.getSouth();\r\n    }\r\n    static getWest(polygon: ILatLng[]): number {\r\n        const bounds = this.getBounds(polygon);\r\n        return bounds.getWest();\r\n    }\r\n    static getEast(polygon: ILatLng[]): number {\r\n        const bounds = this.getBounds(polygon);\r\n        return bounds.getEast();\r\n    }\r\n    static getSqmArea(polygon: ILatLng[]): number {\r\n        const poly: L.Polygon = new L.Polygon(polygon);\r\n        const geoJsonPoly = poly.toGeoJSON();\r\n\r\n        const area = turf.area((geoJsonPoly) as any);\r\n\r\n        return area;\r\n    }\r\n    static getPerimeter(polygon: ILatLng[]): number {\r\n        const poly: L.Polygon = new L.Polygon(polygon);\r\n        const geoJsonPoly = poly.toGeoJSON();\r\n\r\n        const perimeter = turf.length((geoJsonPoly) as any, {units: \"meters\"});\r\n\r\n        return perimeter;\r\n    }\r\n    static getPolygonChecksum(polygon: ILatLng[]): number {\r\n        const uniqueLatLngs = polygon.filter((v, i, a) => {\r\n            return a.indexOf(a.find(x => x.lat === v.lat && x.lng === v.lng)) === i;\r\n        });\r\n\r\n        return uniqueLatLngs.reduce((a, b) => +a + +b.lat, 0) * uniqueLatLngs.reduce((a, b) => +a + +b.lng, 0);\r\n    }\r\n    static getMidPoint(point1: ILatLng, point2: ILatLng): ILatLng {\r\n\r\n        const p1 = turf.point([point1.lng, point1.lat]);\r\n        const p2 = turf.point([point2.lng, point2.lat]);\r\n\r\n        const midpoint = turf.midpoint(p1, p2);\r\n\r\n        const returnPoint: ILatLng = {\r\n            lat: midpoint.geometry.coordinates[1],\r\n            lng: midpoint.geometry.coordinates[0]\r\n        };\r\n\r\n        return returnPoint;\r\n    }\r\n    static getBounds(polygon: ILatLng[]): L.LatLngBounds {\r\n        const tmpLatLng: L.LatLng[] = [];\r\n\r\n        polygon.forEach(ll => {\r\n            if (isNaN(ll.lat) || isNaN(ll.lng)) {\r\n            }\r\n            tmpLatLng.push(ll as L.LatLng);\r\n        });\r\n\r\n        const polyLine: L.Polyline = new L.Polyline(tmpLatLng);\r\n        const bounds = polyLine.getBounds();\r\n\r\n        return bounds;\r\n\r\n    }\r\n}\r\n\r\n//export class FreedrawSubtract extends L.FreeDraw {\r\n\r\n\r\n//    constructor() {\r\n\r\n//        //this will become L.FreeDraw\r\n//        super(null);\r\n//        //call methods in freedraw by this\r\n//        const foo = this.size();\r\n\r\n//        this.consoleLogNumberOfPolygons(foo);\r\n\r\n//    }\r\n\r\n//    consoleLogNumberOfPolygons(size: number): void {\r\n//        console.log(\"Number of polygons: \", size);\r\n//    }\r\n\r\n//}","import { PolygonUtil } from './polygon.util';\r\n\r\nexport class PolygonInfo {\r\n  polygon: ILatLng[][][] = [];\r\n  trashcanPoint: ILatLng[] = [];\r\n  sqmArea: number[] = [];\r\n  perimeter: number[] = [];\r\n  constructor(polygon) {\r\n    \r\n    polygon.forEach((polygons, i) => {\r\n      this.trashcanPoint[i] = this.getTrashcanPoint(polygons[0]);\r\n      this.sqmArea[i] = this.calculatePolygonArea(polygons[0]);\r\n      this.perimeter[i] = this.calculatePolygonPerimeter(polygons[0]);\r\n    \r\n      this.polygon[i] = polygons;\r\n    });\r\n  }\r\n  setSqmArea(area: number): void {\r\n    this.sqmArea[0] = area;\r\n  }\r\n  private getTrashcanPoint(polygon: ILatLng[]): ILatLng {\r\n    const res = Math.max.apply(\r\n      Math,\r\n      polygon.map(o => o.lat)\r\n    );\r\n    const idx = polygon.findIndex(o => o.lat === res);\r\n\r\n    let previousPoint: ILatLng;\r\n    let nextPoint: ILatLng;\r\n\r\n    if (idx > 0) {\r\n      previousPoint = polygon[idx - 1];\r\n      if (idx < polygon.length - 1) {\r\n        nextPoint = polygon[idx + 1];\r\n      } else {\r\n        nextPoint = polygon[0];\r\n      }\r\n    } else {\r\n      previousPoint = polygon[polygon.length - 1];\r\n      nextPoint = polygon[idx + 1];\r\n    }\r\n\r\n    const secondPoint =\r\n      previousPoint.lng < nextPoint.lng ? previousPoint : nextPoint;\r\n\r\n    const midpoint = PolygonUtil.getMidPoint(polygon[idx], secondPoint);\r\n\r\n    return midpoint;\r\n  }\r\n  private calculatePolygonArea(polygon: ILatLng[]): number {\r\n    const area = PolygonUtil.getSqmArea(polygon as any);\r\n    return area;\r\n  }\r\n  private calculatePolygonPerimeter(polygon: ILatLng[]): number {\r\n    const perimeter = PolygonUtil.getPerimeter(polygon as any);\r\n    return perimeter;\r\n  }\r\n}\r\nconst addClass: (selector: string, className: string) => void = (\r\n  selector: string,\r\n  className: string\r\n): void => {\r\n  const elements: NodeListOf<HTMLElement> = document.querySelectorAll(selector);\r\n  for (let i = 0; i < elements.length; i++) {\r\n    elements.item(i).classList.add(className);\r\n  }\r\n};\r\n\r\nconst removeClass: (selector: string, className: string) => void = (\r\n  selector: string,\r\n  className: string\r\n): void => {\r\n  const elements: NodeListOf<HTMLElement> = document.querySelectorAll(selector);\r\n  for (let i = 0; i < elements.length; i++) {\r\n    elements.item(i).classList.remove(className);\r\n  }\r\n};\r\n\r\nexport class PolygonDrawStates {\r\n  isActivated: boolean;\r\n  isFreeDrawMode: boolean;\r\n  isMoveMode: boolean;\r\n  canRevert: boolean;\r\n  isAuto: boolean;\r\n  hasPolygons: boolean;\r\n  canUsePolyDraw: boolean;\r\n\r\n  constructor() {\r\n    this.canUsePolyDraw = false;\r\n    this.reset();\r\n  }\r\n\r\n  activate(): void {\r\n    this.reset();\r\n    this.isActivated = true;\r\n  }\r\n\r\n  reset(): void {\r\n    this.isActivated = false;\r\n    this.hasPolygons = false;\r\n    this.canRevert = false;\r\n    this.isAuto = false;\r\n\r\n    this.resetDrawModes();\r\n  }\r\n\r\n  resetDrawModes(): void {\r\n    this.isFreeDrawMode = false;\r\n    removeClass('img.leaflet-tile', 'disable-events');\r\n    this.isMoveMode = false;\r\n  }\r\n\r\n  setFreeDrawMode(isAuto: boolean = false): void {\r\n    if (isAuto) {\r\n      this.isActivated = true;\r\n    }\r\n    if (this.isActivated) {\r\n      this.resetDrawModes();\r\n      this.isFreeDrawMode = true;\r\n      addClass('img.leaflet-tile', 'disable-events');\r\n      if (isAuto) {\r\n        this.isAuto = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  setMoveMode(): void {\r\n    if (this.isActivated) {\r\n      this.resetDrawModes();\r\n      this.isMoveMode = true;\r\n    }\r\n  }\r\n\r\n  forceCanUseFreeDraw(): void {\r\n    this.canUsePolyDraw = true;\r\n  }\r\n}\r\n\r\nexport interface ILatLng {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Subject, Observable } from \"rxjs\";\r\nimport { PolygonInfo, PolygonDrawStates, ILatLng } from \"./polygon-helpers\";\r\nimport { PolyStateService } from \"./map-state.service\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class PolygonInformationService {\r\n  polygonInformationSubject: Subject<PolygonInfo[]> = new Subject<\r\n    PolygonInfo[]\r\n  >();\r\n  polygonInformation$: Observable<\r\n    PolygonInfo[]\r\n  > = this.polygonInformationSubject.asObservable();\r\n  polygonDrawStatesSubject: Subject<PolygonDrawStates> = new Subject<\r\n    PolygonDrawStates\r\n  >();\r\n  polygonDrawStates$: Observable<\r\n    PolygonDrawStates\r\n  > = this.polygonDrawStatesSubject.asObservable();\r\n\r\n  polygonDrawStates: PolygonDrawStates = null;\r\n  polygonInformationStorage = [];\r\n  constructor(private mapStateService: PolyStateService) {\r\n    this.polygonDrawStates = new PolygonDrawStates();\r\n  }\r\n\r\n  updatePolygons() {\r\n    \r\n\r\n    let newPolygons: ILatLng[][][] = null;\r\n    if (this.polygonInformationStorage.length > 0) {\r\n      newPolygons = [];\r\n\r\n      this.polygonInformationStorage.forEach(v => {\r\n        let test = [];\r\n        v.polygon.forEach(poly => {\r\n          let test2 = [];\r\n\r\n          poly.forEach(polygon => {\r\n            test2 = [...polygon];\r\n            if (\r\n              polygon[0].toString() !== polygon[polygon.length - 1].toString()\r\n            ) {\r\n              test2.push(polygon[0]);\r\n            }\r\n            test.push(test2);\r\n          });\r\n        });\r\n\r\n        newPolygons.push(test);\r\n      });\r\n\r\n      this.polygonDrawStates.hasPolygons = true;\r\n    } else {\r\n      this.polygonDrawStates.reset();\r\n      this.polygonDrawStates.hasPolygons = false;\r\n    }\r\n    this.mapStateService.updatePolygons(newPolygons);\r\n    this.saveCurrentState();\r\n  }\r\n\r\n  saveCurrentState(): void {\r\n    this.polygonInformationSubject.next(this.polygonInformationStorage);\r\n    this.polygonDrawStatesSubject.next(this.polygonDrawStates);\r\n    \r\n  }\r\n\r\n  deleteTrashcan(polygon) {\r\n    const idx = this.polygonInformationStorage.findIndex(\r\n      v => v.polygon[0] === polygon\r\n    );\r\n    this.polygonInformationStorage.splice(idx, 1);\r\n    this.updatePolygons();\r\n  }\r\n\r\n  deleteTrashCanOnMulti(polygon: ILatLng[][][]) {\r\n    let index = 0;\r\n    \r\n    \r\n    // const idx = this.polygonInformationStorage.findIndex(v => v.polygon.forEach(poly =>{ poly === polygon}) );\r\n    this.polygonInformationStorage.forEach((v, i) => {\r\n      \r\n      const id = v.polygon.findIndex(\r\n        poly => poly.toString() === polygon.toString()\r\n      );\r\n      if (id >= 0) {\r\n        index = i;\r\n        v.trashcanPoint.splice(id, 1);\r\n        v.sqmArea.splice(id, 1);\r\n        v.perimeter.splice(id, 1);\r\n        v.polygon.splice(id, 1);\r\n\r\n        \r\n      }\r\n      \r\n    });\r\n    this.updatePolygons();\r\n    \r\n    if (this.polygonInformationStorage.length > 1) {\r\n      this.polygonInformationStorage.splice(index, 1);\r\n    }\r\n    \r\n  }\r\n\r\n  deletePolygonInformationStorage() {\r\n    this.polygonInformationStorage = [];\r\n  }\r\n\r\n  createPolygonInformationStorage(arrayOfFeatureGroups) {\r\n    \r\n    if (arrayOfFeatureGroups.length > 0) {\r\n      arrayOfFeatureGroups.forEach(featureGroup => {\r\n        \r\n        let polyInfo = new PolygonInfo(\r\n          featureGroup.getLayers()[0].getLatLngs()\r\n        );\r\n        this.polygonInformationStorage.push(polyInfo);\r\n      });\r\n      this.updatePolygons();\r\n    }\r\n  }\r\n\r\n  activate() {\r\n    this.polygonDrawStates.activate();\r\n  }\r\n  reset() {\r\n    this.polygonDrawStates.reset();\r\n  }\r\n\r\n  setMoveMode() {\r\n    this.polygonDrawStates.setMoveMode();\r\n  }\r\n\r\n  setFreeDrawMode() {\r\n    this.polygonDrawStates.setFreeDrawMode();\r\n  }\r\n}\r\n","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-alter-polygon',\r\n  templateUrl: './alter-polygon.component.html',\r\n  styleUrls: ['./alter-polygon.component.css']\r\n})\r\nexport class AlterPolygonComponent {\r\n\r\n  @Output() simplyfiClicked: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  @Output() bboxClicked: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  onSimplify($event: MouseEvent): void {\r\n    this.simplyfiClicked.emit($event);\r\n  }\r\n\r\n  onBbox($event: MouseEvent): void {\r\n    this.bboxClicked.emit($event);\r\n  }\r\n\r\n}\r\n","import { Injectable, ComponentFactoryResolver, Injector, ComponentRef, ComponentFactory, OnDestroy, Component } from '@angular/core';\r\nimport { AlterPolygonComponent } from './popups/alter-polygon/alter-polygon.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComponentGeneraterService implements OnDestroy {\r\n\r\n  private clusterPopuprefs: ComponentRef<AlterPolygonComponent>[] = [];\r\n\r\n  constructor(\r\n    private readonly cfr: ComponentFactoryResolver,\r\n    private readonly injector: Injector\r\n  ) { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyAngularPopupComponents();\r\n  }\r\n\r\n  generateAlterPopup(): ComponentRef<AlterPolygonComponent> {\r\n    const cmpFactory: ComponentFactory<AlterPolygonComponent> = this.cfr.resolveComponentFactory(AlterPolygonComponent);\r\n    const popupComponentRef: ComponentRef<AlterPolygonComponent> = cmpFactory.create(this.injector);\r\n    this.clusterPopuprefs.push(popupComponentRef);\r\n    return popupComponentRef;\r\n  }\r\n\r\n  destroyAngularPopupComponents(): void {\r\n    this.clusterPopuprefs.forEach(cref => {\r\n      if (cref) {\r\n        cref.destroy();\r\n      }\r\n    });\r\n    this.clusterPopuprefs = [];\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport * as L from \"leaflet\";\r\nimport { ILatLng } from \"./polygon-helpers\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class LeafletHelperService {\r\n  constructor() {}\r\n\r\n  createPolygon(latLngs: ILatLng[]): L.Polygon {\r\n    const p = L.polygon(latLngs);\r\n    return p;\r\n  }\r\n}\r\n","import { Injectable, Optional } from \"@angular/core\";\r\nimport * as L from \"leaflet\";\r\n// import * as turf from \"@turf/turf\";\r\nimport { Observable, BehaviorSubject, Subject } from \"rxjs\";\r\nimport { filter, debounceTime, takeUntil } from \"rxjs/operators\";\r\nimport { Feature, Polygon, MultiPolygon } from \"@turf/turf\";\r\nimport { PolyStateService } from \"./map-state.service\";\r\nimport { TurfHelperService } from \"./turf-helper.service\";\r\nimport { PolygonInformationService } from \"./polygon-information.service\";\r\nimport defaultConfig from \"./polyinfo.json\";\r\nimport { ILatLng, PolygonDrawStates } from \"./polygon-helpers\";\r\nimport { ComponentGeneraterService } from \"./component-generater.service\";\r\nimport { Compass, PolyDrawUtil } from \"./utils\";\r\nimport { MarkerPosition, DrawMode } from \"./enums\";\r\nimport { LeafletHelperService } from \"./leaflet-helper.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\n// Rename - PolyDrawService\r\nexport class PolyDrawService {\r\n  // DrawModes, determine UI buttons etc...\r\n  drawModeSubject: BehaviorSubject<DrawMode> = new BehaviorSubject<DrawMode>(\r\n    DrawMode.Off\r\n  );\r\n  drawMode$: Observable<DrawMode> = this.drawModeSubject.asObservable();\r\n\r\n  private readonly minimumFreeDrawZoomLevel: number = 12;\r\n  private map: L.Map;\r\n\r\n  private mergePolygons: boolean;\r\n  private kinks: boolean;\r\n  // add to config\r\n  private arrayOfFeatureGroups: L.FeatureGroup<L.Layer>[] = [];\r\n  private tracer: L.Polyline = {} as any;\r\n  // end add to config\r\n\r\n  private ngUnsubscribe = new Subject();\r\n  private config: typeof defaultConfig = null;\r\n\r\n  constructor(\r\n    private mapState: PolyStateService,\r\n    private popupGenerator: ComponentGeneraterService,\r\n    private turfHelper: TurfHelperService,\r\n    private polygonInformation: PolygonInformationService,\r\n    private leafletHelper: LeafletHelperService\r\n  ) {\r\n    this.mapState.map$\r\n      .pipe(filter((m) => m !== null))\r\n      .subscribe((map: L.Map) => {\r\n        this.map = map;\r\n        this.config = defaultConfig;\r\n        this.configurate({});\r\n        this.tracer = L.polyline([[0, 0]], this.config.polyLineOptions);\r\n        this.initPolyDraw();\r\n      });\r\n\r\n    this.mapState.mapZoomLevel$\r\n      .pipe(debounceTime(100), takeUntil(this.ngUnsubscribe))\r\n      .subscribe((zoom: number) => {\r\n        this.onZoomChange(zoom);\r\n      });\r\n  }\r\n  // new\r\n  configurate(config: Object): void {\r\n    // TODO if config is path...\r\n    this.config = { ...defaultConfig, ...config };\r\n\r\n    this.mergePolygons = this.config.mergePolygons;\r\n    this.kinks = this.config.kinks;\r\n  }\r\n\r\n  // fine\r\n  closeAndReset(): void {\r\n    this.setDrawMode(DrawMode.Off);\r\n    this.removeAllFeatureGroups();\r\n  }\r\n\r\n  // make readable\r\n  deletePolygon(polygon: ILatLng[][]) {\r\n    if (polygon.length > 1) {\r\n      polygon.length = 1;\r\n    }\r\n    if (this.arrayOfFeatureGroups.length > 0) {\r\n      this.arrayOfFeatureGroups.forEach((featureGroup) => {\r\n        const layer = featureGroup.getLayers()[0] as any;\r\n        const latlngs = layer.getLatLngs();\r\n        const length = latlngs.length;\r\n        //  = []\r\n\r\n        latlngs.forEach((latlng, index) => {\r\n          let polygon3;\r\n          const test = [...latlng];\r\n\r\n          if (latlng.length > 1) {\r\n            if (latlng[0][0] !== latlng[0][latlng[0].length - 1]) {\r\n              test[0].push(latlng[0][0]);\r\n            }\r\n\r\n            polygon3 = [test[0]];\r\n          } else {\r\n            if (latlng[0] !== latlng[latlng.length - 1]) {\r\n              test.push(latlng[0]);\r\n            }\r\n            polygon3 = test;\r\n          }\r\n\r\n          const equals = this.polygonArrayEquals(polygon3, polygon);\r\n\r\n          if (equals && length === 1) {\r\n            this.polygonInformation.deleteTrashcan(polygon);\r\n\r\n            this.removeFeatureGroup(featureGroup);\r\n          } else if (equals && length > 1) {\r\n            this.polygonInformation.deleteTrashCanOnMulti([polygon]);\r\n            latlngs.splice(index, 1);\r\n            layer.setLatLngs(latlngs);\r\n            this.removeFeatureGroup(featureGroup);\r\n            this.addPolygonLayer(layer.toGeoJSON(), false);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n  // fine\r\n  removeAllFeatureGroups() {\r\n    this.arrayOfFeatureGroups.forEach((featureGroups) => {\r\n      this.map.removeLayer(featureGroups);\r\n    });\r\n\r\n    this.arrayOfFeatureGroups = [];\r\n    this.polygonInformation.deletePolygonInformationStorage();\r\n    this.polygonInformation.reset();\r\n    this.polygonInformation.updatePolygons();\r\n  }\r\n  // fine\r\n  getDrawMode(): DrawMode {\r\n    return this.drawModeSubject.value;\r\n  }\r\n\r\n  addViken(polygon) {\r\n    this.addPolygonLayer(polygon, true);\r\n  }\r\n\r\n  // check this\r\n  addAutoPolygon(geographicBorders: L.LatLng[][][]): void {\r\n    geographicBorders.forEach((group) => {\r\n      const featureGroup: L.FeatureGroup = new L.FeatureGroup();\r\n\r\n      const polygon2 = this.turfHelper.getMultiPolygon(\r\n        this.convertToCoords(group)\r\n      );\r\n\r\n      const polygon = this.getPolygon(polygon2);\r\n\r\n      featureGroup.addLayer(polygon);\r\n      const markerLatlngs = polygon.getLatLngs();\r\n\r\n      markerLatlngs.forEach((polygon) => {\r\n        polygon.forEach((polyElement, i) => {\r\n          if (i === 0) {\r\n            this.addMarker(polyElement, featureGroup);\r\n          } else {\r\n            this.addHoleMarker(polyElement, featureGroup);\r\n          }\r\n        });\r\n        // this.addMarker(polygon[0], featureGroup);\r\n        // TODO - Hvis polygon.length >1, så har den hull: egen addMarker funksjon\r\n      });\r\n\r\n      this.arrayOfFeatureGroups.push(featureGroup);\r\n    });\r\n    this.polygonInformation.createPolygonInformationStorage(\r\n      this.arrayOfFeatureGroups\r\n    );\r\n    this.polygonInformation.activate();\r\n    this.polygonInformation.setMoveMode();\r\n  }\r\n\r\n  // innehåll i if'ar flytta till egna metoder\r\n  private convertToCoords(latlngs: ILatLng[][]) {\r\n    const coords = [];\r\n\r\n    if (latlngs.length > 1 && latlngs.length < 3) {\r\n      const coordinates = [];\r\n\r\n      // tslint:disable-next-line: max-line-length\r\n      const within = this.turfHelper.isWithin(\r\n        L.GeoJSON.latLngsToCoords(latlngs[latlngs.length - 1]),\r\n        L.GeoJSON.latLngsToCoords(latlngs[0])\r\n      );\r\n      if (within) {\r\n        latlngs.forEach((polygon) => {\r\n          coordinates.push(L.GeoJSON.latLngsToCoords(polygon));\r\n        });\r\n      } else {\r\n        latlngs.forEach((polygon) => {\r\n          coords.push([L.GeoJSON.latLngsToCoords(polygon)]);\r\n        });\r\n      }\r\n      if (coordinates.length >= 1) {\r\n        coords.push(coordinates);\r\n      }\r\n    } else if (latlngs.length > 2) {\r\n      const coordinates = [];\r\n      for (let index = 1; index < latlngs.length - 1; index++) {\r\n        const within = this.turfHelper.isWithin(\r\n          L.GeoJSON.latLngsToCoords(latlngs[index]),\r\n          L.GeoJSON.latLngsToCoords(latlngs[0])\r\n        );\r\n        if (within) {\r\n          latlngs.forEach((polygon) => {\r\n            coordinates.push(L.GeoJSON.latLngsToCoords(polygon));\r\n          });\r\n          coords.push(coordinates);\r\n        } else {\r\n          latlngs.forEach((polygon) => {\r\n            coords.push([L.GeoJSON.latLngsToCoords(polygon)]);\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      coords.push([L.GeoJSON.latLngsToCoords(latlngs[0])]);\r\n    }\r\n\r\n    return coords;\r\n  }\r\n\r\n  // fine\r\n  private initPolyDraw() {\r\n    const container: HTMLElement = this.map.getContainer();\r\n    const drawMode = this.getDrawMode();\r\n    if (this.config.touchSupport) {\r\n      container.addEventListener(\"touchstart\", (e) => {\r\n        this.mouseDown(e);\r\n      });\r\n\r\n      container.addEventListener(\"touchend\", (e) => {\r\n        if (drawMode !== DrawMode.Off) {\r\n          this.mouseUpLeave(e);\r\n        }\r\n      });\r\n\r\n      container.addEventListener(\"touchmove\", (e) => {\r\n        if (drawMode !== DrawMode.Off) {\r\n          this.mouseMove(e);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.map.addLayer(this.tracer);\r\n    this.setDrawMode(DrawMode.Off);\r\n  }\r\n  // Test L.MouseEvent\r\n  private mouseDown(event) {\r\n    if (event.originalEvent != null) {\r\n      this.tracer.setLatLngs([event.latlng]);\r\n    } else {\r\n      const latlng = this.map.containerPointToLatLng([\r\n        event.touches[0].clientX,\r\n        event.touches[0].clientY,\r\n      ]);\r\n      this.tracer.setLatLngs([latlng]);\r\n    }\r\n    this.startDraw();\r\n  }\r\n\r\n  // TODO event type, create containerPointToLatLng-method\r\n  private mouseMove(event) {\r\n    if (event.originalEvent != null) {\r\n      this.tracer.addLatLng(event.latlng);\r\n    } else {\r\n      const latlng = this.map.containerPointToLatLng([\r\n        event.touches[0].clientX,\r\n        event.touches[0].clientY,\r\n      ]);\r\n      this.tracer.addLatLng(latlng);\r\n    }\r\n      \r\n    \r\n  }\r\n\r\n  // fine\r\n  private mouseUpLeave(event) {\r\n    this.polygonInformation.deletePolygonInformationStorage();\r\n\r\n    const geoPos: Feature<\r\n      Polygon | MultiPolygon\r\n    > = this.turfHelper.turfConcaveman(this.tracer.toGeoJSON() as any);\r\n    this.stopDraw();\r\n    switch (this.getDrawMode()) {\r\n      case DrawMode.Add:\r\n        this.addPolygon(geoPos, true);\r\n        break;\r\n      case DrawMode.Subtract:\r\n        this.subtractPolygon(geoPos);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    this.polygonInformation.createPolygonInformationStorage(\r\n      this.arrayOfFeatureGroups\r\n    );\r\n  }\r\n  // fine\r\n  private startDraw() {\r\n    this.drawStartedEvents(true);\r\n  }\r\n  // fine\r\n  private stopDraw() {\r\n    this.resetTracker();\r\n    this.drawStartedEvents(false);\r\n  }\r\n\r\n  private onZoomChange(zoomLevel: number): void {\r\n    if (zoomLevel >= this.minimumFreeDrawZoomLevel) {\r\n      this.polygonInformation.polygonDrawStates.canUsePolyDraw = true;\r\n    } else {\r\n      this.polygonInformation.polygonDrawStates.canUsePolyDraw = false;\r\n      this.polygonInformation.setMoveMode();\r\n    }\r\n    this.polygonInformation.saveCurrentState();\r\n  }\r\n  // fine\r\n  private drawStartedEvents(onoff: boolean) {\r\n    const onoroff = onoff ? \"on\" : \"off\";\r\n\r\n    this.map[onoroff](\"mousemove\", this.mouseMove, this);\r\n    this.map[onoroff](\"mouseup\", this.mouseUpLeave, this);\r\n\r\n    if (onoff) {\r\n      this.map\r\n        .getContainer()\r\n        .addEventListener(\"touchmove\", (e) => this.mouseMove(e));\r\n      this.map\r\n        .getContainer()\r\n        .addEventListener(\"touchend\", (e) => this.mouseUpLeave(e));\r\n    } else {\r\n      this.map\r\n        .getContainer()\r\n        .removeEventListener(\"touchmove\", (e) => this.mouseMove(e), true);\r\n      this.map\r\n        .getContainer()\r\n        .removeEventListener(\"touchend\", (e) => this.mouseUpLeave(e), true);\r\n    }\r\n  }\r\n  // On hold\r\n  private subtractPolygon(latlngs: Feature<Polygon | MultiPolygon>) {\r\n    this.subtract(latlngs);\r\n  }\r\n  // fine\r\n  private addPolygon(\r\n    latlngs: Feature<Polygon | MultiPolygon>,\r\n    simplify: boolean,\r\n    noMerge: boolean = false\r\n  ) {\r\n    if (\r\n      this.mergePolygons &&\r\n      !noMerge &&\r\n      this.arrayOfFeatureGroups.length > 0 &&\r\n      !this.kinks\r\n    ) {\r\n      this.merge(latlngs);\r\n    } else {\r\n      this.addPolygonLayer(latlngs, simplify);\r\n    }\r\n  }\r\n  // fine\r\n  private addPolygonLayer(\r\n    latlngs: Feature<Polygon | MultiPolygon>,\r\n    simplify: boolean\r\n  ) {\r\n    const featureGroup: L.FeatureGroup = new L.FeatureGroup();\r\n\r\n    const latLngs = simplify ? this.turfHelper.getSimplified(latlngs) : latlngs;\r\n\r\n    const polygon = this.getPolygon(latLngs);\r\n    featureGroup.addLayer(polygon);\r\n\r\n    const markerLatlngs = polygon.getLatLngs();\r\n    markerLatlngs.forEach((polygon) => {\r\n      polygon.forEach((polyElement: ILatLng[], i: number) => {\r\n        if (i === 0) {\r\n          this.addMarker(polyElement, featureGroup);\r\n        } else {\r\n          this.addHoleMarker(polyElement, featureGroup);\r\n        }\r\n      });\r\n      // this.addMarker(polygon[0], featureGroup);\r\n      // TODO - Hvis polygon.length >1, så har den hull: egen addMarker funksjon\r\n    });\r\n\r\n    this.arrayOfFeatureGroups.push(featureGroup);\r\n\r\n    this.polygonInformation.activate();\r\n    this.setDrawMode(DrawMode.Off);\r\n\r\n    featureGroup.on(\"click\", (e) => {\r\n      this.polygonClicked(e, latLngs);\r\n    });\r\n  }\r\n  // fine\r\n  private polygonClicked(e: any, poly: Feature<Polygon | MultiPolygon>) {\r\n    const newPoint = e.latlng;\r\n    if (poly.geometry.type === \"MultiPolygon\") {\r\n      const newPolygon = this.turfHelper.injectPointToPolygon(poly, [\r\n        newPoint.lng,\r\n        newPoint.lat,\r\n      ]);\r\n      this.deletePolygon(this.getLatLngsFromJson(poly));\r\n      this.addPolygonLayer(newPolygon, false);\r\n    }\r\n  }\r\n  // fine\r\n  private getPolygon(latlngs: Feature<Polygon | MultiPolygon>) {\r\n    const polygon = L.GeoJSON.geometryToLayer(latlngs) as any;\r\n\r\n    polygon.setStyle(this.config.polygonOptions);\r\n    return polygon;\r\n  }\r\n  // fine\r\n  private merge(latlngs: Feature<Polygon | MultiPolygon>) {\r\n    const polygonFeature = [];\r\n    const newArray: L.FeatureGroup[] = [];\r\n    let polyIntersection = false;\r\n    this.arrayOfFeatureGroups.forEach((featureGroup) => {\r\n      const featureCollection = featureGroup.toGeoJSON() as any;\r\n\r\n      if (featureCollection.features[0].geometry.coordinates.length > 1) {\r\n        featureCollection.features[0].geometry.coordinates.forEach(\r\n          (element) => {\r\n            const feature = this.turfHelper.getMultiPolygon([element]);\r\n            polyIntersection = this.turfHelper.polygonIntersect(\r\n              feature,\r\n              latlngs\r\n            );\r\n            if (polyIntersection) {\r\n              newArray.push(featureGroup);\r\n              polygonFeature.push(feature);\r\n            }\r\n          }\r\n        );\r\n      } else {\r\n        const feature = this.turfHelper.getTurfPolygon(\r\n          featureCollection.features[0]\r\n        );\r\n        polyIntersection = this.turfHelper.polygonIntersect(feature, latlngs);\r\n        if (polyIntersection) {\r\n          newArray.push(featureGroup);\r\n          polygonFeature.push(feature);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (newArray.length > 0) {\r\n      this.unionPolygons(newArray, latlngs, polygonFeature);\r\n    } else {\r\n      this.addPolygonLayer(latlngs, true);\r\n    }\r\n  }\r\n  // next\r\n  private subtract(latlngs: Feature<Polygon | MultiPolygon>) {\r\n    let addHole = latlngs;\r\n    this.arrayOfFeatureGroups.forEach((featureGroup) => {\r\n      const featureCollection = featureGroup.toGeoJSON() as any;\r\n      const layer = featureCollection.features[0];\r\n      const poly = this.getLatLngsFromJson(layer);\r\n      const feature = this.turfHelper.getTurfPolygon(\r\n        featureCollection.features[0]\r\n      );\r\n      const newPolygon = this.turfHelper.polygonDifference(feature, addHole);\r\n      this.deletePolygon(poly);\r\n      this.removeFeatureGroupOnMerge(featureGroup);\r\n      addHole = newPolygon;\r\n    });\r\n\r\n    const newLatlngs: Feature<Polygon | MultiPolygon> = addHole;\r\n    const coords = this.turfHelper.getCoords(newLatlngs);\r\n    coords.forEach((value) => {\r\n      this.addPolygonLayer(this.turfHelper.getMultiPolygon([value]), true);\r\n    });\r\n  }\r\n  // fine\r\n  private events(onoff: boolean) {\r\n    const onoroff = onoff ? \"on\" : \"off\";\r\n    this.map[onoroff](\"mousedown\", this.mouseDown, this);\r\n    if (onoff) {\r\n      this.map\r\n        .getContainer()\r\n        .addEventListener(\"touchstart\", (e) => this.mouseDown(e));\r\n    } else {\r\n      this.map\r\n        .getContainer()\r\n        .removeEventListener(\"touchstart\", (e) => this.mouseDown(e), true);\r\n    }\r\n  }\r\n  // fine, TODO: if special markers\r\n  private addMarker(latlngs: ILatLng[], FeatureGroup: L.FeatureGroup) {\r\n    const menuMarkerIdx = this.getMarkerIndex(\r\n      latlngs,\r\n      this.config.markers.markerMenuIcon.position\r\n    );\r\n    const deleteMarkerIdx = this.getMarkerIndex(\r\n      latlngs,\r\n      this.config.markers.markerDeleteIcon.position\r\n    );\r\n\r\n    latlngs.forEach((latlng, i) => {\r\n      const iconClasses = this.config.markers.markerIcon.styleClasses;\r\n      /*   if (i === menuMarkerIdx && this.config.markers.menu) {\r\n        iconClasses = this.config.markers.markerMenuIcon.styleClasses;\r\n      }\r\n      if (i === deleteMarkerIdx && this.config.markers.delete) {\r\n        iconClasses = this.config.markers.markerDeleteIcon.styleClasses;\r\n      } */\r\n      const marker = new L.Marker(latlng, {\r\n        icon: this.createDivIcon(iconClasses),\r\n        draggable: true,\r\n        title: i.toString(),\r\n      });\r\n      FeatureGroup.addLayer(marker).addTo(this.map);\r\n\r\n      marker.on(\"drag\", (e) => {\r\n        this.markerDrag(FeatureGroup);\r\n      });\r\n      marker.on(\"dragend\", (e) => {\r\n        this.markerDragEnd(FeatureGroup);\r\n      });\r\n      if (i === menuMarkerIdx && this.config.markers.menu) {\r\n        // marker.bindPopup(\r\n        //   this.getHtmlContent(e => {\r\n\r\n        //   })\r\n        // );\r\n        marker.on(\"click\", (e) => {\r\n          this.convertToBoundsPolygon(latlngs, true);\r\n          // this.convertToSimplifiedPolygon(latlngs);\r\n        });\r\n      }\r\n      if (i === deleteMarkerIdx && this.config.markers.delete) {\r\n        marker.on(\"click\", (e) => {\r\n          this.deletePolygon([latlngs]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private addHoleMarker(latlngs: ILatLng[], FeatureGroup: L.FeatureGroup) {\r\n    latlngs.forEach((latlng, i) => {\r\n      const iconClasses = this.config.markers.markerIcon.styleClasses;\r\n      /*  if (i === 0 && this.config.markers.menu) {\r\n        iconClasses = this.config.markers.markerMenuIcon.styleClasses;\r\n      }\r\n\r\n      //TODO- legg til fill icon\r\n      if (i === latlngs.length - 1 && this.config.markers.delete) {\r\n        iconClasses = this.config.markers.markerDeleteIcon.styleClasses;\r\n      } */\r\n      const marker = new L.Marker(latlng, {\r\n        icon: this.createDivIcon(iconClasses),\r\n        draggable: true,\r\n        title: i.toString(),\r\n      });\r\n      FeatureGroup.addLayer(marker).addTo(this.map);\r\n\r\n      marker.on(\"drag\", (e) => {\r\n        this.markerDrag(FeatureGroup);\r\n      });\r\n      marker.on(\"dragend\", (e) => {\r\n        this.markerDragEnd(FeatureGroup);\r\n      });\r\n      /*   if (i === 0 && this.config.markers.menu) {\r\n        marker.bindPopup(this.getHtmlContent((e) => {\r\n        }));\r\n        // marker.on(\"click\", e => {\r\n        //   this.toggleMarkerMenu();\r\n        // })\r\n      }\r\n      if (i === latlngs.length - 1 && this.config.markers.delete) {\r\n        marker.on(\"click\", e => {\r\n          this.deletePolygon([latlngs]);\r\n        });\r\n      } */\r\n    });\r\n  }\r\n  private createDivIcon(classNames: string[]): L.DivIcon {\r\n    const classes = classNames.join(\" \");\r\n    const icon = L.divIcon({ className: classes });\r\n    return icon;\r\n  }\r\n  // TODO: Cleanup\r\n  private markerDrag(FeatureGroup: L.FeatureGroup) {\r\n    const newPos = [];\r\n    let testarray = [];\r\n    let hole = [];\r\n    const layerLength = FeatureGroup.getLayers() as any;\r\n    const posarrays = layerLength[0].getLatLngs();\r\n\r\n    let length = 0;\r\n    if (posarrays.length > 1) {\r\n      for (let index = 0; index < posarrays.length; index++) {\r\n        testarray = [];\r\n        hole = [];\r\n\r\n        if (index === 0) {\r\n          if (posarrays[0].length > 1) {\r\n            for (let i = 0; index < posarrays[0].length; i++) {\r\n              for (let j = 0; j < posarrays[0][i].length; j++) {\r\n                testarray.push(layerLength[j + 1].getLatLng());\r\n              }\r\n              hole.push(testarray);\r\n            }\r\n          } else {\r\n            for (let j = 0; j < posarrays[0][0].length; j++) {\r\n              testarray.push(layerLength[j + 1].getLatLng());\r\n            }\r\n            hole.push(testarray);\r\n          }\r\n\r\n          newPos.push(hole);\r\n        } else {\r\n          length += posarrays[index - 1][0].length;\r\n\r\n          for (let j = length; j < posarrays[index][0].length + length; j++) {\r\n            testarray.push((layerLength[j + 1] as any).getLatLng());\r\n          }\r\n          hole.push(testarray);\r\n          newPos.push(hole);\r\n        }\r\n      }\r\n    } else {\r\n      // testarray = []\r\n      hole = [];\r\n      let length2 = 0;\r\n      for (let index = 0; index < posarrays[0].length; index++) {\r\n        testarray = [];\r\n\r\n        if (index === 0) {\r\n          if (posarrays[0][index].length > 1) {\r\n            for (let j = 0; j < posarrays[0][index].length; j++) {\r\n              testarray.push(layerLength[j + 1].getLatLng());\r\n            }\r\n          } else {\r\n            for (let j = 0; j < posarrays[0][0].length; j++) {\r\n              testarray.push(layerLength[j + 1].getLatLng());\r\n            }\r\n          }\r\n        } else {\r\n          length2 += posarrays[0][index - 1].length;\r\n\r\n          for (let j = length2; j < posarrays[0][index].length + length2; j++) {\r\n            testarray.push(layerLength[j + 1].getLatLng());\r\n          }\r\n        }\r\n        hole.push(testarray);\r\n      }\r\n      newPos.push(hole);\r\n    }\r\n\r\n    layerLength[0].setLatLngs(newPos);\r\n  }\r\n  // check this\r\n  private markerDragEnd(FeatureGroup: L.FeatureGroup) {\r\n    this.polygonInformation.deletePolygonInformationStorage();\r\n    const featureCollection = FeatureGroup.toGeoJSON() as any;\r\n\r\n    if (featureCollection.features[0].geometry.coordinates.length > 1) {\r\n      featureCollection.features[0].geometry.coordinates.forEach((element) => {\r\n        const feature = this.turfHelper.getMultiPolygon([element]);\r\n\r\n        if (this.turfHelper.hasKinks(feature)) {\r\n          this.kinks = true;\r\n          const unkink = this.turfHelper.getKinks(feature);\r\n          // this.deletePolygon(this.getLatLngsFromJson(feature));\r\n          this.removeFeatureGroup(FeatureGroup);\r\n\r\n          unkink.forEach((polygon) => {\r\n            this.addPolygon(\r\n              this.turfHelper.getTurfPolygon(polygon),\r\n              false,\r\n              true\r\n            );\r\n          });\r\n        } else {\r\n          this.kinks = false;\r\n          this.addPolygon(feature, false);\r\n        }\r\n      });\r\n    } else {\r\n      const feature = this.turfHelper.getMultiPolygon(\r\n        featureCollection.features[0].geometry.coordinates\r\n      );\r\n\r\n      if (this.turfHelper.hasKinks(feature)) {\r\n        this.kinks = true;\r\n        const unkink = this.turfHelper.getKinks(feature);\r\n        // this.deletePolygon(this.getLatLngsFromJson(feature));\r\n        this.removeFeatureGroup(FeatureGroup);\r\n\r\n        const testCoord = [];\r\n        unkink.forEach((polygon) => {\r\n          this.addPolygon(this.turfHelper.getTurfPolygon(polygon), false, true);\r\n        });\r\n        // this.addPolygon(this.turfHelper.getMultiPolygon(testCoord), false, true);\r\n      } else {\r\n        // this.deletePolygon(this.getLatLngsFromJson(feature));\r\n        this.kinks = false;\r\n        this.addPolygon(feature, false);\r\n      }\r\n    }\r\n    this.polygonInformation.createPolygonInformationStorage(\r\n      this.arrayOfFeatureGroups\r\n    );\r\n  }\r\n  // fine, check the returned type\r\n  private getLatLngsFromJson(\r\n    feature: Feature<Polygon | MultiPolygon>\r\n  ): ILatLng[][] {\r\n    let coord;\r\n    if (feature) {\r\n      if (\r\n        feature.geometry.coordinates.length > 1 &&\r\n        feature.geometry.type === \"MultiPolygon\"\r\n      ) {\r\n        coord = L.GeoJSON.coordsToLatLngs(feature.geometry.coordinates[0][0]);\r\n      } else if (\r\n        feature.geometry.coordinates[0].length > 1 &&\r\n        feature.geometry.type === \"Polygon\"\r\n      ) {\r\n        coord = L.GeoJSON.coordsToLatLngs(feature.geometry.coordinates[0]);\r\n      } else {\r\n        coord = L.GeoJSON.coordsToLatLngs(feature.geometry.coordinates[0][0]);\r\n      }\r\n    }\r\n\r\n    return coord;\r\n  }\r\n\r\n  // fine\r\n  private unionPolygons(\r\n    layers,\r\n    latlngs: Feature<Polygon | MultiPolygon>,\r\n    polygonFeature\r\n  ) {\r\n    let addNew = latlngs;\r\n    layers.forEach((featureGroup, i) => {\r\n      const featureCollection = featureGroup.toGeoJSON();\r\n      const layer = featureCollection.features[0];\r\n      const poly = this.getLatLngsFromJson(layer);\r\n      const union = this.turfHelper.union(addNew, polygonFeature[i]); // Check for multipolygons\r\n      // Needs a cleanup for the new version\r\n      this.deletePolygonOnMerge(poly);\r\n      this.removeFeatureGroup(featureGroup);\r\n\r\n      addNew = union;\r\n    });\r\n\r\n    const newLatlngs: Feature<Polygon | MultiPolygon> = addNew; // Trenger kanskje this.turfHelper.getTurfPolygon( addNew);\r\n    this.addPolygonLayer(newLatlngs, true);\r\n  }\r\n  // fine\r\n  private removeFeatureGroup(featureGroup: L.FeatureGroup) {\r\n    featureGroup.clearLayers();\r\n    this.arrayOfFeatureGroups = this.arrayOfFeatureGroups.filter(\r\n      (featureGroups) => featureGroups !== featureGroup\r\n    );\r\n    // this.updatePolygons();\r\n    this.map.removeLayer(featureGroup);\r\n  }\r\n  // fine until refactoring\r\n  private removeFeatureGroupOnMerge(featureGroup: L.FeatureGroup) {\r\n    const newArray = [];\r\n    if (featureGroup.getLayers()[0]) {\r\n      const polygon = (featureGroup.getLayers()[0] as any).getLatLngs()[0];\r\n      this.polygonInformation.polygonInformationStorage.forEach((v) => {\r\n        if (\r\n          v.polygon.toString() !== polygon[0].toString() &&\r\n          v.polygon[0].toString() === polygon[0][0].toString()\r\n        ) {\r\n          v.polygon = polygon;\r\n          newArray.push(v);\r\n        }\r\n\r\n        if (\r\n          v.polygon.toString() !== polygon[0].toString() &&\r\n          v.polygon[0].toString() !== polygon[0][0].toString()\r\n        ) {\r\n          newArray.push(v);\r\n        }\r\n      });\r\n      featureGroup.clearLayers();\r\n      this.arrayOfFeatureGroups = this.arrayOfFeatureGroups.filter(\r\n        (featureGroups) => featureGroups !== featureGroup\r\n      );\r\n\r\n      this.map.removeLayer(featureGroup);\r\n    }\r\n  }\r\n  // fine until refactoring\r\n  private deletePolygonOnMerge(polygon) {\r\n    let polygon2 = [];\r\n    if (this.arrayOfFeatureGroups.length > 0) {\r\n      this.arrayOfFeatureGroups.forEach((featureGroup) => {\r\n        const layer = featureGroup.getLayers()[0] as any;\r\n        const latlngs = layer.getLatLngs()[0];\r\n        polygon2 = [...latlngs[0]];\r\n        if (latlngs[0][0] !== latlngs[0][latlngs[0].length - 1]) {\r\n          polygon2.push(latlngs[0][0]);\r\n        }\r\n        const equals = this.polygonArrayEqualsMerge(polygon2, polygon);\r\n\r\n        if (equals) {\r\n          this.removeFeatureGroupOnMerge(featureGroup);\r\n          this.deletePolygon(polygon);\r\n          this.polygonInformation.deleteTrashcan(polygon);\r\n          // this.updatePolygons();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // TODO - legge et annet sted\r\n  private polygonArrayEqualsMerge(poly1: any[], poly2: any[]): boolean {\r\n    return poly1.toString() === poly2.toString();\r\n  }\r\n  // TODO - legge et annet sted\r\n  private polygonArrayEquals(poly1: any[], poly2: any[]): boolean {\r\n    if (poly1[0][0]) {\r\n      if (!poly1[0][0].equals(poly2[0][0])) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (!poly1[0].equals(poly2[0])) {\r\n        return false;\r\n      }\r\n    }\r\n    if (poly1.length !== poly2.length) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  // fine\r\n  private setLeafletMapEvents(\r\n    enableDragging: boolean,\r\n    enableDoubleClickZoom: boolean,\r\n    enableScrollWheelZoom: boolean\r\n  ) {\r\n    enableDragging ? this.map.dragging.enable() : this.map.dragging.disable();\r\n    enableDoubleClickZoom\r\n      ? this.map.doubleClickZoom.enable()\r\n      : this.map.doubleClickZoom.disable();\r\n    enableScrollWheelZoom\r\n      ? this.map.scrollWheelZoom.enable()\r\n      : this.map.scrollWheelZoom.disable();\r\n  }\r\n  // fine\r\n  setDrawMode(mode: DrawMode) {\r\n    this.drawModeSubject.next(mode);\r\n    if (!!this.map) {\r\n      let isActiveDrawMode = true;\r\n      switch (mode) {\r\n        case DrawMode.Off:\r\n          L.DomUtil.removeClass(\r\n            this.map.getContainer(),\r\n            \"crosshair-cursor-enabled\"\r\n          );\r\n          this.events(false);\r\n          this.stopDraw();\r\n          this.tracer.setStyle({\r\n            color: \"\",\r\n          });\r\n          this.setLeafletMapEvents(true, true, true);\r\n          isActiveDrawMode = false;\r\n          break;\r\n        case DrawMode.Add:\r\n          L.DomUtil.addClass(\r\n            this.map.getContainer(),\r\n            \"crosshair-cursor-enabled\"\r\n          );\r\n          this.events(true);\r\n          this.tracer.setStyle({\r\n            color: defaultConfig.polyLineOptions.color,\r\n          });\r\n          this.setLeafletMapEvents(false, false, false);\r\n          break;\r\n        case DrawMode.Subtract:\r\n          L.DomUtil.addClass(\r\n            this.map.getContainer(),\r\n            \"crosshair-cursor-enabled\"\r\n          );\r\n          this.events(true);\r\n          this.tracer.setStyle({\r\n            color: \"#D9460F\",\r\n          });\r\n          this.setLeafletMapEvents(false, false, false);\r\n          break;\r\n      }\r\n\r\n      if (isActiveDrawMode) {\r\n        this.polygonInformation.setFreeDrawMode();\r\n      } else {\r\n        this.polygonInformation.setMoveMode();\r\n      }\r\n    }\r\n  }\r\n\r\n  modeChange(mode: DrawMode): void {\r\n    this.setDrawMode(mode);\r\n    this.polygonInformation.saveCurrentState();\r\n  }\r\n  // remove, use modeChange\r\n  drawModeClick(): void {\r\n    if (this.polygonInformation.polygonDrawStates.isFreeDrawMode) {\r\n      this.polygonInformation.setMoveMode();\r\n      this.setDrawMode(DrawMode.Off);\r\n    } else {\r\n      this.polygonInformation.setFreeDrawMode();\r\n      this.setDrawMode(DrawMode.Add);\r\n    }\r\n    this.polygonInformation.saveCurrentState();\r\n  }\r\n  // remove, use modeChange\r\n  freedrawMenuClick(): void {\r\n    this.setDrawMode(DrawMode.Add);\r\n    this.polygonInformation.activate();\r\n    this.polygonInformation.saveCurrentState();\r\n  }\r\n\r\n  // remove, use modeChange\r\n  subtractClick(): void {\r\n    this.setDrawMode(DrawMode.Subtract);\r\n    this.polygonInformation.saveCurrentState();\r\n  }\r\n  // fine\r\n  private resetTracker() {\r\n    this.tracer.setLatLngs([[0, 0]]);\r\n  }\r\n\r\n  toggleMarkerMenu(): void {\r\n    alert(\"open menu\");\r\n  }\r\n  private getHtmlContent(callBack: Function): HTMLElement {\r\n    const comp = this.popupGenerator.generateAlterPopup();\r\n    comp.instance.bboxClicked.subscribe((e) => {\r\n      callBack(e);\r\n    });\r\n    comp.instance.simplyfiClicked.subscribe((e) => {\r\n      callBack(e);\r\n    });\r\n    return comp.location.nativeElement;\r\n  }\r\n  private convertToBoundsPolygon(\r\n    latlngs: ILatLng[],\r\n    addMidpointMarkers: boolean = false\r\n  ) {\r\n    this.deletePolygon([latlngs]);\r\n    const polygon = this.turfHelper.getMultiPolygon(\r\n      this.convertToCoords([latlngs])\r\n    );\r\n    const newPolygon = this.turfHelper.convertToBoundingBoxPolygon(\r\n      polygon,\r\n      addMidpointMarkers\r\n    );\r\n\r\n    this.addPolygonLayer(this.turfHelper.getTurfPolygon(newPolygon), false);\r\n  }\r\n  private convertToSimplifiedPolygon(latlngs: ILatLng[]) {\r\n    this.deletePolygon([latlngs]);\r\n    const newPolygon = this.turfHelper.getMultiPolygon(\r\n      this.convertToCoords([latlngs])\r\n    );\r\n    this.addPolygonLayer(this.turfHelper.getTurfPolygon(newPolygon), true);\r\n  }\r\n  private getMarkerIndex(latlngs: ILatLng[], position: MarkerPosition): number {\r\n    const bounds: L.LatLngBounds = PolyDrawUtil.getBounds(\r\n      latlngs,\r\n      Math.sqrt(2) / 2\r\n    );\r\n    const compass = new Compass(\r\n      bounds.getSouth(),\r\n      bounds.getWest(),\r\n      bounds.getNorth(),\r\n      bounds.getEast()\r\n    );\r\n    const compassDirection = compass.getDirection(position);\r\n    const latLngPoint: ILatLng = {\r\n      lat: compassDirection.lat,\r\n      lng: compassDirection.lng,\r\n    };\r\n    const targetPoint = this.turfHelper.getCoord(latLngPoint);\r\n    const fc = this.turfHelper.getFeaturePointCollection(latlngs);\r\n    const nearestPointIdx = this.turfHelper.getNearestPointIndex(\r\n      targetPoint,\r\n      fc as any\r\n    );\r\n\r\n    return nearestPointIdx;\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { AlterPolygonComponent } from \"./popups/alter-polygon/alter-polygon.component\";\r\nimport { PolyDrawService } from './polydraw.service';\r\nimport { PolygonInformationService } from './polygon-information.service';\r\nimport { PolyStateService } from './map-state.service';\r\n\r\n@NgModule({\r\n  declarations: [ AlterPolygonComponent],\r\n  imports: [],\r\n  providers: [PolyDrawService, PolygonInformationService, PolyStateService],\r\n  exports: [AlterPolygonComponent ],\r\n  entryComponents: [AlterPolygonComponent]\r\n})\r\nexport class MyLibModule {}\r\n","\r\n/*\r\n * Public API Surface of my-lib\r\n */\r\n\r\nexport {PolyDrawService} from './lib/polydraw.service';\r\nexport * from './lib/popups/alter-polygon/alter-polygon.component';\r\nexport {PolyStateService} from './lib/map-state.service';\r\nexport * from './lib/component-generater.service';\r\nexport {PolygonInformationService} from './lib/polygon-information.service';\r\nexport * from './lib/my-lib.module';\r\nexport * from './lib/enums';\r\nexport * from './lib/polygon-helpers';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {LeafletHelperService as ɵb} from './lib/leaflet-helper.service';\nexport {TurfHelperService as ɵa} from './lib/turf-helper.service';"],"names":["BehaviorSubject","map","Injectable","DrawMode","MarkerPosition","L","turf","concaveman","Subject","EventEmitter","Component","Output","ComponentFactoryResolver","Injector","filter","debounceTime","takeUntil","NgModule"],"mappings":"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"}