!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("leaflet"),require("rxjs"),require("rxjs/operators"),require("@turf/turf"),require("concaveman")):"function"==typeof define&&define.amd?define("my-lib",["exports","@angular/core","leaflet","rxjs","rxjs/operators","@turf/turf","concaveman"],o):o((t=t||self)["my-lib"]={},t.ng.core,t.leaflet,t.rxjs,t.rxjs.operators,t.turf,t.concaveman)}(this,(function(t,o,e,n,r,i,s){"use strict";s=s&&s.hasOwnProperty("default")?s.default:s;var a=function(){return(a=Object.assign||function(t){for(var o,e=1,n=arguments.length;e<n;e++)for(var r in o=arguments[e])Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r]);return t}).apply(this,arguments)};function l(t,o){var e="function"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var n,r,i=e.call(t),s=[];try{for(;(void 0===o||o-- >0)&&!(n=i.next()).done;)s.push(n.value)}catch(t){r={error:t}}finally{try{n&&!n.done&&(e=i.return)&&e.call(i)}finally{if(r)throw r.error}}return s}function u(){for(var t=[],o=0;o<arguments.length;o++)t=t.concat(l(arguments[o]));return t}var c,g,p=function(){function t(){this.mapSubject=new n.BehaviorSubject(null),this.map$=this.mapSubject.asObservable(),this.polygonSubject=new n.BehaviorSubject(null),this.polygons$=this.polygonSubject.asObservable(),this.mapStateSubject=new n.BehaviorSubject(new h),this.mapState$=this.mapStateSubject.asObservable(),this.mapZoomLevel$=this.mapState$.pipe(r.map((function(t){return t.mapBoundState.zoom})))}return t.prototype.updateMapStates=function(t){var o=this.mapStateSubject.value;o=a(a({},o),t),this.mapStateSubject.next(o)},t.prototype.updateMapState=function(t){this.mapSubject.next(t)},t.prototype.updatePolygons=function(t){console.log("map-state",t),this.polygonSubject.next(t)},t.prototype.updateMapBounds=function(t){this.updateMapStates({mapBoundState:t})},t.ɵfac=function(o){return new(o||t)},t.ɵprov=o["ɵɵdefineInjectable"]({token:t,factory:t.ɵfac,providedIn:"root"}),t}(),h=function(t){void 0===t&&(t=new f(null,11)),this.mapBoundState=t},f=function(t,o){this.bounds=t,this.zoom=o};!function(t){t[t.Off=0]="Off",t[t.Add=1]="Add",t[t.Edit=2]="Edit",t[t.Subtract=4]="Subtract",t[t.AppendMarker=8]="AppendMarker",t[t.LoadPredefined=16]="LoadPredefined"}(c||(c={})),function(t){t[t.North=1]="North",t[t.East=2]="East",t[t.South=3]="South",t[t.West=4]="West",t[t.NorthEast=5]="NorthEast",t[t.NorthWest=6]="NorthWest",t[t.SouthEast=7]="SouthEast",t[t.SouthWest=8]="SouthWest"}(g||(g={}));var y=function(){function t(){}return t.getBounds=function(t,o){void 0===o&&(o=0);var n=[];t.forEach((function(t){isNaN(t.lat)||isNaN(t.lng),n.push(t)}));var r=new e.Polyline(n).getBounds();return 0!==o?r.pad(o):r},t}(),d=function(){function t(t,o,e,n){void 0===t&&(t=0),void 0===o&&(o=0),void 0===e&&(e=0),void 0===n&&(n=0),this.direction={East:{lat:0,lng:0},North:{lat:0,lng:0},NorthEast:{lat:0,lng:0},NorthWest:{lat:0,lng:0},South:{lat:0,lng:0},SouthEast:{lat:0,lng:0},SouthWest:{lat:0,lng:0},West:{lat:0,lng:0}},this.direction.North={lat:e,lng:(o+n)/2},this.direction.NorthEast={lat:e,lng:n},this.direction.East={lat:(t+e)/2,lng:n},this.direction.SouthEast={lat:t,lng:n},this.direction.South={lat:t,lng:(o+n)/2},this.direction.SouthWest={lat:t,lng:o},this.direction.West={lat:(t+e)/2,lng:o},this.direction.NorthWest={lat:e,lng:o}}return t.prototype.getDirection=function(t){switch(t){case g.North:return this.direction.North;case g.NorthEast:return this.direction.NorthEast;case g.East:return this.direction.East;case g.SouthEast:return this.direction.SouthEast;case g.South:return this.direction.South;case g.SouthWest:return this.direction.SouthWest;case g.West:return this.direction.West;case g.NorthWest:return this.direction.NorthWest;default:return this.direction.North}},t.prototype.getPositions=function(t,o,e){void 0===t&&(t=g.SouthWest),void 0===o&&(o=!1),void 0===e&&(e=!0);var n=[];return n.push([this.direction.SouthWest.lng,this.direction.SouthWest.lat]),n.push([this.direction.SouthWest.lng,this.direction.SouthWest.lat]),n.push([this.direction.South.lng,this.direction.South.lat]),n.push([this.direction.SouthEast.lng,this.direction.SouthEast.lat]),n.push([this.direction.East.lng,this.direction.East.lat]),n.push([this.direction.NorthEast.lng,this.direction.NorthEast.lat]),n.push([this.direction.North.lng,this.direction.North.lat]),n.push([this.direction.NorthWest.lng,this.direction.NorthWest.lat]),n.push([this.direction.West.lng,this.direction.West.lat]),e&&n.push([this.direction.SouthWest.lng,this.direction.SouthWest.lat]),n},t}(),m=function(){function t(){this.simplifyTolerance={tolerance:1e-4,highQuality:!1}}return t.prototype.union=function(t,o){console.log("poly1: ",t),console.log("poly2: ",o);var e=i.union(t,o);return this.getTurfPolygon(e)},t.prototype.turfConcaveman=function(t){var o=i.explode(t).features.map((function(t){return t.geometry.coordinates}));return i.multiPolygon([[s(o)]])},t.prototype.getSimplified=function(t){var o=this.simplifyTolerance;return i.simplify(t,o)},t.prototype.getTurfPolygon=function(t){return console.log("Get TurfPolygon:",t),"Polygon"===t.geometry.type?i.multiPolygon([t.geometry.coordinates]):i.multiPolygon(t.geometry.coordinates)},t.prototype.getMultiPolygon=function(t){return i.multiPolygon(t)},t.prototype.getKinks=function(t){var o=i.unkinkPolygon(t),e=[];return i.featureEach(o,(function(t){e.push(t)})),e},t.prototype.getCoords=function(t){return i.getCoords(t)},t.prototype.hasKinks=function(t){return i.kinks(t).features.length>0},t.prototype.polygonIntersect=function(t,o){var e=[],n=[];console.log("polygonIntersect",t,o),i.getCoords(o).forEach((function(t){var o={type:"Polygon",coordinates:[t[0]]};e.push(o)})),i.getCoords(t).forEach((function(t){var o={type:"Polygon",coordinates:[t[0]]};n.push(o)}));var r=!1;t:for(var s=0;s<e.length;s++)if(this.getKinks(e[s]).length<2)for(var a=0;a<n.length;a++)if(this.getKinks(n[a]).length<2&&(r=!!i.intersect(e[s],n[a])))break t;return r},t.prototype.getIntersection=function(t,o){return i.intersect(t,o)},t.prototype.getDistance=function(t,o){return i.distance(t,o)},t.prototype.isWithin=function(t,o){return console.log(t),console.log("Ytre: ",o),i.booleanWithin(i.polygon([t]),i.polygon([o]))},t.prototype.equalPolygons=function(t,o){console.log(t),console.log(o),console.log(i.booleanEqual(t,o))},t.prototype.convertToBoundingBoxPolygon=function(t,o){void 0===o&&(o=!1);var e=i.bbox(t.geometry),n=i.bboxPolygon(e),r=new d(e[1],e[0],e[3],e[2]).getPositions();return n.geometry.coordinates=[],n.geometry.coordinates=[r],n},t.prototype.polygonToMultiPolygon=function(t){return i.multiPolygon([t.geometry.coordinates])},t.prototype.injectPointToPolygon=function(t,o){var e,n=i.getCoords(t);if(console.log("polygon: ",t),n.length<2){var r=i.explode(t);console.log(i.nearestPoint(o,r));var s=i.nearestPoint(o,r).properties.featureIndex,a=i.coordReduce(r,(function(t,e,n){return u(t,s===n?[e,o]:[e])}),[]);console.log("test",a),e=i.multiPolygon([[a]])}else{var l=[],c=[];n.forEach((function(t){var e=i.polygon(t);if(i.booleanPointInPolygon(o,e)){var n=i.explode(e),r=i.nearestPoint(o,n).properties.featureIndex;c=i.coordReduce(n,(function(t,e,n){return u(t,r===n?[e,o]:[e])}),[]),console.log("coordinates",c)}else l.push(t)})),l.push([c]),e=i.multiPolygon(l)}return e},t.prototype.polygonDifference=function(t,o){var e=i.difference(t,o);return console.log(e),this.getTurfPolygon(e)},t.prototype.getBoundingBoxCompassPosition=function(t,o,e,n){this.getMultiPolygon(t);var r=this.getBoundingBoxCompass(t),s=i.explode(t),a=this.getCoord(r.direction.North);i.nearestPoint(a,s);return null},t.prototype.getBoundingBoxCompass=function(t){var o=this.getMultiPolygon(t),e=(i.centerOfMass(o),i.bbox(o)),n=e[0],r=e[1],s=e[2],a=e[3];return new d(n,r,s,a)},t.prototype.getNearestPointIndex=function(t,o){return i.nearestPoint(t,o).properties.featureIndex},t.prototype.getCoord=function(t){return i.getCoord([t.lng,t.lat])},t.prototype.getFeaturePointCollection=function(t){var o=[];return t.forEach((function(t){var e=i.point([t.lng,t.lat],{});o.push(e)})),i.featureCollection(o)},t.ɵfac=function(o){return new(o||t)},t.ɵprov=o["ɵɵdefineInjectable"]({token:t,factory:t.ɵfac,providedIn:"root"}),t}(),v=function(){function t(){}return t.getCenter=function(t){var o=Math.PI,e=0,n=0,r=0;t.forEach((function(t){var i=t.lat,s=t.lng;i=i*o/180,s=s*o/180,e+=Math.cos(i)*Math.cos(s),n+=Math.cos(i)*Math.sin(s),r+=Math.sin(i)}));var i=Math.atan2(n,e),s=Math.sqrt(e*e+n*n),a=Math.atan2(r,s);return{lat:a=180*a/o,lng:i=180*i/o}},t.getSouthWest=function(t){return this.getBounds(t).getNorthWest()},t.getNorthEast=function(t){return this.getBounds(t).getNorthEast()},t.getNorthWest=function(t){return this.getBounds(t).getNorthWest()},t.getSouthEast=function(t){return this.getBounds(t).getSouthEast()},t.getNorth=function(t){return this.getBounds(t).getNorth()},t.getSouth=function(t){return this.getBounds(t).getSouth()},t.getWest=function(t){return this.getBounds(t).getWest()},t.getEast=function(t){return this.getBounds(t).getEast()},t.getSqmArea=function(t){var o=new e.Polygon(t).toGeoJSON();return i.area(o)},t.getPerimeter=function(t){var o=new e.Polygon(t).toGeoJSON();return i.length(o,{units:"meters"})},t.getPolygonChecksum=function(t){var o=t.filter((function(t,o,e){return e.indexOf(e.find((function(o){return o.lat===t.lat&&o.lng===t.lng})))===o}));return o.reduce((function(t,o){return+t+ +o.lat}),0)*o.reduce((function(t,o){return+t+ +o.lng}),0)},t.getMidPoint=function(t,o){var e=i.point([t.lng,t.lat]),n=i.point([o.lng,o.lat]),r=i.midpoint(e,n);return{lat:r.geometry.coordinates[1],lng:r.geometry.coordinates[0]}},t.getBounds=function(t){var o=[];return t.forEach((function(t){isNaN(t.lat)||isNaN(t.lng),o.push(t)})),new e.Polyline(o).getBounds()},t}(),S=function(){function t(t){var o=this;this.polygon=[],this.trashcanPoint=[],this.sqmArea=[],this.perimeter=[],console.log("PolygonInfo: ",t),t.forEach((function(t,e){o.trashcanPoint[e]=o.getTrashcanPoint(t[0]),o.sqmArea[e]=o.calculatePolygonArea(t[0]),o.perimeter[e]=o.calculatePolygonPerimeter(t[0]),console.log(t[0]),o.polygon[e]=t}))}return t.prototype.setSqmArea=function(t){this.sqmArea[0]=t},t.prototype.getTrashcanPoint=function(t){var o,e,n=Math.max.apply(Math,t.map((function(t){return t.lat}))),r=t.findIndex((function(t){return t.lat===n}));r>0?(o=t[r-1],e=r<t.length-1?t[r+1]:t[0]):(o=t[t.length-1],e=t[r+1]);var i=o.lng<e.lng?o:e;return v.getMidPoint(t[r],i)},t.prototype.calculatePolygonArea=function(t){return v.getSqmArea(t)},t.prototype.calculatePolygonPerimeter=function(t){return v.getPerimeter(t)},t}(),P=function(){function t(){this.canUsePolyDraw=!1,this.reset()}return t.prototype.activate=function(){this.reset(),this.isActivated=!0},t.prototype.reset=function(){this.isActivated=!1,this.hasPolygons=!1,this.canRevert=!1,this.isAuto=!1,this.resetDrawModes()},t.prototype.resetDrawModes=function(){this.isFreeDrawMode=!1,function(t,o){for(var e=document.querySelectorAll(t),n=0;n<e.length;n++)e.item(n).classList.remove(o)}("img.leaflet-tile","disable-events"),this.isMoveMode=!1},t.prototype.setFreeDrawMode=function(t){void 0===t&&(t=!1),t&&(this.isActivated=!0),this.isActivated&&(this.resetDrawModes(),this.isFreeDrawMode=!0,function(t,o){for(var e=document.querySelectorAll(t),n=0;n<e.length;n++)e.item(n).classList.add(o)}("img.leaflet-tile","disable-events"),t&&(this.isAuto=!0))},t.prototype.setMoveMode=function(){this.isActivated&&(this.resetDrawModes(),this.isMoveMode=!0)},t.prototype.forceCanUseFreeDraw=function(){this.canUsePolyDraw=!0},t}(),b=function(){function t(t){this.mapStateService=t,this.polygonInformationSubject=new n.Subject,this.polygonInformation$=this.polygonInformationSubject.asObservable(),this.polygonDrawStatesSubject=new n.Subject,this.polygonDrawStates$=this.polygonDrawStatesSubject.asObservable(),this.polygonDrawStates=null,this.polygonInformationStorage=[],this.polygonDrawStates=new P}return t.prototype.updatePolygons=function(){console.log("updatePolygons: ",this.polygonInformationStorage);var t=null;this.polygonInformationStorage.length>0?(t=[],this.polygonInformationStorage.forEach((function(o){var e=[];o.polygon.forEach((function(t){var o=[];t.forEach((function(t){o=u(t),t[0].toString()!==t[t.length-1].toString()&&o.push(t[0]),e.push(o)}))})),t.push(e)})),this.polygonDrawStates.hasPolygons=!0):(this.polygonDrawStates.reset(),this.polygonDrawStates.hasPolygons=!1),this.mapStateService.updatePolygons(t),this.saveCurrentState()},t.prototype.saveCurrentState=function(){this.polygonInformationSubject.next(this.polygonInformationStorage),this.polygonDrawStatesSubject.next(this.polygonDrawStates),console.log("saveCurrentState: ",this.polygonInformationStorage)},t.prototype.deleteTrashcan=function(t){var o=this.polygonInformationStorage.findIndex((function(o){return o.polygon[0]===t}));this.polygonInformationStorage.splice(o,1),this.updatePolygons()},t.prototype.deleteTrashCanOnMulti=function(t){var o=0;console.log("DeleteTrashCan: ",t),console.log("deleteTrashCanOnMulti: ",this.polygonInformationStorage),this.polygonInformationStorage.forEach((function(e,n){console.log(e.polygon);var r=e.polygon.findIndex((function(o){return o.toString()===t.toString()}));r>=0&&(o=n,e.trashcanPoint.splice(r,1),e.sqmArea.splice(r,1),e.perimeter.splice(r,1),e.polygon.splice(r,1),console.log(e.polygon)),console.log("ID: ",r)})),this.updatePolygons(),console.log("Index: ",o),this.polygonInformationStorage.length>1&&this.polygonInformationStorage.splice(o,1),console.log("deleteTrashCanOnMulti: ",this.polygonInformationStorage)},t.prototype.deletePolygonInformationStorage=function(){this.polygonInformationStorage=[]},t.prototype.createPolygonInformationStorage=function(t){var o=this;console.log("Create Info: ",t),t.length>0&&(t.forEach((function(t){console.log(t.getLayers()[0].getLatLngs());var e=new S(t.getLayers()[0].getLatLngs());o.polygonInformationStorage.push(e)})),this.updatePolygons())},t.prototype.activate=function(){this.polygonDrawStates.activate()},t.prototype.reset=function(){this.polygonDrawStates.reset()},t.prototype.setMoveMode=function(){this.polygonDrawStates.setMoveMode()},t.prototype.setFreeDrawMode=function(){this.polygonDrawStates.setFreeDrawMode()},t.ɵfac=function(e){return new(e||t)(o["ɵɵinject"](p))},t.ɵprov=o["ɵɵdefineInjectable"]({token:t,factory:t.ɵfac,providedIn:"root"}),t}(),k={touchSupport:!0,mergePolygons:!0,kinks:!1,markers:{menu:!0,delete:!0,markerIcon:{styleClasses:["polygon-marker"]},holeIcon:{styleClasses:["polygon-marker","hole"]},markerMenuIcon:{position:4,styleClasses:["polygon-marker","menu"]},markerDeleteIcon:{position:1,styleClasses:["polygon-marker","delete"]}},polyLineOptions:{color:"#50622b",opacity:1,smoothFactor:0,noClip:!0,clickable:!1,weight:2},subtractLineOptions:{color:"#50622b",opacity:1,smoothFactor:0,noClip:!0,clickable:!1,weight:2},polygonOptions:{smoothFactor:.3,color:"#50622b",fillColor:"#b4cd8a",noClip:!0}},M=function(){function t(){this.simplyfiClicked=new o.EventEmitter,this.bboxClicked=new o.EventEmitter}return t.prototype.onSimplify=function(t){this.simplyfiClicked.emit(t)},t.prototype.onBbox=function(t){this.bboxClicked.emit(t)},t.ɵfac=function(o){return new(o||t)},t.ɵcmp=o["ɵɵdefineComponent"]({type:t,selectors:[["app-alter-polygon"]],outputs:{simplyfiClicked:"simplyfiClicked",bboxClicked:"bboxClicked"},decls:9,vars:0,consts:[[1,"marker-menu-inner-wrapper"],[1,"marker-menu-header"],[1,"marker-menu-content"],[1,"marker-menu-button","simplify",3,"click"],[1,"marker-menu-separator"],[1,"marker-menu-button","bbox",3,"click"]],template:function(t,e){1&t&&(o["ɵɵelementStart"](0,"div",0),o["ɵɵelementStart"](1,"div",1),o["ɵɵtext"](2,"Alter polygon"),o["ɵɵelementEnd"](),o["ɵɵelementStart"](3,"div",2),o["ɵɵelementStart"](4,"div",3),o["ɵɵlistener"]("click",(function(t){return e.onSimplify(t)})),o["ɵɵtext"](5,"Simplify"),o["ɵɵelementEnd"](),o["ɵɵelement"](6,"div",4),o["ɵɵelementStart"](7,"div",5),o["ɵɵlistener"]("click",(function(t){return e.onBbox(t)})),o["ɵɵtext"](8,"bbox"),o["ɵɵelementEnd"](),o["ɵɵelementEnd"](),o["ɵɵelementEnd"]())},styles:[""]}),t}(),L=function(){function t(t,o){this.cfr=t,this.injector=o,this.clusterPopuprefs=[]}return t.prototype.ngOnDestroy=function(){this.destroyAngularPopupComponents()},t.prototype.generateAlterPopup=function(){var t=this.cfr.resolveComponentFactory(M).create(this.injector);return this.clusterPopuprefs.push(t),t},t.prototype.destroyAngularPopupComponents=function(){this.clusterPopuprefs.forEach((function(t){t&&t.destroy()})),this.clusterPopuprefs=[]},t.ɵfac=function(e){return new(e||t)(o["ɵɵinject"](o.ComponentFactoryResolver),o["ɵɵinject"](o.Injector))},t.ɵprov=o["ɵɵdefineInjectable"]({token:t,factory:t.ɵfac,providedIn:"root"}),t}(),w=function(){function t(){}return t.prototype.createPolygon=function(t){return e.polygon(t)},t.ɵfac=function(o){return new(o||t)},t.ɵprov=o["ɵɵdefineInjectable"]({token:t,factory:t.ɵfac,providedIn:"root"}),t}(),I=function(){function t(t,o,i,s,a){var l=this;this.mapState=t,this.popupGenerator=o,this.turfHelper=i,this.polygonInformation=s,this.leafletHelper=a,this.drawModeSubject=new n.BehaviorSubject(c.Off),this.drawMode$=this.drawModeSubject.asObservable(),this.minimumFreeDrawZoomLevel=12,this.arrayOfFeatureGroups=[],this.tracer={},this.ngUnsubscribe=new n.Subject,this.config=null,this.mapState.map$.pipe(r.filter((function(t){return null!==t}))).subscribe((function(t){l.map=t,console.log("pre this.config",l.config),l.config=k,console.log("this.config",l.config),l.configurate({}),console.log("after this.config",l.config),l.tracer=e.polyline([[0,0]],l.config.polyLineOptions),l.initPolyDraw()})),this.mapState.mapZoomLevel$.pipe(r.debounceTime(100),r.takeUntil(this.ngUnsubscribe)).subscribe((function(t){l.onZoomChange(t)})),this.polygonInformation.polygonInformation$.subscribe((function(t){console.log("PolyInfo start: ",t)}))}return t.prototype.configurate=function(t){this.config=a(a({},k),t),this.mergePolygons=this.config.mergePolygons,this.kinks=this.config.kinks},t.prototype.closeAndReset=function(){this.setDrawMode(c.Off),this.removeAllFeatureGroups()},t.prototype.deletePolygon=function(t){var o=this;console.log("deletePolygon: ",t),this.arrayOfFeatureGroups.length>0&&this.arrayOfFeatureGroups.forEach((function(e){var n=e.getLayers()[0],r=n.getLatLngs(),i=r.length;r.forEach((function(s,a){var l,c=u(s);console.log(s),s.length>1?l=[c[0]]:(s[0]!==s[s.length-1]&&c.push(s[0]),l=c),console.log("Test: ",l),console.log(t);var g=o.polygonArrayEquals(l,t);console.log("equals: ",g," length: ",i),g&&1===i?(o.polygonInformation.deleteTrashcan(t),o.removeFeatureGroup(e),console.log(e.getLayers())):g&&i>1&&(o.polygonInformation.deleteTrashCanOnMulti([t]),r.splice(a,1),n.setLatLngs(r),o.removeFeatureGroup(e),o.addPolygonLayer(n.toGeoJSON(),!1))}))}))},t.prototype.removeAllFeatureGroups=function(){var t=this;this.arrayOfFeatureGroups.forEach((function(o){t.map.removeLayer(o)})),this.arrayOfFeatureGroups=[],this.polygonInformation.deletePolygonInformationStorage(),this.polygonInformation.reset(),this.polygonInformation.updatePolygons()},t.prototype.getDrawMode=function(){return this.drawModeSubject.value},t.prototype.addViken=function(t){this.addPolygonLayer(t,!0)},t.prototype.addAutoPolygon=function(t){var o=this,n=new e.FeatureGroup,r=this.turfHelper.getMultiPolygon(this.convertToCoords(t));console.log(r);var i=this.getPolygon(r);n.addLayer(i);var s=i.getLatLngs();console.log("markers: ",s),s.forEach((function(t){t.forEach((function(t,e){0===e?o.addMarker(t,n):(o.addHoleMarker(t,n),console.log("Hull: ",t))}))})),this.arrayOfFeatureGroups.push(n),this.polygonInformation.createPolygonInformationStorage(this.arrayOfFeatureGroups),this.polygonInformation.activate(),this.polygonInformation.setMoveMode()},t.prototype.convertToCoords=function(t){var o=[];if(console.log(t.length,t),t.length>1&&t.length<3){var n=[];console.log(e.GeoJSON.latLngsToCoords(t[t.length-1]),t[t.length-1].length),(s=this.turfHelper.isWithin(e.GeoJSON.latLngsToCoords(t[t.length-1]),e.GeoJSON.latLngsToCoords(t[0])))?t.forEach((function(t){n.push(e.GeoJSON.latLngsToCoords(t))})):t.forEach((function(t){o.push([e.GeoJSON.latLngsToCoords(t)])})),n.length>=1&&o.push(n),console.log("Within1 ",s)}else if(t.length>2)for(var r=[],i=1;i<t.length-1;i++){var s;(s=this.turfHelper.isWithin(e.GeoJSON.latLngsToCoords(t[i]),e.GeoJSON.latLngsToCoords(t[0])))?(t.forEach((function(t){r.push(e.GeoJSON.latLngsToCoords(t))})),o.push(r)):t.forEach((function(t){o.push([e.GeoJSON.latLngsToCoords(t)])}))}else o.push([e.GeoJSON.latLngsToCoords(t[0])]);return console.log(o),o},t.prototype.initPolyDraw=function(){var t=this,o=this.map.getContainer(),e=this.getDrawMode();this.config.touchSupport&&(o.addEventListener("touchstart",(function(o){e!==c.Off&&t.mouseDown(o)})),o.addEventListener("touchend",(function(o){e!==c.Off&&t.mouseUpLeave()})),o.addEventListener("touchmove",(function(o){e!==c.Off&&t.mouseMove(o)}))),this.map.addLayer(this.tracer),this.setDrawMode(c.Off)},t.prototype.mouseDown=function(t){if(console.log("mouseDown",t),null!=t.originalEvent)this.tracer.setLatLngs([t.latlng]);else{var o=this.map.containerPointToLatLng([t.touches[0].clientX,t.touches[0].clientY]);this.tracer.setLatLngs([o])}this.startDraw()},t.prototype.mouseMove=function(t){if(null!=t.originalEvent)this.tracer.addLatLng(t.latlng);else{var o=this.map.containerPointToLatLng([t.touches[0].clientX,t.touches[0].clientY]);this.tracer.addLatLng(o)}},t.prototype.mouseUpLeave=function(){this.polygonInformation.deletePolygonInformationStorage();var t=this.turfHelper.turfConcaveman(this.tracer.toGeoJSON());switch(this.stopDraw(),this.getDrawMode()){case c.Add:this.addPolygon(t,!0);break;case c.Subtract:this.subtractPolygon(t)}this.polygonInformation.createPolygonInformationStorage(this.arrayOfFeatureGroups)},t.prototype.startDraw=function(){this.drawStartedEvents(!0)},t.prototype.stopDraw=function(){this.resetTracker(),this.drawStartedEvents(!1)},t.prototype.onZoomChange=function(t){t>=this.minimumFreeDrawZoomLevel?this.polygonInformation.polygonDrawStates.canUsePolyDraw=!0:(this.polygonInformation.polygonDrawStates.canUsePolyDraw=!1,this.polygonInformation.setMoveMode()),this.polygonInformation.saveCurrentState()},t.prototype.drawStartedEvents=function(t){var o=t?"on":"off";this.map[o]("mousemove",this.mouseMove,this),this.map[o]("mouseup",this.mouseUpLeave,this)},t.prototype.subtractPolygon=function(t){this.subtract(t)},t.prototype.addPolygon=function(t,o,e){void 0===e&&(e=!1),console.log("addPolygon",t,o,e,this.kinks,this.config),this.mergePolygons&&!e&&this.arrayOfFeatureGroups.length>0&&!this.kinks?this.merge(t):this.addPolygonLayer(t,o)},t.prototype.addPolygonLayer=function(t,o){var n=this,r=new e.FeatureGroup,i=o?this.turfHelper.getSimplified(t):t;console.log("AddPolygonLayer: ",i);var s=this.getPolygon(i);r.addLayer(s),console.log(s),s.getLatLngs().forEach((function(t){t.forEach((function(t,o){0===o?n.addMarker(t,r):(n.addHoleMarker(t,r),console.log("Hull: ",t))}))})),this.arrayOfFeatureGroups.push(r),console.log("Array: ",this.arrayOfFeatureGroups),this.polygonInformation.activate(),this.setDrawMode(c.Off),r.on("click",(function(t){n.polygonClicked(t,i)}))},t.prototype.polygonClicked=function(t,o){var e=t.latlng;if("MultiPolygon"===o.geometry.type){var n=this.turfHelper.injectPointToPolygon(o,[e.lng,e.lat]);this.deletePolygon(this.getLatLngsFromJson(o)),this.addPolygonLayer(n,!1)}},t.prototype.getPolygon=function(t){console.log("getPolygons: ",t);var o=e.GeoJSON.geometryToLayer(t);return o.setStyle(this.config.polygonOptions),o},t.prototype.merge=function(t){var o=this;console.log("merge",t);var e=[],n=[];this.arrayOfFeatureGroups.forEach((function(r){var i=r.toGeoJSON();if(console.log("Merger: ",i.features[0]),i.features[0].geometry.coordinates.length>1)i.features[0].geometry.coordinates.forEach((function(i){var s=o.turfHelper.getMultiPolygon([i]);o.turfHelper.polygonIntersect(s,t)&&(n.push(r),e.push(s))}));else{var s=o.turfHelper.getTurfPolygon(i.features[0]);o.turfHelper.polygonIntersect(s,t)&&(n.push(r),e.push(s))}})),console.log(n),n.length>0?this.unionPolygons(n,t,e):this.addPolygonLayer(t,!0)},t.prototype.subtract=function(t){var o=this,e=t;this.arrayOfFeatureGroups.forEach((function(t){var n=t.toGeoJSON(),r=n.features[0],i=o.getLatLngsFromJson(r),s=o.turfHelper.getTurfPolygon(n.features[0]),a=o.turfHelper.polygonDifference(s,e);o.deletePolygon(i),o.removeFeatureGroupOnMerge(t),e=a}));var n=e;this.turfHelper.getCoords(n).forEach((function(t){o.addPolygonLayer(o.turfHelper.getMultiPolygon([t]),!0)}))},t.prototype.events=function(t){var o=t?"on":"off";this.map[o]("mousedown",this.mouseDown,this)},t.prototype.addMarker=function(t,o){var n=this,r=this.getMarkerIndex(t,this.config.markers.markerMenuIcon.position),i=this.getMarkerIndex(t,this.config.markers.markerDeleteIcon.position);t.forEach((function(s,a){var l=n.config.markers.markerIcon.styleClasses;a===r&&n.config.markers.menu&&(l=n.config.markers.markerMenuIcon.styleClasses),a===i&&n.config.markers.delete&&(l=n.config.markers.markerDeleteIcon.styleClasses);var u=new e.Marker(s,{icon:n.createDivIcon(l),draggable:!0,title:a.toString()});o.addLayer(u).addTo(n.map),u.on("drag",(function(t){n.markerDrag(o)})),u.on("dragend",(function(t){n.markerDragEnd(o)})),a===r&&n.config.markers.menu&&u.on("click",(function(o){n.convertToBoundsPolygon(t,!0)})),a===i&&n.config.markers.delete&&u.on("click",(function(o){n.deletePolygon([t])}))}))},t.prototype.addHoleMarker=function(t,o){var n=this;t.forEach((function(t,r){var i=n.config.markers.markerIcon.styleClasses,s=new e.Marker(t,{icon:n.createDivIcon(i),draggable:!0,title:r.toString()});o.addLayer(s).addTo(n.map),s.on("drag",(function(t){n.markerDrag(o)})),s.on("dragend",(function(t){n.markerDragEnd(o)}))}))},t.prototype.createDivIcon=function(t){var o=t.join(" ");return e.divIcon({className:o})},t.prototype.markerDrag=function(t){var o=[],e=[],n=[],r=t.getLayers(),i=r[0].getLatLngs();console.log(i),console.log("markerdrag: ",r);var s=0;if(i.length>1)for(var a=0;a<i.length;a++)if(e=[],n=[],console.log("Posisjoner: ",i[a]),0===a){if(i[0].length>1)for(var l=0;a<i[0].length;l++){console.log("Posisjoner 2: ",i[a][l]);for(var u=0;u<i[0][l].length;u++)e.push(r[u+1].getLatLng());n.push(e)}else{for(u=0;u<i[0][0].length;u++)e.push(r[u+1].getLatLng());n.push(e)}console.log("Hole: ",n),o.push(n)}else{s+=i[a-1][0].length,console.log("STart index: ",s);for(u=s;u<i[a][0].length+s;u++)e.push(r[u+1].getLatLng());n.push(e),o.push(n)}else{n=[];var c=0;for(a=0;a<i[0].length;a++){if(e=[],console.log("Polygon drag: ",i[0][a]),0===a)if(i[0][a].length>1)for(u=0;u<i[0][a].length;u++)e.push(r[u+1].getLatLng());else for(u=0;u<i[0][0].length;u++)e.push(r[u+1].getLatLng());else for(u=c+=i[0][a-1].length;u<i[0][a].length+c;u++)e.push(r[u+1].getLatLng());n.push(e)}o.push(n),console.log("Hole 2: ",n)}console.log("Nye posisjoner: ",o),r[0].setLatLngs(o)},t.prototype.markerDragEnd=function(t){var o=this;this.polygonInformation.deletePolygonInformationStorage();var e=t.toGeoJSON();if(console.log("Markerdragend polygon: ",e.features[0].geometry.coordinates),e.features[0].geometry.coordinates.length>1)e.features[0].geometry.coordinates.forEach((function(e){var n=o.turfHelper.getMultiPolygon([e]);if(console.log("Markerdragend: ",n),o.turfHelper.hasKinks(n)){o.kinks=!0;var r=o.turfHelper.getKinks(n);o.removeFeatureGroup(t),console.log("Unkink: ",r),r.forEach((function(t){o.addPolygon(o.turfHelper.getTurfPolygon(t),!1,!0)}))}else o.kinks=!1,o.addPolygon(n,!1)}));else{var n=this.turfHelper.getMultiPolygon(e.features[0].geometry.coordinates);if(console.log("Markerdragend: ",n),this.turfHelper.hasKinks(n)){this.kinks=!0;var r=this.turfHelper.getKinks(n);this.removeFeatureGroup(t),console.log("Unkink: ",r),r.forEach((function(t){o.addPolygon(o.turfHelper.getTurfPolygon(t),!1,!0)}))}else this.kinks=!1,this.addPolygon(n,!1)}this.polygonInformation.createPolygonInformationStorage(this.arrayOfFeatureGroups)},t.prototype.getLatLngsFromJson=function(t){var o;return console.log("getLatLngsFromJson: ",t),t&&(o=t.geometry.coordinates.length>1&&"MultiPolygon"===t.geometry.type?e.GeoJSON.coordsToLatLngs(t.geometry.coordinates[0][0]):t.geometry.coordinates[0].length>1&&"Polygon"===t.geometry.type?e.GeoJSON.coordsToLatLngs(t.geometry.coordinates[0]):e.GeoJSON.coordsToLatLngs(t.geometry.coordinates[0][0])),o},t.prototype.unionPolygons=function(t,o,e){var n=this;console.log("unionPolygons",t,o,e);var r=o;t.forEach((function(t,o){var i=t.toGeoJSON().features[0],s=n.getLatLngsFromJson(i),a=n.turfHelper.union(r,e[o]);n.deletePolygonOnMerge(s),n.removeFeatureGroup(t),r=a}));var i=r;this.addPolygonLayer(i,!0)},t.prototype.removeFeatureGroup=function(t){console.log("removeFeatureGroup",t),t.clearLayers(),this.arrayOfFeatureGroups=this.arrayOfFeatureGroups.filter((function(o){return o!==t})),this.map.removeLayer(t)},t.prototype.removeFeatureGroupOnMerge=function(t){console.log("removeFeatureGroupOnMerge",t);var o=[];if(t.getLayers()[0]){var e=t.getLayers()[0].getLatLngs()[0];this.polygonInformation.polygonInformationStorage.forEach((function(t){t.polygon.toString()!==e[0].toString()&&t.polygon[0].toString()===e[0][0].toString()&&(t.polygon=e,o.push(t)),t.polygon.toString()!==e[0].toString()&&t.polygon[0].toString()!==e[0][0].toString()&&o.push(t)})),t.clearLayers(),this.arrayOfFeatureGroups=this.arrayOfFeatureGroups.filter((function(o){return o!==t})),this.map.removeLayer(t)}},t.prototype.deletePolygonOnMerge=function(t){var o=this;console.log("deletePolygonOnMerge",t);var e=[];this.arrayOfFeatureGroups.length>0&&this.arrayOfFeatureGroups.forEach((function(n){var r=n.getLayers()[0].getLatLngs()[0];e=u(r[0]),r[0][0]!==r[0][r[0].length-1]&&e.push(r[0][0]),o.polygonArrayEqualsMerge(e,t)&&(console.log("EQUALS",t),o.removeFeatureGroupOnMerge(n),o.deletePolygon(t),o.polygonInformation.deleteTrashcan(t))}))},t.prototype.polygonArrayEqualsMerge=function(t,o){return t.toString()===o.toString()},t.prototype.polygonArrayEquals=function(t,o){if(t[0][0]){if(!t[0][0].equals(o[0][0]))return!1}else if(!t[0].equals(o[0]))return!1;return t.length===o.length},t.prototype.setLeafletMapEvents=function(t,o,e){t?this.map.dragging.enable():this.map.dragging.disable(),o?this.map.doubleClickZoom.enable():this.map.doubleClickZoom.disable(),e?this.map.scrollWheelZoom.enable():this.map.scrollWheelZoom.disable()},t.prototype.setDrawMode=function(t){if(console.log("setDrawMode",this.map),this.drawModeSubject.next(t),this.map){var o=!0;switch(t){case c.Off:e.DomUtil.removeClass(this.map.getContainer(),"crosshair-cursor-enabled"),this.events(!1),this.stopDraw(),this.tracer.setStyle({color:""}),this.setLeafletMapEvents(!0,!0,!0),o=!1;break;case c.Add:e.DomUtil.addClass(this.map.getContainer(),"crosshair-cursor-enabled"),this.events(!0),this.tracer.setStyle({color:k.polyLineOptions.color}),this.setLeafletMapEvents(!1,!1,!1);break;case c.Subtract:e.DomUtil.addClass(this.map.getContainer(),"crosshair-cursor-enabled"),this.events(!0),this.tracer.setStyle({color:"#D9460F"}),this.setLeafletMapEvents(!1,!1,!1)}o?this.polygonInformation.setFreeDrawMode():this.polygonInformation.setMoveMode()}},t.prototype.modeChange=function(t){this.setDrawMode(t),this.polygonInformation.saveCurrentState()},t.prototype.drawModeClick=function(){this.polygonInformation.polygonDrawStates.isFreeDrawMode?(this.polygonInformation.setMoveMode(),this.setDrawMode(c.Off)):(this.polygonInformation.setFreeDrawMode(),this.setDrawMode(c.Add)),this.polygonInformation.saveCurrentState()},t.prototype.freedrawMenuClick=function(){this.setDrawMode(c.Add),this.polygonInformation.activate(),this.polygonInformation.saveCurrentState()},t.prototype.subtractClick=function(){this.setDrawMode(c.Subtract),this.polygonInformation.saveCurrentState()},t.prototype.resetTracker=function(){this.tracer.setLatLngs([[0,0]])},t.prototype.toggleMarkerMenu=function(){alert("open menu")},t.prototype.getHtmlContent=function(t){var o=this.popupGenerator.generateAlterPopup();return o.instance.bboxClicked.subscribe((function(o){console.log("bbox clicked",o),t(o)})),o.instance.simplyfiClicked.subscribe((function(o){console.log("simplyfi clicked",o),t(o)})),o.location.nativeElement},t.prototype.convertToBoundsPolygon=function(t,o){void 0===o&&(o=!1),this.deletePolygon([t]);var e=this.turfHelper.getMultiPolygon(this.convertToCoords([t])),n=this.turfHelper.convertToBoundingBoxPolygon(e,o);this.addPolygonLayer(this.turfHelper.getTurfPolygon(n),!1)},t.prototype.convertToSimplifiedPolygon=function(t){this.deletePolygon([t]);var o=this.turfHelper.getMultiPolygon(this.convertToCoords([t]));this.addPolygonLayer(this.turfHelper.getTurfPolygon(o),!0)},t.prototype.getMarkerIndex=function(t,o){var e=y.getBounds(t,Math.sqrt(2)/2),n=new d(e.getSouth(),e.getWest(),e.getNorth(),e.getEast()).getDirection(o),r={lat:n.lat,lng:n.lng},i=this.turfHelper.getCoord(r),s=this.turfHelper.getFeaturePointCollection(t);return this.turfHelper.getNearestPointIndex(i,s)},t.ɵfac=function(e){return new(e||t)(o["ɵɵinject"](p),o["ɵɵinject"](L),o["ɵɵinject"](m),o["ɵɵinject"](b),o["ɵɵinject"](w))},t.ɵprov=o["ɵɵdefineInjectable"]({token:t,factory:t.ɵfac,providedIn:"root"}),t}(),E=function(){function t(){}return t.ɵmod=o["ɵɵdefineNgModule"]({type:t}),t.ɵinj=o["ɵɵdefineInjector"]({factory:function(o){return new(o||t)},imports:[[]]}),t}();("undefined"==typeof ngJitMode||ngJitMode)&&o["ɵɵsetNgModuleScope"](E,{declarations:[M]}),t.ComponentGeneraterService=L,t.MyLibModule=E,t.PolyDrawService=I,t.PolyStateService=p,t.PolygonInformationService=b,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=my-lib.umd.min.js.map