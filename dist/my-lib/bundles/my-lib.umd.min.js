!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("leaflet"),require("rxjs"),require("rxjs/operators"),require("@turf/turf"),require("concaveman")):"function"==typeof define&&define.amd?define("my-lib",["exports","@angular/core","leaflet","rxjs","rxjs/operators","@turf/turf","concaveman"],e):e((t=t||self)["my-lib"]={},t.ng.core,t.leaflet,t.rxjs,t.rxjs.operators,t.turf,t.concaveman)}(this,(function(t,e,o,n,r,i,a){"use strict";a=a&&Object.prototype.hasOwnProperty.call(a,"default")?a.default:a;var s=function(){return(s=Object.assign||function(t){for(var e,o=1,n=arguments.length;o<n;o++)for(var r in e=arguments[o])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)};Object.create;function u(t,e){var o="function"==typeof Symbol&&t[Symbol.iterator];if(!o)return t;var n,r,i=o.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(n=i.next()).done;)a.push(n.value)}catch(t){r={error:t}}finally{try{n&&!n.done&&(o=i.return)&&o.call(i)}finally{if(r)throw r.error}}return a}function l(t,e,o){if(o||2===arguments.length)for(var n,r=0,i=e.length;r<i;r++)!n&&r in e||(n||(n=Array.prototype.slice.call(e,0,r)),n[r]=e[r]);return t.concat(n||Array.prototype.slice.call(e))}Object.create;var c=function(){function t(){this.mapSubject=new n.BehaviorSubject(null),this.map$=this.mapSubject.asObservable(),this.polygonSubject=new n.BehaviorSubject(null),this.polygons$=this.polygonSubject.asObservable(),this.mapStateSubject=new n.BehaviorSubject(new h),this.mapState$=this.mapStateSubject.asObservable(),this.mapZoomLevel$=this.mapState$.pipe(r.map((function(t){return t.mapBoundState.zoom})))}return t.prototype.updateMapStates=function(t){var e=this.mapStateSubject.value;e=s(s({},e),t),this.mapStateSubject.next(e)},t.prototype.updateMapState=function(t){this.mapSubject.next(t)},t.prototype.updatePolygons=function(t){this.polygonSubject.next(t)},t.prototype.updateMapBounds=function(t){this.updateMapStates({mapBoundState:t})},t.ɵfac=function(e){return new(e||t)},t.ɵprov=e.ɵɵdefineInjectable({token:t,factory:t.ɵfac,providedIn:"root"}),t}();("undefined"==typeof ngDevMode||ngDevMode)&&e.ɵsetClassMetadata(c,[{type:e.Injectable,args:[{providedIn:"root"}]}],(function(){return[]}),null);var p,g,h=function(t){void 0===t&&(t=new f(null,11)),this.mapBoundState=t},f=function(t,e){this.bounds=t,this.zoom=e};(p=t.DrawMode||(t.DrawMode={}))[p.Off=0]="Off",p[p.Add=1]="Add",p[p.Edit=2]="Edit",p[p.Subtract=4]="Subtract",p[p.AppendMarker=8]="AppendMarker",p[p.LoadPredefined=16]="LoadPredefined",(g=t.MarkerPosition||(t.MarkerPosition={}))[g.North=1]="North",g[g.East=2]="East",g[g.South=3]="South",g[g.West=4]="West",g[g.NorthEast=5]="NorthEast",g[g.NorthWest=6]="NorthWest",g[g.SouthEast=7]="SouthEast",g[g.SouthWest=8]="SouthWest";var d=function(){function t(){}return t.getBounds=function(t,e){void 0===e&&(e=0);var n=[];t.forEach((function(t){isNaN(t.lat)||isNaN(t.lng),n.push(t)}));var r=new o.Polyline(n).getBounds();return 0!==e?r.pad(e):r},t}(),y=function(){function e(t,e,o,n){void 0===t&&(t=0),void 0===e&&(e=0),void 0===o&&(o=0),void 0===n&&(n=0),this.direction={East:{lat:0,lng:0},North:{lat:0,lng:0},NorthEast:{lat:0,lng:0},NorthWest:{lat:0,lng:0},South:{lat:0,lng:0},SouthEast:{lat:0,lng:0},SouthWest:{lat:0,lng:0},West:{lat:0,lng:0}},this.direction.North={lat:o,lng:(e+n)/2},this.direction.NorthEast={lat:o,lng:n},this.direction.East={lat:(t+o)/2,lng:n},this.direction.SouthEast={lat:t,lng:n},this.direction.South={lat:t,lng:(e+n)/2},this.direction.SouthWest={lat:t,lng:e},this.direction.West={lat:(t+o)/2,lng:e},this.direction.NorthWest={lat:o,lng:e}}return e.prototype.getDirection=function(e){switch(e){case t.MarkerPosition.North:return this.direction.North;case t.MarkerPosition.NorthEast:return this.direction.NorthEast;case t.MarkerPosition.East:return this.direction.East;case t.MarkerPosition.SouthEast:return this.direction.SouthEast;case t.MarkerPosition.South:return this.direction.South;case t.MarkerPosition.SouthWest:return this.direction.SouthWest;case t.MarkerPosition.West:return this.direction.West;case t.MarkerPosition.NorthWest:return this.direction.NorthWest;default:return this.direction.North}},e.prototype.getPositions=function(e,o,n){void 0===e&&(e=t.MarkerPosition.SouthWest),void 0===o&&(o=!1),void 0===n&&(n=!0);var r=[];return r.push([this.direction.SouthWest.lng,this.direction.SouthWest.lat]),r.push([this.direction.SouthWest.lng,this.direction.SouthWest.lat]),r.push([this.direction.South.lng,this.direction.South.lat]),r.push([this.direction.SouthEast.lng,this.direction.SouthEast.lat]),r.push([this.direction.East.lng,this.direction.East.lat]),r.push([this.direction.NorthEast.lng,this.direction.NorthEast.lat]),r.push([this.direction.North.lng,this.direction.North.lat]),r.push([this.direction.NorthWest.lng,this.direction.NorthWest.lat]),r.push([this.direction.West.lng,this.direction.West.lat]),n&&r.push([this.direction.SouthWest.lng,this.direction.SouthWest.lat]),r},e}(),m=function(){function t(){this.simplifyTolerance={tolerance:1e-4,highQuality:!1}}return t.prototype.union=function(t,e){var o=i.union(t,e);return this.getTurfPolygon(o)},t.prototype.turfConcaveman=function(t){var e=i.explode(t).features.map((function(t){return t.geometry.coordinates}));return i.multiPolygon([[a(e)]])},t.prototype.getSimplified=function(t){var e=this.simplifyTolerance;return i.simplify(t,e)},t.prototype.getTurfPolygon=function(t){return"Polygon"===t.geometry.type?i.multiPolygon([t.geometry.coordinates]):i.multiPolygon(t.geometry.coordinates)},t.prototype.getMultiPolygon=function(t){return i.multiPolygon(t)},t.prototype.getKinks=function(t){var e=i.unkinkPolygon(t),o=[];return i.featureEach(e,(function(t){o.push(t)})),o},t.prototype.getCoords=function(t){return i.getCoords(t)},t.prototype.hasKinks=function(t){return i.kinks(t).features.length>0},t.prototype.polygonIntersect=function(t,e){var o=[],n=[];i.getCoords(e).forEach((function(t){var e={type:"Polygon",coordinates:[t[0]]};o.push(e)})),i.getCoords(t).forEach((function(t){var e={type:"Polygon",coordinates:[t[0]]};n.push(e)}));var r=!1;t:for(var a=0;a<o.length;a++)if(this.getKinks(o[a]).length<2)for(var s=0;s<n.length;s++)if(this.getKinks(n[s]).length<2){var u=i.intersect(o[a],n[s]);if("Point"===(null==u?void 0:u.geometry.type)?r=!(i.booleanPointInPolygon(u,o[a])&&i.booleanPointInPolygon(u,n[s])):"Polygon"===(null==u?void 0:u.geometry.type)&&(r=!!i.intersect(o[a],n[s])),r)break t}return r},t.prototype.getIntersection=function(t,e){return i.intersect(t,e)},t.prototype.getDistance=function(t,e){return i.distance(t,e)},t.prototype.isWithin=function(t,e){return i.booleanWithin(i.polygon([t]),i.polygon([e]))},t.prototype.equalPolygons=function(t,e){},t.prototype.convertToBoundingBoxPolygon=function(t,e){void 0===e&&(e=!1);var o=i.bbox(t.geometry),n=i.bboxPolygon(o),r=new y(o[1],o[0],o[3],o[2]).getPositions();return n.geometry.coordinates=[],n.geometry.coordinates=[r],n},t.prototype.polygonToMultiPolygon=function(t){return i.multiPolygon([t.geometry.coordinates])},t.prototype.injectPointToPolygon=function(t,e){var o,n=i.getCoords(t);if(n.length<2){var r=i.explode(t),a=i.nearestPoint(e,r).properties.featureIndex,s=i.coordReduce(r,(function(t,o,n){return l(l([],u(t)),a===n?[o,e]:[o])}),[]);o=i.multiPolygon([[s]])}else{var c=[],p=[];n.forEach((function(t){var o=i.polygon(t);if(i.booleanPointInPolygon(e,o)){var n=i.explode(o),r=i.nearestPoint(e,n).properties.featureIndex;p=i.coordReduce(n,(function(t,o,n){return l(l([],u(t)),r===n?[o,e]:[o])}),[])}else c.push(t)})),c.push([p]),o=i.multiPolygon(c)}return o},t.prototype.polygonDifference=function(t,e){var o=i.difference(t,e);return this.getTurfPolygon(o)},t.prototype.getBoundingBoxCompassPosition=function(t,e,o,n){this.getMultiPolygon(t);var r=this.getBoundingBoxCompass(t),a=i.explode(t),s=this.getCoord(r.direction.North);i.nearestPoint(s,a);return null},t.prototype.getBoundingBoxCompass=function(t){var e=this.getMultiPolygon(t),o=(i.centerOfMass(e),i.bbox(e)),n=o[0],r=o[1],a=o[2],s=o[3];return new y(n,r,a,s)},t.prototype.getNearestPointIndex=function(t,e){return i.nearestPoint(t,e).properties.featureIndex},t.prototype.getCoord=function(t){return i.getCoord([t.lng,t.lat])},t.prototype.getFeaturePointCollection=function(t){var e=[];return t.forEach((function(t){var o=i.point([t.lng,t.lat],{});e.push(o)})),i.featureCollection(e)},t.ɵfac=function(e){return new(e||t)},t.ɵprov=e.ɵɵdefineInjectable({token:t,factory:t.ɵfac,providedIn:"root"}),t}();("undefined"==typeof ngDevMode||ngDevMode)&&e.ɵsetClassMetadata(m,[{type:e.Injectable,args:[{providedIn:"root"}]}],(function(){return[]}),null);var v=function(){function t(){}return t.getCenter=function(t){var e=Math.PI,o=0,n=0,r=0;t.forEach((function(t){var i=t.lat,a=t.lng;i=i*e/180,a=a*e/180,o+=Math.cos(i)*Math.cos(a),n+=Math.cos(i)*Math.sin(a),r+=Math.sin(i)}));var i=Math.atan2(n,o),a=Math.sqrt(o*o+n*n),s=Math.atan2(r,a);return{lat:s=180*s/e,lng:i=180*i/e}},t.getSouthWest=function(t){return this.getBounds(t).getNorthWest()},t.getNorthEast=function(t){return this.getBounds(t).getNorthEast()},t.getNorthWest=function(t){return this.getBounds(t).getNorthWest()},t.getSouthEast=function(t){return this.getBounds(t).getSouthEast()},t.getNorth=function(t){return this.getBounds(t).getNorth()},t.getSouth=function(t){return this.getBounds(t).getSouth()},t.getWest=function(t){return this.getBounds(t).getWest()},t.getEast=function(t){return this.getBounds(t).getEast()},t.getSqmArea=function(t){var e=new o.Polygon(t).toGeoJSON();return i.area(e)},t.getPerimeter=function(t){var e=new o.Polygon(t).toGeoJSON();return i.length(e,{units:"meters"})},t.getPolygonChecksum=function(t){var e=t.filter((function(t,e,o){return o.indexOf(o.find((function(e){return e.lat===t.lat&&e.lng===t.lng})))===e}));return e.reduce((function(t,e){return+t+ +e.lat}),0)*e.reduce((function(t,e){return+t+ +e.lng}),0)},t.getMidPoint=function(t,e){var o=i.point([t.lng,t.lat]),n=i.point([e.lng,e.lat]),r=i.midpoint(o,n);return{lat:r.geometry.coordinates[1],lng:r.geometry.coordinates[0]}},t.getBounds=function(t){var e=[];return t.forEach((function(t){isNaN(t.lat)||isNaN(t.lng),e.push(t)})),new o.Polyline(e).getBounds()},t}(),S=function(){function t(t){var e=this;this.polygon=[],this.trashcanPoint=[],this.sqmArea=[],this.perimeter=[],t.forEach((function(t,o){e.trashcanPoint[o]=e.getTrashcanPoint(t[0]),e.sqmArea[o]=e.calculatePolygonArea(t[0]),e.perimeter[o]=e.calculatePolygonPerimeter(t[0]),e.polygon[o]=t}))}return t.prototype.setSqmArea=function(t){this.sqmArea[0]=t},t.prototype.getTrashcanPoint=function(t){var e,o,n=Math.max.apply(Math,t.map((function(t){return t.lat}))),r=t.findIndex((function(t){return t.lat===n}));r>0?(e=t[r-1],o=r<t.length-1?t[r+1]:t[0]):(e=t[t.length-1],o=t[r+1]);var i=e.lng<o.lng?e:o;return v.getMidPoint(t[r],i)},t.prototype.calculatePolygonArea=function(t){return v.getSqmArea(t)},t.prototype.calculatePolygonPerimeter=function(t){return v.getPerimeter(t)},t}(),P=function(){function t(){this.canUsePolyDraw=!1,this.reset()}return t.prototype.activate=function(){this.reset(),this.isActivated=!0},t.prototype.reset=function(){this.isActivated=!1,this.hasPolygons=!1,this.canRevert=!1,this.isAuto=!1,this.resetDrawModes()},t.prototype.resetDrawModes=function(){this.isFreeDrawMode=!1,function(t,e){for(var o=document.querySelectorAll(t),n=0;n<o.length;n++)o.item(n).classList.remove(e)}("img.leaflet-tile","disable-events"),this.isMoveMode=!1},t.prototype.setFreeDrawMode=function(t){void 0===t&&(t=!1),t&&(this.isActivated=!0),this.isActivated&&(this.resetDrawModes(),this.isFreeDrawMode=!0,function(t,e){for(var o=document.querySelectorAll(t),n=0;n<o.length;n++)o.item(n).classList.add(e)}("img.leaflet-tile","disable-events"),t&&(this.isAuto=!0))},t.prototype.setMoveMode=function(){this.isActivated&&(this.resetDrawModes(),this.isMoveMode=!0)},t.prototype.forceCanUseFreeDraw=function(){this.canUsePolyDraw=!0},t}(),M=function(){function t(t){this.mapStateService=t,this.polygonInformationSubject=new n.Subject,this.polygonInformation$=this.polygonInformationSubject.asObservable(),this.polygonDrawStatesSubject=new n.Subject,this.polygonDrawStates$=this.polygonDrawStatesSubject.asObservable(),this.polygonDrawStates=null,this.polygonInformationStorage=[],this.polygonDrawStates=new P}return t.prototype.updatePolygons=function(){var t=null;this.polygonInformationStorage.length>0?(t=[],this.polygonInformationStorage.forEach((function(e){var o=[];e.polygon.forEach((function(t){var e=[];t.forEach((function(t){e=l([],u(t)),t[0].toString()!==t[t.length-1].toString()&&e.push(t[0]),o.push(e)}))})),t.push(o)})),this.polygonDrawStates.hasPolygons=!0):(this.polygonDrawStates.reset(),this.polygonDrawStates.hasPolygons=!1),this.mapStateService.updatePolygons(t),this.saveCurrentState()},t.prototype.saveCurrentState=function(){this.polygonInformationSubject.next(this.polygonInformationStorage),this.polygonDrawStatesSubject.next(this.polygonDrawStates)},t.prototype.deleteTrashcan=function(t){var e=this.polygonInformationStorage.findIndex((function(e){return e.polygon[0]===t}));this.polygonInformationStorage.splice(e,1),this.updatePolygons()},t.prototype.deleteTrashCanOnMulti=function(t){var e=0;this.polygonInformationStorage.forEach((function(o,n){var r=o.polygon.findIndex((function(e){return e.toString()===t.toString()}));r>=0&&(e=n,o.trashcanPoint.splice(r,1),o.sqmArea.splice(r,1),o.perimeter.splice(r,1),o.polygon.splice(r,1))})),this.updatePolygons(),this.polygonInformationStorage.length>1&&this.polygonInformationStorage.splice(e,1)},t.prototype.deletePolygonInformationStorage=function(){this.polygonInformationStorage=[]},t.prototype.createPolygonInformationStorage=function(t){var e=this;t.length>0&&(t.forEach((function(t){var o=new S(t.getLayers()[0].getLatLngs());e.polygonInformationStorage.push(o)})),this.updatePolygons())},t.prototype.activate=function(){this.polygonDrawStates.activate()},t.prototype.reset=function(){this.polygonDrawStates.reset()},t.prototype.setMoveMode=function(){this.polygonDrawStates.setMoveMode()},t.prototype.setFreeDrawMode=function(){this.polygonDrawStates.setFreeDrawMode()},t.ɵfac=function(o){return new(o||t)(e.ɵɵinject(c))},t.ɵprov=e.ɵɵdefineInjectable({token:t,factory:t.ɵfac,providedIn:"root"}),t}();("undefined"==typeof ngDevMode||ngDevMode)&&e.ɵsetClassMetadata(M,[{type:e.Injectable,args:[{providedIn:"root"}]}],(function(){return[{type:c}]}),null);var b={touchSupport:!0,mergePolygons:!0,kinks:!1,markers:{menu:!0,delete:!0,markerIcon:{styleClasses:["polygon-marker"]},holeIcon:{styleClasses:["polygon-marker","hole"]},markerMenuIcon:{position:4,styleClasses:["polygon-marker","menu"]},markerDeleteIcon:{position:1,styleClasses:["polygon-marker","delete"]}},polyLineOptions:{color:"#50622b",opacity:1,smoothFactor:0,noClip:!0,clickable:!1,weight:2},subtractLineOptions:{color:"#50622b",opacity:1,smoothFactor:0,noClip:!0,clickable:!1,weight:2},polygonOptions:{smoothFactor:.3,color:"#50622b",fillColor:"#b4cd8a",noClip:!0}},w=function(){function t(){this.simplyfiClicked=new e.EventEmitter,this.bboxClicked=new e.EventEmitter}return t.prototype.onSimplify=function(t){this.simplyfiClicked.emit(t)},t.prototype.onBbox=function(t){this.bboxClicked.emit(t)},t.ɵfac=function(e){return new(e||t)},t.ɵcmp=e.ɵɵdefineComponent({type:t,selectors:[["app-alter-polygon"]],outputs:{simplyfiClicked:"simplyfiClicked",bboxClicked:"bboxClicked"},decls:9,vars:0,consts:[[1,"marker-menu-inner-wrapper"],[1,"marker-menu-header"],[1,"marker-menu-content"],[1,"marker-menu-button","simplify",3,"click"],[1,"marker-menu-separator"],[1,"marker-menu-button","bbox",3,"click"]],template:function(t,o){1&t&&(e.ɵɵelementStart(0,"div",0),e.ɵɵelementStart(1,"div",1),e.ɵɵtext(2,"Alter polygon"),e.ɵɵelementEnd(),e.ɵɵelementStart(3,"div",2),e.ɵɵelementStart(4,"div",3),e.ɵɵlistener("click",(function(t){return o.onSimplify(t)})),e.ɵɵtext(5,"Simplify"),e.ɵɵelementEnd(),e.ɵɵelement(6,"div",4),e.ɵɵelementStart(7,"div",5),e.ɵɵlistener("click",(function(t){return o.onBbox(t)})),e.ɵɵtext(8,"bbox"),e.ɵɵelementEnd(),e.ɵɵelementEnd(),e.ɵɵelementEnd())},styles:[""]}),t}();("undefined"==typeof ngDevMode||ngDevMode)&&e.ɵsetClassMetadata(w,[{type:e.Component,args:[{selector:"app-alter-polygon",templateUrl:"./alter-polygon.component.html",styleUrls:["./alter-polygon.component.css"]}]}],null,{simplyfiClicked:[{type:e.Output}],bboxClicked:[{type:e.Output}]});var k=function(){function t(t,e){this.cfr=t,this.injector=e,this.clusterPopuprefs=[]}return t.prototype.ngOnDestroy=function(){this.destroyAngularPopupComponents()},t.prototype.generateAlterPopup=function(){var t=this.cfr.resolveComponentFactory(w).create(this.injector);return this.clusterPopuprefs.push(t),t},t.prototype.destroyAngularPopupComponents=function(){this.clusterPopuprefs.forEach((function(t){t&&t.destroy()})),this.clusterPopuprefs=[]},t.ɵfac=function(o){return new(o||t)(e.ɵɵinject(e.ComponentFactoryResolver),e.ɵɵinject(e.Injector))},t.ɵprov=e.ɵɵdefineInjectable({token:t,factory:t.ɵfac,providedIn:"root"}),t}();("undefined"==typeof ngDevMode||ngDevMode)&&e.ɵsetClassMetadata(k,[{type:e.Injectable,args:[{providedIn:"root"}]}],(function(){return[{type:e.ComponentFactoryResolver},{type:e.Injector}]}),null);var L=function(){function t(){}return t.prototype.createPolygon=function(t){return o.polygon(t)},t.ɵfac=function(e){return new(e||t)},t.ɵprov=e.ɵɵdefineInjectable({token:t,factory:t.ɵfac,providedIn:"root"}),t}();("undefined"==typeof ngDevMode||ngDevMode)&&e.ɵsetClassMetadata(L,[{type:e.Injectable,args:[{providedIn:"root"}]}],(function(){return[]}),null);var D=function(){function i(e,i,a,s,u){var l=this;this.mapState=e,this.popupGenerator=i,this.turfHelper=a,this.polygonInformation=s,this.leafletHelper=u,this.drawModeSubject=new n.BehaviorSubject(t.DrawMode.Off),this.drawMode$=this.drawModeSubject.asObservable(),this.minimumFreeDrawZoomLevel=12,this.arrayOfFeatureGroups=[],this.tracer={},this.ngUnsubscribe=new n.Subject,this.config=null,this.mapState.map$.pipe(r.filter((function(t){return null!==t}))).subscribe((function(t){l.map=t,l.config=b,l.configurate({}),l.tracer=o.polyline([[0,0]],l.config.polyLineOptions),l.initPolyDraw()})),this.mapState.mapZoomLevel$.pipe(r.debounceTime(100),r.takeUntil(this.ngUnsubscribe)).subscribe((function(t){l.onZoomChange(t)}))}return i.prototype.configurate=function(t){this.config=s(s({},b),t),this.mergePolygons=this.config.mergePolygons,this.kinks=this.config.kinks},i.prototype.closeAndReset=function(){this.setDrawMode(t.DrawMode.Off),this.removeAllFeatureGroups()},i.prototype.deletePolygon=function(t){var e=this;t.length>1&&(t.length=1),this.arrayOfFeatureGroups.length>0&&this.arrayOfFeatureGroups.forEach((function(o){var n=o.getLayers()[0],r=n.getLatLngs(),i=r.length;r.forEach((function(a,s){var c,p=l([],u(a));a.length>1?(a[0][0]!==a[0][a[0].length-1]&&p[0].push(a[0][0]),c=[p[0]]):(a[0]!==a[a.length-1]&&p.push(a[0]),c=p);var g=e.polygonArrayEquals(c,t);g&&1===i?(e.polygonInformation.deleteTrashcan(t),e.removeFeatureGroup(o)):g&&i>1&&(e.polygonInformation.deleteTrashCanOnMulti([t]),r.splice(s,1),n.setLatLngs(r),e.removeFeatureGroup(o),e.addPolygonLayer(n.toGeoJSON(),!1))}))}))},i.prototype.removeAllFeatureGroups=function(){var t=this;this.arrayOfFeatureGroups.forEach((function(e){t.map.removeLayer(e)})),this.arrayOfFeatureGroups=[],this.polygonInformation.deletePolygonInformationStorage(),this.polygonInformation.reset(),this.polygonInformation.updatePolygons()},i.prototype.getDrawMode=function(){return this.drawModeSubject.value},i.prototype.addViken=function(t){this.addPolygonLayer(t,!0)},i.prototype.addAutoPolygon=function(t){var e=this;t.forEach((function(t){var n=new o.FeatureGroup,r=e.turfHelper.getMultiPolygon(e.convertToCoords(t)),i=e.getPolygon(r);n.addLayer(i),i.getLatLngs().forEach((function(t){t.forEach((function(t,o){0===o?e.addMarker(t,n):e.addHoleMarker(t,n)}))})),e.arrayOfFeatureGroups.push(n)})),this.polygonInformation.createPolygonInformationStorage(this.arrayOfFeatureGroups),this.polygonInformation.activate(),this.polygonInformation.setMoveMode()},i.prototype.convertToCoords=function(t){var e=[];if(t.length>1&&t.length<3){var n=[];this.turfHelper.isWithin(o.GeoJSON.latLngsToCoords(t[t.length-1]),o.GeoJSON.latLngsToCoords(t[0]))?t.forEach((function(t){n.push(o.GeoJSON.latLngsToCoords(t))})):t.forEach((function(t){e.push([o.GeoJSON.latLngsToCoords(t)])})),n.length>=1&&e.push(n)}else if(t.length>2)for(var r=[],i=1;i<t.length-1;i++){this.turfHelper.isWithin(o.GeoJSON.latLngsToCoords(t[i]),o.GeoJSON.latLngsToCoords(t[0]))?(t.forEach((function(t){r.push(o.GeoJSON.latLngsToCoords(t))})),e.push(r)):t.forEach((function(t){e.push([o.GeoJSON.latLngsToCoords(t)])}))}else e.push([o.GeoJSON.latLngsToCoords(t[0])]);return e},i.prototype.initPolyDraw=function(){var e=this,o=this.map.getContainer(),n=this.getDrawMode();this.config.touchSupport&&(o.addEventListener("touchstart",(function(t){e.mouseDown(t)})),o.addEventListener("touchend",(function(o){n!==t.DrawMode.Off&&e.mouseUpLeave(o)})),o.addEventListener("touchmove",(function(o){n!==t.DrawMode.Off&&e.mouseMove(o)}))),this.map.addLayer(this.tracer),this.setDrawMode(t.DrawMode.Off)},i.prototype.mouseDown=function(t){if(null!=t.originalEvent)this.tracer.setLatLngs([t.latlng]);else{var e=this.map.containerPointToLatLng([t.touches[0].clientX,t.touches[0].clientY]);this.tracer.setLatLngs([e])}this.startDraw()},i.prototype.mouseMove=function(t){if(null!=t.originalEvent)this.tracer.addLatLng(t.latlng);else{var e=this.map.containerPointToLatLng([t.touches[0].clientX,t.touches[0].clientY]);this.tracer.addLatLng(e)}},i.prototype.mouseUpLeave=function(e){this.polygonInformation.deletePolygonInformationStorage();var o=this.turfHelper.turfConcaveman(this.tracer.toGeoJSON());switch(this.stopDraw(),this.getDrawMode()){case t.DrawMode.Add:this.addPolygon(o,!0);break;case t.DrawMode.Subtract:this.subtractPolygon(o)}this.polygonInformation.createPolygonInformationStorage(this.arrayOfFeatureGroups)},i.prototype.startDraw=function(){this.drawStartedEvents(!0)},i.prototype.stopDraw=function(){this.resetTracker(),this.drawStartedEvents(!1)},i.prototype.onZoomChange=function(t){t>=this.minimumFreeDrawZoomLevel?this.polygonInformation.polygonDrawStates.canUsePolyDraw=!0:(this.polygonInformation.polygonDrawStates.canUsePolyDraw=!1,this.polygonInformation.setMoveMode()),this.polygonInformation.saveCurrentState()},i.prototype.drawStartedEvents=function(t){var e=this,o=t?"on":"off";this.map[o]("mousemove",this.mouseMove,this),this.map[o]("mouseup",this.mouseUpLeave,this),t?(this.map.getContainer().addEventListener("touchmove",(function(t){return e.mouseMove(t)})),this.map.getContainer().addEventListener("touchend",(function(t){return e.mouseUpLeave(t)}))):(this.map.getContainer().removeEventListener("touchmove",(function(t){return e.mouseMove(t)}),!0),this.map.getContainer().removeEventListener("touchend",(function(t){return e.mouseUpLeave(t)}),!0))},i.prototype.subtractPolygon=function(t){this.subtract(t)},i.prototype.addPolygon=function(t,e,o){void 0===o&&(o=!1),this.mergePolygons&&!o&&this.arrayOfFeatureGroups.length>0&&!this.kinks?this.merge(t):this.addPolygonLayer(t,e)},i.prototype.addPolygonLayer=function(e,n){var r=this,i=new o.FeatureGroup,a=n?this.turfHelper.getSimplified(e):e,s=this.getPolygon(a);i.addLayer(s),s.getLatLngs().forEach((function(t){t.forEach((function(t,e){0===e?r.addMarker(t,i):r.addHoleMarker(t,i)}))})),this.arrayOfFeatureGroups.push(i),this.polygonInformation.activate(),this.setDrawMode(t.DrawMode.Off),i.on("click",(function(t){r.polygonClicked(t,a)}))},i.prototype.polygonClicked=function(t,e){var o=t.latlng;if("MultiPolygon"===e.geometry.type){var n=this.turfHelper.injectPointToPolygon(e,[o.lng,o.lat]);this.deletePolygon(this.getLatLngsFromJson(e)),this.addPolygonLayer(n,!1)}},i.prototype.getPolygon=function(t){var e=o.GeoJSON.geometryToLayer(t);return e.setStyle(this.config.polygonOptions),e},i.prototype.merge=function(t){var e=this,o=[],n=[];this.arrayOfFeatureGroups.forEach((function(r){var i=r.toGeoJSON();if(i.features[0].geometry.coordinates.length>1)i.features[0].geometry.coordinates.forEach((function(i){var a=e.turfHelper.getMultiPolygon([i]);e.turfHelper.polygonIntersect(a,t)&&(n.push(r),o.push(a))}));else{var a=e.turfHelper.getTurfPolygon(i.features[0]);e.turfHelper.polygonIntersect(a,t)&&(n.push(r),o.push(a))}})),n.length>0?this.unionPolygons(n,t,o):this.addPolygonLayer(t,!0)},i.prototype.subtract=function(t){var e=this,o=t;this.arrayOfFeatureGroups.forEach((function(t){var n=t.toGeoJSON(),r=n.features[0],i=e.getLatLngsFromJson(r),a=e.turfHelper.getTurfPolygon(n.features[0]),s=e.turfHelper.polygonDifference(a,o);e.deletePolygon(i),e.removeFeatureGroupOnMerge(t),o=s}));var n=o;this.turfHelper.getCoords(n).forEach((function(t){e.addPolygonLayer(e.turfHelper.getMultiPolygon([t]),!0)}))},i.prototype.events=function(t){var e=this,o=t?"on":"off";this.map[o]("mousedown",this.mouseDown,this),t?this.map.getContainer().addEventListener("touchstart",(function(t){return e.mouseDown(t)})):this.map.getContainer().removeEventListener("touchstart",(function(t){return e.mouseDown(t)}),!0)},i.prototype.addMarker=function(t,e){var n=this,r=this.getMarkerIndex(t,this.config.markers.markerMenuIcon.position),i=this.getMarkerIndex(t,this.config.markers.markerDeleteIcon.position);t.forEach((function(a,s){var u=n.config.markers.markerIcon.styleClasses,l=new o.Marker(a,{icon:n.createDivIcon(u),draggable:!0,title:s.toString()});e.addLayer(l).addTo(n.map),l.on("drag",(function(t){n.markerDrag(e)})),l.on("dragend",(function(t){n.markerDragEnd(e)})),s===r&&n.config.markers.menu&&l.on("click",(function(e){n.convertToBoundsPolygon(t,!0)})),s===i&&n.config.markers.delete&&l.on("click",(function(e){n.deletePolygon([t])}))}))},i.prototype.addHoleMarker=function(t,e){var n=this;t.forEach((function(t,r){var i=n.config.markers.markerIcon.styleClasses,a=new o.Marker(t,{icon:n.createDivIcon(i),draggable:!0,title:r.toString()});e.addLayer(a).addTo(n.map),a.on("drag",(function(t){n.markerDrag(e)})),a.on("dragend",(function(t){n.markerDragEnd(e)}))}))},i.prototype.createDivIcon=function(t){var e=t.join(" ");return o.divIcon({className:e})},i.prototype.markerDrag=function(t){var e=[],o=[],n=[],r=t.getLayers(),i=r[0].getLatLngs(),a=0;if(i.length>1)for(var s=0;s<i.length;s++)if(o=[],n=[],0===s){if(i[0].length>1)for(var u=0;s<i[0].length;u++){for(var l=0;l<i[0][u].length;l++)o.push(r[l+1].getLatLng());n.push(o)}else{for(l=0;l<i[0][0].length;l++)o.push(r[l+1].getLatLng());n.push(o)}e.push(n)}else{for(l=a+=i[s-1][0].length;l<i[s][0].length+a;l++)o.push(r[l+1].getLatLng());n.push(o),e.push(n)}else{n=[];var c=0;for(s=0;s<i[0].length;s++){if(o=[],0===s)if(i[0][s].length>1)for(l=0;l<i[0][s].length;l++)o.push(r[l+1].getLatLng());else for(l=0;l<i[0][0].length;l++)o.push(r[l+1].getLatLng());else for(l=c+=i[0][s-1].length;l<i[0][s].length+c;l++)o.push(r[l+1].getLatLng());n.push(o)}e.push(n)}r[0].setLatLngs(e)},i.prototype.markerDragEnd=function(t){var e=this;this.polygonInformation.deletePolygonInformationStorage();var o=t.toGeoJSON();if(o.features[0].geometry.coordinates.length>1)o.features[0].geometry.coordinates.forEach((function(o){var n=e.turfHelper.getMultiPolygon([o]);if(e.turfHelper.hasKinks(n)){e.kinks=!0;var r=e.turfHelper.getKinks(n);e.removeFeatureGroup(t),r.forEach((function(t){e.addPolygon(e.turfHelper.getTurfPolygon(t),!1,!0)}))}else e.kinks=!1,e.addPolygon(n,!1)}));else{var n=this.turfHelper.getMultiPolygon(o.features[0].geometry.coordinates);if(this.turfHelper.hasKinks(n)){this.kinks=!0;var r=this.turfHelper.getKinks(n);this.removeFeatureGroup(t);r.forEach((function(t){e.addPolygon(e.turfHelper.getTurfPolygon(t),!1,!0)}))}else this.kinks=!1,this.addPolygon(n,!1)}this.polygonInformation.createPolygonInformationStorage(this.arrayOfFeatureGroups)},i.prototype.getLatLngsFromJson=function(t){var e;return t&&(e=t.geometry.coordinates.length>1&&"MultiPolygon"===t.geometry.type?o.GeoJSON.coordsToLatLngs(t.geometry.coordinates[0][0]):t.geometry.coordinates[0].length>1&&"Polygon"===t.geometry.type?o.GeoJSON.coordsToLatLngs(t.geometry.coordinates[0]):o.GeoJSON.coordsToLatLngs(t.geometry.coordinates[0][0])),e},i.prototype.unionPolygons=function(t,e,o){var n=this,r=e;t.forEach((function(t,e){var i=t.toGeoJSON().features[0],a=n.getLatLngsFromJson(i),s=n.turfHelper.union(r,o[e]);n.deletePolygonOnMerge(a),n.removeFeatureGroup(t),r=s}));var i=r;this.addPolygonLayer(i,!0)},i.prototype.removeFeatureGroup=function(t){t.clearLayers(),this.arrayOfFeatureGroups=this.arrayOfFeatureGroups.filter((function(e){return e!==t})),this.map.removeLayer(t)},i.prototype.removeFeatureGroupOnMerge=function(t){var e=[];if(t.getLayers()[0]){var o=t.getLayers()[0].getLatLngs()[0];this.polygonInformation.polygonInformationStorage.forEach((function(t){t.polygon.toString()!==o[0].toString()&&t.polygon[0].toString()===o[0][0].toString()&&(t.polygon=o,e.push(t)),t.polygon.toString()!==o[0].toString()&&t.polygon[0].toString()!==o[0][0].toString()&&e.push(t)})),t.clearLayers(),this.arrayOfFeatureGroups=this.arrayOfFeatureGroups.filter((function(e){return e!==t})),this.map.removeLayer(t)}},i.prototype.deletePolygonOnMerge=function(t){var e=this,o=[];this.arrayOfFeatureGroups.length>0&&this.arrayOfFeatureGroups.forEach((function(n){var r=n.getLayers()[0].getLatLngs()[0];o=l([],u(r[0])),r[0][0]!==r[0][r[0].length-1]&&o.push(r[0][0]),e.polygonArrayEqualsMerge(o,t)&&(e.removeFeatureGroupOnMerge(n),e.deletePolygon(t),e.polygonInformation.deleteTrashcan(t))}))},i.prototype.polygonArrayEqualsMerge=function(t,e){return t.toString()===e.toString()},i.prototype.polygonArrayEquals=function(t,e){if(t[0][0]){if(!t[0][0].equals(e[0][0]))return!1}else if(!t[0].equals(e[0]))return!1;return t.length===e.length},i.prototype.setLeafletMapEvents=function(t,e,o){t?this.map.dragging.enable():this.map.dragging.disable(),e?this.map.doubleClickZoom.enable():this.map.doubleClickZoom.disable(),o?this.map.scrollWheelZoom.enable():this.map.scrollWheelZoom.disable()},i.prototype.setDrawMode=function(e){if(this.drawModeSubject.next(e),this.map){var n=!0;switch(e){case t.DrawMode.Off:o.DomUtil.removeClass(this.map.getContainer(),"crosshair-cursor-enabled"),this.events(!1),this.stopDraw(),this.tracer.setStyle({color:""}),this.setLeafletMapEvents(!0,!0,!0),n=!1;break;case t.DrawMode.Add:o.DomUtil.addClass(this.map.getContainer(),"crosshair-cursor-enabled"),this.events(!0),this.tracer.setStyle({color:b.polyLineOptions.color}),this.setLeafletMapEvents(!1,!1,!1);break;case t.DrawMode.Subtract:o.DomUtil.addClass(this.map.getContainer(),"crosshair-cursor-enabled"),this.events(!0),this.tracer.setStyle({color:"#D9460F"}),this.setLeafletMapEvents(!1,!1,!1)}n?this.polygonInformation.setFreeDrawMode():this.polygonInformation.setMoveMode()}},i.prototype.modeChange=function(t){this.setDrawMode(t),this.polygonInformation.saveCurrentState()},i.prototype.drawModeClick=function(){this.polygonInformation.polygonDrawStates.isFreeDrawMode?(this.polygonInformation.setMoveMode(),this.setDrawMode(t.DrawMode.Off)):(this.polygonInformation.setFreeDrawMode(),this.setDrawMode(t.DrawMode.Add)),this.polygonInformation.saveCurrentState()},i.prototype.freedrawMenuClick=function(){this.setDrawMode(t.DrawMode.Add),this.polygonInformation.activate(),this.polygonInformation.saveCurrentState()},i.prototype.subtractClick=function(){this.setDrawMode(t.DrawMode.Subtract),this.polygonInformation.saveCurrentState()},i.prototype.resetTracker=function(){this.tracer.setLatLngs([[0,0]])},i.prototype.toggleMarkerMenu=function(){alert("open menu")},i.prototype.getHtmlContent=function(t){var e=this.popupGenerator.generateAlterPopup();return e.instance.bboxClicked.subscribe((function(e){t(e)})),e.instance.simplyfiClicked.subscribe((function(e){t(e)})),e.location.nativeElement},i.prototype.convertToBoundsPolygon=function(t,e){void 0===e&&(e=!1),this.deletePolygon([t]);var o=this.turfHelper.getMultiPolygon(this.convertToCoords([t])),n=this.turfHelper.convertToBoundingBoxPolygon(o,e);this.addPolygonLayer(this.turfHelper.getTurfPolygon(n),!1)},i.prototype.convertToSimplifiedPolygon=function(t){this.deletePolygon([t]);var e=this.turfHelper.getMultiPolygon(this.convertToCoords([t]));this.addPolygonLayer(this.turfHelper.getTurfPolygon(e),!0)},i.prototype.getMarkerIndex=function(t,e){var o=d.getBounds(t,Math.sqrt(2)/2),n=new y(o.getSouth(),o.getWest(),o.getNorth(),o.getEast()).getDirection(e),r={lat:n.lat,lng:n.lng},i=this.turfHelper.getCoord(r),a=this.turfHelper.getFeaturePointCollection(t);return this.turfHelper.getNearestPointIndex(i,a)},i.ɵfac=function(t){return new(t||i)(e.ɵɵinject(c),e.ɵɵinject(k),e.ɵɵinject(m),e.ɵɵinject(M),e.ɵɵinject(L))},i.ɵprov=e.ɵɵdefineInjectable({token:i,factory:i.ɵfac,providedIn:"root"}),i}();("undefined"==typeof ngDevMode||ngDevMode)&&e.ɵsetClassMetadata(D,[{type:e.Injectable,args:[{providedIn:"root"}]}],(function(){return[{type:c},{type:k},{type:m},{type:M},{type:L}]}),null);var I=function(){function t(){}return t.ɵfac=function(e){return new(e||t)},t.ɵmod=e.ɵɵdefineNgModule({type:t}),t.ɵinj=e.ɵɵdefineInjector({providers:[D,M,c],imports:[[]]}),t}();("undefined"==typeof ngDevMode||ngDevMode)&&e.ɵsetClassMetadata(I,[{type:e.NgModule,args:[{declarations:[w],imports:[],providers:[D,M,c],exports:[w],entryComponents:[w]}]}],null,null),("undefined"==typeof ngJitMode||ngJitMode)&&e.ɵɵsetNgModuleScope(I,{declarations:[w],exports:[w]}),t.AlterPolygonComponent=w,t.ComponentGeneraterService=k,t.MyLibModule=I,t.PolyDrawService=D,t.PolyStateService=c,t.PolygonDrawStates=P,t.PolygonInfo=S,t.PolygonInformationService=M,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=my-lib.umd.min.js.map